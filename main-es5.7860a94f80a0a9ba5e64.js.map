{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/environments/environmentType.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/services/scroll.service.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NotFoundComponent","_classCallCheck","this","_createClass","key","value","tslib_es6","a","Object","core","n","selector","template","EnvironmentType","Group","AssetFilters","bbox","assetType","Set","has","add","Project","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","length","asset_type","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","C","providedIn","notifications_service_NotificationsService","toastr","authService","TIMEOUT","_notifications","notifications","isLoggedIn","interval","getRecent","_this3","baseUrl","now","toISOString","notes","forEach","note","status","showSuccessToast","message","showErrorToast","success","error","ngx_toastr","geo_data_service_GeoDataService","notificationsService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","console","log","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","featureId","groupData","pc","file","form","FormData","append","files","tmp","system","path","fileList","remoteFile","system_id","response","importImage","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","bsModalService","ngx_foundation","c","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_this17","_this18","data","prom","proj","put","getProjects","tap","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","_itemsSelected","itemsSelected","groupList","featureList","tempGroupList","group","_step2","_iterator2","_createForOfIteratorHelper","s","done","color","icon","findIndex","item","err","_iterator","_step","_loop","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","extra","tagData","checkedOptions","chosenTag","option","notebook","newTag","optData","newOpt","radioOptions","selectedProject","selectedFeatureID","selectedFeature","undefined","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","updateFormItem","selectedColor","style","currentID","checkDefault","faIcon","updateFeatureProperty","groupObject","filter","opt","formObj","finalArray","gName","tag","tLabel","index","_iterator3","_step3","tTag","Number","ind","splice","tGroup","_iterator4","_step4","_iterator5","_step5","_this37","_step6","_iterator6","selection","componentId","_iterator7","_step7","compId","rOption","_this39","_step8","_iterator8","change","componentID","_iterator9","_step9","compID","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","newGroup","_this41","groups$","formType","formName","formLabel","formValue","formRequired","event","target","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","_this42","_step10","_iterator10","_step11","myOpts","_iterator11","hasOwnProperty","saveTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","tagList","getTags","_this43","activeGroup$","activeFeatureId$","formGroup$","_step12","_iterator12","getRawValue","unsubscribe","Activate","authSvc","state","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this44","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this45","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","d","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","_systems","systems","_this46","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","offset","limit","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","date","File","lastModified","valueOf","msg","sysStr","lastSystem","fileStr","lastFile","noPreviousSelections","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","_ModalFileBrowserComponent_","ModalFileBrowserComponent_1","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","_this48","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","currentDirectory","init","browse","pth","getFiles","_this49","hasMoreFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","shiftKey","selectFilesShiftClick","checkIfSelectable","addSelectedFile","selectShift","firstFileIndex","saveState","Array","from","close","_step13","count","_iterator13","clear","addRangeFiles","lastFileIndex","again","maxIndex","max","i","min","R","modal_download_selector_component_ModalDownloadSelectorComponent","_ModalDownloadSelectorComponent_","ModalDownloadSelectorComponent_1","passbackData","fileExtension","_this50","downloadSelectForm","Name","Extension","_ref3","_this51","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","p","create","modal_share_project_component_ModalShareProjectComponent","_this52","projShareForm","activeProj","projectUsers","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","_this53","confirm","uuid","update","B","args","ScrollService","scrollRestored","scrollPosition","newPos","documentElement","scrollTop","scroll","top","control_bar_component_ControlBarComponent","filesService","scrollService","REFRESHTIME","LatLng","liveRefresh","timer","foundFilePaths","_this54","getState","setActiveProject","setGroupProperties","hasSuccessNotification","some","hasFailureNotification","substring","uploadNewFeature","createBlankFeature","lastProj","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","setUnselectAll","setItemsSelected","timerSubscription","reloadFeatures","setLiveRefresh","_this57","afterClosed","importFileFromTapis","coordinates","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","_step14","_iterator14","featProp","addTempGroup","setShowGroup","_this60","setScrollRestored","scrollPos","setScrollPosition","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","content","forExport","CSVHolder","JSONHolder","projID","element","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","download","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","reload","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this63","projectsExist","imagesExist","featureListScroll","slice","groupExist","_this64","setActiveFeatureId","_this65","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this66","featurePath","_this67","v","geoData","deleteFeature","_iterator15","_step15","selectGroupForm","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","_this72","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","_this73","what","_this75","_step16","_iterator16","_iterator17","_step17","saveStyles","_iterator18","_step18","_loop2","SelectImageComponent","_this78","activeFeatureNum$","_this79","asset","_this82","_step19","_iterator19","assetId","deleteGroup","getActiveFeatures","FormFieldsComponent","controls","valid","FormCheckBoxComponent","isChecked","_this84","addCheckedOpt","deleteCheckedOpt","FormDropDownComponent","_this85","getSelectedRadio","updateSelectedRadio","FormFileComponent","FormRadioComponent","_this86","FormTextBoxComponent","_this87","updateNotes","FormColorComponent","chosenColor","_this88","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule"],"mappings":"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","file":"main-es5.7860a94f80a0a9ba5e64.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\" (dblclick)=\\\"toRoot()\\\">\\r\\n\\t\\t<i class=\\\"fas fa-folder\\\"></i>\\r\\n\\t\\t<span > Home </span>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList; let fileIndex = index\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select($event, file, fileIndex)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"basic\\\" (click)=\\\"selectAll()\\\">Select all</button>\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\" (keyup.enter)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: flex;\\n  height: 100vh;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div *ngIf=\\\"tempGroup.length === 1\\\">\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div *ngIf=\\\"tempGroup.length > 1\\\">\\r\\n\\t\\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"addGroups(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\" (click)=\\\"deleteFromGroup(color)\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect  class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea  [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (keyup)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.card-buttons {\\n  align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  transition: opacity 0.3s ease;\\n  backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  transition: 0.3s ease;\\n  align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: flex;\\n  justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- <div *ngFor = \\\"let icon of groupIcon\\\">  -->\\r\\n\\t\\t\\t\\t<!-- <div *ngIf = \\\"icon.groupName == activeGroup\\\"> -->\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<!-- <option>------</option> -->\\r\\n\\t\\t\\t<option *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\t\\r\\n\\t<button mat-raised-button class=\\\"button-spacing\\\" [disabled]=\\\"!itemsSelected\\\" (click)=\\\"clearAll()\\\">Clear Selected</button>\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { INotification } from '../models/notification';\r\nimport { interval, Observable, ReplaySubject } from 'rxjs';\r\nimport { AuthService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n  // Interval time to get notifications in millisecs\r\n  private TIMEOUT = 5000;\r\n  private _notifications: ReplaySubject<Array<INotification>> = new ReplaySubject<Array<INotification>>(1);\r\n  public readonly  notifications: Observable<Array<INotification>> = this._notifications.asObservable();\r\n\r\n  constructor(private toastr: ToastrService,\r\n    private http: HttpClient,\r\n    private authService: AuthService ) {\r\n      if (this.authService.isLoggedIn()) {\r\n      const timer = interval(this.TIMEOUT);\r\n      timer.subscribe((next) => {\r\n        this.getRecent();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Sends a request to GeoAPI to retrieve recent notifications\r\n  getRecent(): void {\r\n    let baseUrl = environment.apiUrl + 'notifications/';\r\n    let now = new Date();\r\n    let then = new Date(now.getTime() - this.TIMEOUT);\r\n\r\n    this.http.get<Array<INotification>>(baseUrl + `?startDate=${then.toISOString()}`)\r\n      .subscribe( (notes) => {\r\n        this._notifications.next(notes);\r\n        notes.forEach( (note) => {\r\n          switch (note.status) {\r\n            case 'success':\r\n              this.showSuccessToast(note.message);\r\n              break;\r\n            case 'error':\r\n              this.showErrorToast(note.message);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  showSuccessToast(message: string): void {\r\n    this.toastr.success(message);\r\n  }\r\n\r\n  showErrorToast(message: string): void {\r\n    this.toastr.error(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport { NotificationsService } from './notifications.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n  private fileList: Array<RemoteFile>\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n\tprivate notificationsService: NotificationsService) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\t  console.log(fc)\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\t  console.log(resp)\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.fileList = tmp\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.notificationsService.showSuccessToast('Import started!');\r\n\t  }, error => {\r\n\t\tthis.notificationsService.showErrorToast('Import failed! Try again?');\r\n\t  });\r\n  }\r\n\r\n  //An alternate function for importing images with no GPS data. A feature is created elsewhere, and the image is added to the feature\r\n  //Inputs:\r\n  //projectId: Id number of current project\r\n  //features: A pre-created features with user-defined or zeroed out gps data\r\n  //file: A Tapis Remote File containing the image to be imported\r\n  importImage(projectId: number, feature: Feature, path: string): void {\r\n\tlet featureId = feature.id\r\n\tlet file\r\n\tthis.fileList.forEach(remoteFile =>{\r\n\t\tif (remoteFile.path == path) {\r\n\t\t\tfile = remoteFile\r\n\t\t}\r\n\t});\r\n\tlet payload = {system_id: file.system, path: file.path};\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/assets/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\tthis.notificationsService.showSuccessToast('Import started!');\r\n\t\t//this.getFeatures(projectId)\r\n\t});\r\n  }\r\n\r\n  //Creates a new feature from an uploaded locally created feature\r\n  uploadNewFeature(projectId: number, feature:Feature, path: string): void {\r\n\tlet payload = feature;\r\n\tlet response\r\n\t//Calls the addFeatureAsset route in GeoAPI, resp is a list of features\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId)\r\n\t\tresponse = new Feature(resp[0])\r\n\t\tthis.importImage(projectId, response, path)\r\n\t});\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    console.log(\"HAHAHA NOPE\")\r\n  });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      //below code from here to next comment does nothing\r\n      // const p = new Project();\r\n      // p.name = 'test';\r\n      // p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    console.log(this._activeProject)\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    //saves change as last visited project\r\n    window.localStorage.setItem(\"lastProj\", JSON.stringify(proj))\r\n    try {\r\n      this._activeProject.next(proj);\r\n    } catch (error) {\r\n      return error\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared.\r\n  delete(data: Project):void{\r\n    window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  private _itemsSelected: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public itemsSelected: Observable<boolean> = this._itemsSelected.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t//   console.log(tempGroupList[group.name].features)\r\n\t\t  let index = tempGroupList[group.name].features.findIndex(item => (item == feat))\r\n\t\t  if(index == -1){\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\t\t  }\r\n\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n\tthis._itemsSelected.next(!select);\r\n  }\r\n\r\n  setItemsSelected(select: boolean): void {\r\n\tthis._itemsSelected.next(select)\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProjectsService } from './projects.service';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\r\nimport { fadeInItems } from '@angular/material';\r\nimport { Feature, FeatureCollection } from 'geojson';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  \r\n\r\n  private activeGroup\r\n  private groupList\r\n  private featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n  private selectedProject\r\n  private selectedFeatureID\r\n  private selectedFeature\r\n  tempGroup: Array<Feature>;\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService) {\r\n\r\n\t\t\t\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t\t\t\t\tthis.activeGroup = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.groups.subscribe((next) => {\r\n\t\t\t\t\tthis.groupList = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\t\t\t\tthis.selectedProject = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.activeFeatureId.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeatureID = next\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.groupsService.activeFeature.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeature = next\r\n\t\t\t\t});\r\n\t\t\t\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\t\t\t\tthis.features = fc;\r\n\t\t\t  \r\n\t\t\t\t\tif (this.features != undefined) {\r\n\t\t\t\t\t  this.featureList = this.features.features;\r\n\t\t\t\t\t}\r\n\t\t\t\t  });\r\n\t\t\t  }\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);/*console.log(\"AYA\"); console.log(this._forms); console.log(current)*/});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  checkDefault(selectedColor:string){\r\n\tif(selectedColor === \"default\") {\r\n\t\ttry {\r\n\t\t\tselectedColor = this.selectedFeature.properties.style.color\r\n\t\t} catch (error) {\r\n\t\t\tselectedColor = \"#00C8FF\"\r\n\t\t}\r\n\t}\r\n\treturn selectedColor\r\n  }\r\n\r\n  //Inputs:\r\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\r\n  //This method accesses group services to retrive the current group's icon as well\r\n  saveStyles(selectedColor:string, currentID:number){\r\n\tlet icon:string\r\n\tlet payload\r\n\r\n\t//A check to see if the color isn't supposed to be changed\r\n\tselectedColor = this.checkDefault(selectedColor)\r\n\r\n\t//Cycles through each group until it finds one that matches the active group\r\n\tthis.groupList.forEach(group => {\r\n\t\tif ((group.name === this.activeGroup)) {\r\n\t\t\ticon = group.icon\r\n\r\n\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\tlet tempGroup = [{\r\n\t\t\t\tname: group.name,\r\n\t\t\t\tcolor: group.color,\r\n\t\t\t\ticon: group.icon\r\n\t\t\t}]\r\n\t\t\t\r\n\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\tpayload = {\r\n\t\t\t\tgroup: tempGroup,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\tcolor: selectedColor\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tconsole.log(payload)\r\n\t//Finally, sends the payload and projectID to GeoAPI to update the feature\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, currentID ,payload)\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\", extra: []};\r\n  tagData = []\r\n  checkedOptions = []\r\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  notebook = []; //Var for storing note tags\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.tagData[index].label = tag.label;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tagData.push(tag);\r\n\t\tconsole.log(\"IT WORKED\")\r\n\t\t// this.geoDataService.updateFeatureProperty()\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\ngetTags(): tags[]{\r\n\treturn this.tagData;\r\n}\r\n\r\nnewTag: object[] = [];\r\ndeleteTag(gName: string, tag: tags): void{\r\n    // for (let tag in this.tagData){\r\n\t// \tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n\t// \t// if(tag['groupName'] === gName && tag['label'] === tLabel)\r\n\t// \tconsole.log(tag)\r\n\t// \tif (index > -1) {\r\n\t// \t// delete this.exampleNote[index];\r\n\t// \tthis.tagData.splice(index, 1);\r\n\t// \t}\r\n\t// }\r\n\t// const index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n\t// \t// if(tag['groupName'] === gName && tag['label'] === tLabel)\r\n\t// \tif (index > -1) {\r\n\t// \t// delete this.exampleNote[index];\r\n\t// \tthis.tagData.splice(index, 1);\r\n\t// \t}\r\n\tconsole.log(tag)\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\t\ticon = group.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: group.name,\r\n\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\ticon: group.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag: []\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(payload.tag)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup){\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\tconsole.log(feat.properties)\r\n\t\t\t\tconsole.log(this.activeGroup)\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tconsole.log(feat)\r\n\t\t\t//   console.log(typeof(feat.properties.tag))\r\n\t\t\tif(feat.properties.tag != undefined){\r\n\t\t\t\tfeat.properties.tag.forEach(tTag => {\r\n\t\t\t\t\tconsole.log(tTag)\r\n\t\t\t\t\tconsole.log(tag)\r\n\t\t\t\t\t// console.log(tTag != tag)\r\n\t\t\t\t\tconsole.log((tTag.groupName === tag.groupName &&  tTag.label === tag.label &&  tag.type === tag.type))\r\n\t\t\t\t\tif((tTag.groupName === tag.groupName && tTag.label === tag.label &&  tag.type === tag.type)){\r\n\t\t\t\t\t// this.newTag.push(tTag)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tpayload.tag.push(tTag)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// payload.tag.push(this.newTag)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(payload)\r\n\t\t\t\t// this.newTag = []\r\n\t\t\t}\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\tpayload.tag = []\r\n\t\t}\r\n\r\n\r\n\tconsole.log(payload)\r\n\t// this.newTag = []\r\n\t\r\n}\r\n\r\noptData = []\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.optData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.optData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.optData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object, id: number, group: string, label:string): void {\r\n\tlet option = { key: opt['key'], label: opt['label'], id: id , group: group, title: label}\r\n\tthis.checkedOptions.push(option)\r\n\tconsole.log(this.checkedOptions)\r\n\tlet icon:string\r\n\tlet payload\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(payload)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\tconsole.log(feat.properties)\r\n\t\t\t\tconsole.log(this.activeGroup)\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tfeat.properties.tag.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\r\n\t\t\t\t\t\ttag.extra.push(option)\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(payload)\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\ndeleteCheckedOpt(opt:object, id:number, group: string, label: string): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\r\n\tthis.checkedOptions.splice(index,1)\r\n\tconsole.log(this.checkedOptions)\r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(payload)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\tconsole.log(feat.properties)\r\n\t\t\t\tconsole.log(this.activeGroup)\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tfeat.properties.tag.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\r\n\t\t\t\t\t\ttag.extra.splice(index,1)\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(payload)\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\nnewOpt: object[] = [];\r\ngetCheckedOpt(): any[]{\r\n\tthis.newOpt = []\r\n\tfor (let feat of this.featureList){\r\n\t\t//   console.log(typeof(feat.properties.tag))\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   console.log(tag)\r\n\t\t\t\tthis.newOpt.push(tag.extra)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\t//   console.log(this.newOpt)\r\n\treturn this.newOpt;\r\n}\r\n// renameTagOpt(gName:string, opt:object, tag: tags): void {\r\n// \tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tag.label);\r\n// \tif(index >-1) {\r\n// \t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n// \t\tif (ind > -1){\r\n// \t\t\tconsole.log(opt)\r\n// \t\t\tconsole.log(this.tagData[index].options[ind]);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nradioOptions = []\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number, feature: number, group: string, label: string){ \r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tconsole.log(tGroup)\r\n\t\tconsole.log(group)\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(payload)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\tconsole.log(feat.properties)\r\n\t\t\t\tconsole.log(this.activeGroup)\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tfeat.properties.tag.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compId'] === componentId && item['groupName'] === group && item['label'] === label);\r\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = selection\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlet rOption = {option: selection, id: feature, compId: componentId, groupName: group, label: label}\r\n\t\t\t\t\t\t\ttag.extra.push(rOption)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n\r\n\t// if (index > -1) {\r\n\t// \t// console.log(\"IT WORKED\")\r\n\t// \tthis.radioOptions[index]['option'] = selection;\r\n\t// \t// this.tagData[index].options = tag.options;\r\n\t// }\r\n\t// else {\r\n\t// \tlet rOption = {option: selection, id: feature, compId: componentId} \r\n\t// \tthis.radioOptions.push(rOption);\r\n\t// \t// console.log(\"Tag data:\")\r\n\t// \t// console.log(this.tagData)\r\n\t// }\r\n\t// this.chosenTag[componentId] = {option: selection, id:id}; \r\n}\r\n\r\ngetSelectedRadio(): any[] { \r\n\tthis.newOpt = []\r\n\tfor (let feat of this.featureList){\r\n\t\t//   console.log(typeof(feat.properties.tag))\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   console.log(tag)\r\n\t\t\t\tthis.newOpt.push(tag.extra)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\t//   console.log(this.newOpt)\r\n\treturn this.newOpt;\r\n }\r\n\r\n//Notes tag functions\r\nupdateNotes(change, componentID: number, feature: number, group:string, label:string){\r\n\t// const index = this.radioOptions.findIndex(item => item['id'] === feature);\r\n\tlet icon:string\r\n\tlet payload\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\t// console.log(tGroup)\r\n\t\t// console.log(group)\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(payload)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\tconsole.log(feat.properties)\r\n\t\t\t\tconsole.log(this.activeGroup)\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tfeat.properties.tag.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compID'] === componentID && item['groupName'] === group  && item['label'] === label);\r\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\tconsole.log(tag.extra)\r\n\t\t\t\t\t\t\tconsole.log(tag.extra[index])\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = change\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlet rOption = {option: change, id: feature, groupName: group, compID: componentID, label:label} \r\n\t\t\t\t\t\t\tconsole.log(rOption)\r\n\t\t\t\t\t\t\ttag.extra.push(rOption);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t\t}\r\n\t// if (index > -1) {\r\n\t// \t// console.log(\"IT WORKED\")\r\n\t// \tthis.notebook[index]['option'] = change\r\n\t// }\r\n\t// else {\r\n\t// \tlet rOption = {option: change, id: feature, groupName: group} \r\n\t// \tthis.notebook.push(rOption);\r\n\t// \t// console.log(this.tagData)\r\n\t// }\r\n}\r\n\r\ngetNotes(): any[]{ return this.notebook }\r\n}\r\n\r\n\r\n\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>,\r\n\tfeature: string | number,\r\n\textra: Array<Group>\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature, Project } from 'src/app/models/models';\r\nimport { feature } from '@turf/turf';\r\nimport { GeoDataService } from 'src/app/services/geo-data.service';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { FeatureCollection } from 'geojson';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n  groupList: Array<any>;\r\n  groups$: Subscription;\r\n  tempGroup: Array<Feature>;\r\n  private selectedProject;\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n  newTag: object[] = [];\r\n  newGroup:object[] = [];\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router,\r\n\tprivate geoDataService: GeoDataService,\r\n\tprivate projectsService: ProjectsService,) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t  });\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\tthis.selectedProject = next;\r\n\t\t//retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t\t// this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\tlet icon:string\r\n\tlet payload\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\t\ticon = group.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: group.name,\r\n\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\ticon: group.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(payload)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log(this.groupList)\r\n\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tconsole.log(this.groupList)\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\t// console.log(feat.properties)\r\n\t\t\t\t// console.log(this.activeGroup)\r\n\t\t\t\tif(feat.properties.group.length > 1){\r\n\t\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpayload.group.push(tempGroup)\r\n\t\t\t\t\t\tconsole.log(this.groupList)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"duck\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log(this.newGroup)\r\n\t\t\t// console.log(this.newTag)\r\n\t\t\t  \r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: this.formType,\r\n\t\t\t\tgroupName: this.formName,\r\n\t\t\t\tlabel: this.formLabel,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: [],\r\n\t\t\t\tfeature: feat.id,\r\n\t\t\t\textra: []\r\n\t\t\t}\r\n\t\t\tthis.openOption[this.formLabel] = false;\r\n\r\n\t\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\t\t\tlet myOpts = [];\r\n\t\t\t\tfor (const opt of this.formOptions) {\r\n\t\t\t\t  myOpts.push({\r\n\t\t\t\t\tkey: opt[0],\r\n\t\t\t\t\tlabel: opt,\r\n\t\t\t\t\t// image:\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tformItem.options = this.formOptions;\r\n\t\t\t  }\r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tfeat.properties.tag.forEach(tag => {\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// payload.group.push(this.groupList)\r\n\r\n\t\t\t// feat.properties.group.forEach(groupList => {\r\n\t\t\t// \tpayload.group.push(groupList)\r\n\t\t\t// });\r\n\r\n\t\t\tconsole.log(this.groupList)\r\n\r\n\t\t\t//   console.log(payload)\r\n\t\t\t//   console.log(feat.id)\r\n\t\t\t// console.log(typeof(formItem))\r\n\t\t\t// payload.tag.push(this.newTag)\r\n\t\t\t// console.log(payload.tag[0])\r\n\t\t\t// console.log(!payload.tag[0].hasOwnProperty(\"groupName\"))\r\n\t\t\tif(payload.tag[0] == undefined ){\r\n\t\t\t\tpayload.tag[0] = formItem\r\n\t\t\t}else{\r\n\t\t\t\tif(!payload.tag[0].hasOwnProperty(\"groupName\")){payload.tag[0] = formItem}\r\n\t\t\t\telse {payload.tag.push(formItem)}\r\n\t\t\t}\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\t// console.log(payload)\r\n\r\n\t\t\tconsole.log(this.groupList)\r\n\r\n\t\t\tthis.formItemList.push(formItem);\r\n\t\t\t// this.formsService.addForm(this.activeGroup, formItem);\r\n\t\t\t  this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\t\r\n\t\t\tconsole.log(this.groupList)\r\n\t\t\t\r\n\t\t\tpayload.tag = []\r\n\t\t\tthis.newGroup = []\r\n\t}\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\t  \r\n\t  console.log(this.featureList)\r\n\t  \r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t// }\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { GeoDataService } from 'src/app/services/geo-data.service';\r\nimport { FeatureCollection } from 'geojson';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = this.formsService.getTags();\r\n  newTag: tags[] = [];\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router,\r\n\tprivate geoDataService: GeoDataService,) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t}\r\n\t  });\r\n\r\n\t  // this is to get the list of tags so far\r\n\t  for (let feat of this.featureList){\r\n\t\t//   console.log(typeof(feat.properties.tag))\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   console.log(tag)\r\n\t\t\t\tthis.newTag.push(tag)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\r\n\t//   console.log(this.newTag)\r\n\t//   console.log(this.tagList)\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\tconsole.log(this.tagList)\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\t// console.log(this.payload);\r\n\t// this.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n\t// console.log(this.form)\r\n\t// this.formsService.saveTag(this.activeGroup, this.form.value, this.payload)\r\n\tconsole.log(this.tagList)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { SystemSummary} from 'ng-tapis';\r\n//import { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n  public lastSystem:SystemSummary //The last filesystem the user was browsing\r\n  public lastFile:RemoteFile; //The last directory the user was browsing\r\n  public noPreviousSelections:boolean\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string, offset: number, limit: number) {\r\n    return this.tapis.filesList({systemId: system, filePath: path, offset, limit});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n\r\n  //Saves the current file directory and file system to Local Storage\r\n  saveState() {\r\n    let sysStr = JSON.stringify(this.lastSystem)\r\n    let fileStr = JSON.stringify(this.lastFile)\r\n    window.localStorage.setItem(\"system\", sysStr)\r\n    window.localStorage.setItem(\"file\", fileStr)\r\n  }\r\n\r\n  //Attempts to retrieve the last used state\r\n  getState() {\r\n    try {\r\n      this.lastSystem = JSON.parse(window.localStorage.getItem(\"system\"));\r\n      this.lastFile = JSON.parse(window.localStorage.getItem(\"file\"));\r\n      this.noPreviousSelections = this.lastFile == null;\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  private offset:number;\r\n  public firstFileIndex: number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t//retrive state data\r\n\t//this.tapisFilesService.getState()\r\n\r\n\t// This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.tapisFilesService.lastSystem\r\n\r\n\tif (this.selectedSystem == null) {\r\n\t\tthis.selectedSystem = this.myDataSystem\r\n\t\tthis.tapisFilesService.lastSystem = this.myDataSystem\r\n\t}\r\n\r\n\t//If the user has already navigated to a folder, restore those options\r\n\tthis.currentDirectory = this.tapisFilesService.lastFile\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\t//If the user hasn't yet opened the file browser, set the last file to an init file.\r\n\tif ( this.tapisFilesService.noPreviousSelections) {\r\n\t\tthis.selectedSystem = this.myDataSystem;\r\n\t\tthis.tapisFilesService.lastFile = init\r\n\t\tthis.tapisFilesService.noPreviousSelections = false\r\n\t}\r\n\tthis.browse(this.tapisFilesService.lastFile);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.selectedSystem = system\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tthis.selectedSystem = this.selectedSystem //Self-assignment keeps the system name from disappearing while browsing subfolders\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\tthis.tapisFilesService.lastFile = file //Updates the last directory visted\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  toRoot() {\r\n\tlet pth;\r\n\tthis.selectedSystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: this.selectedSystem.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init)\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalFileBrowserComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalFileBrowserComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(event: any, file: RemoteFile, index: number) {\r\n\tif (event.shiftKey) {\r\n\t\tthis.selectFilesShiftClick(index, file);\r\n\t  }\r\n\telse {\r\n\t\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t\t\tthis.addSelectedFile(file, index);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  selectFilesShiftClick(index: number, file: RemoteFile) {\r\n    // this.selectedFiles.clear();\r\n    this.selectShift(index, file);\r\n  }\r\n\r\n\r\n  addSelectedFile(file: RemoteFile, index: number) {\r\n\tif (index != -1) {\r\n\t\tthis.firstFileIndex = index;\r\n\t  }\r\n\r\n\tif(this.tapisFilesService.checkIfSelectable(file)){\r\n\t\tif (this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.selectedFiles.delete(file.path);\r\n\t\t} else {\r\n\t\t\tthis.selectedFiles.set(file.path, file);\r\n\t\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t\t}\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tthis.tapisFilesService.saveState()\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.tapisFilesService.saveState()\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.dialogRef.close()\r\n  }\r\n\r\n  selectAll(){\r\n\t  let indexTmp = -1\r\n\t  let count = 0\r\n\t  for(let file of this.filesList){\r\n\t\tif (! this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.select(\"\",file,indexTmp)\r\n\t\t\tcount += 1\r\n\t\t}\r\n\t  }\r\n\t  if (count == 1){\r\n\t\tthis.selectedFiles.clear();\r\n\t  }\r\n  }\r\n\r\n  selectShift(index: number, file: RemoteFile) {\r\n    if (this.firstFileIndex != undefined && this.firstFileIndex != index) {\r\n      this.addRangeFiles(this.firstFileIndex, index, true);\r\n    } else {\r\n      this.addSelectedFile(file, index);\r\n    }\r\n  }\r\n\r\n  addRangeFiles(firstFileIndex: number, lastFileIndex: number, again: boolean) {\r\n    let maxIndex = Math.max(firstFileIndex, lastFileIndex);\r\n    let minIndex = Math.min(firstFileIndex, lastFileIndex);\r\n\r\n    for (let i = minIndex; i < maxIndex + 1; ++i) {\r\n      this.addSelectedFile(this.filesList[i], -1);\r\n    }\r\n\r\n    if (again) {\r\n      this.addSelectedFile(this.filesList[firstFileIndex], -1);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n\t\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n  private offset:number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalDownloadSelectorComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalDownloadSelectorComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollService {\r\n\r\n  constructor() { }\r\n\r\n  public scrollRestored:boolean = true //if true, the scroll was restored to the proper place\r\n  public scrollPosition:number = 0\r\n\r\n  setScrollRestored(change:boolean) { this.scrollRestored = change; }\r\n\r\n  setScrollPosition(newPos:number) { this.scrollPosition = document.documentElement.scrollTop; }\r\n\r\n  scroll() {\r\n    //Attempts to scroll to the specified location\r\n\t\tdocument.documentElement.scroll({top: this.scrollPosition})\r\n\t\t//if it reaches there, marks the check as complete\r\n\t\tif(document.documentElement.scrollTop == this.scrollPosition){\r\n\t\t\tthis.scrollRestored = false\r\n\t\t}\r\n  }\r\n}\r\n","import { Component, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport { NotificationsService } from 'src/app/services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n  itemsSelected:boolean = false;\r\n  foundFilePaths = []\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService,\r\n\t\t\t  private notificationsService: NotificationsService) {}\r\n\r\n  ngOnInit() {\r\n\t  this.filesService.getState()\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\t(this.notificationsService.notifications.subscribe(next => {\r\n\t\tlet hasSuccessNotification = next.some(note => note.status === 'success');\r\n\t\tlet hasFailureNotification = next.some(note => note.status === 'error');\r\n\t\tif (hasSuccessNotification) {\r\n\t\t  this.geoDataService.getFeatures(this.selectedProject.id);\r\n\t\t}\r\n\t\tif (hasFailureNotification) {\r\n\t\t\tnext.forEach(item => {\r\n\t\t\t\t//Compiles a list of all necessary files to import via the alt method\r\n\t\t\t\tif( (item.message.substring(0,16) == \"Error importing \") && !( this.foundFilePaths.some(filePath => filePath === item.message.substring(16)) ) ) {\r\n\t\t\t\t\tlet path = item.message.substring(16)\r\n\t\t\t\t\tconsole.log(path)\r\n\t\t\t\t\tthis.geoDataService.uploadNewFeature(this.selectedProject.id, this.createBlankFeature(), path)\r\n\t\t\t\t\tthis.foundFilePaths.push(path)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}));\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tlet lastProj\r\n\t\ttry {\r\n\t\t\t//restores view to the last visited project from local storage\r\n\t\t\tlastProj = JSON.parse(window.localStorage.getItem(\"lastProj\"))\r\n\t\t\tconsole.log(lastProj)\r\n\t\t} catch (error) {\r\n\t\t\tlastProj = this.projectsService.setActiveProject(this.projects[0]);\r\n\t\t}\r\n\r\n\t\t//If lastProj is null, then there is no project saved, or can be found, default to the first project in the list\r\n\t\tif(lastProj == \"none\" || lastProj == null) {\r\n\t\t\tlastProj = this.projects[0]\r\n\t\t}\r\n\r\n\t\tthis.projectsService.setActiveProject(lastProj);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.itemsSelected.subscribe((next) => {\r\n\t\tthis.itemsSelected = next;\r\n\t  })\r\n\t  //this.setLiveRefresh(true)\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\t// this.timerSubscription = this.timer.subscribe( () => {\r\n\t//   this.reloadFeatures();\r\n\t// });\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  clearAll(){\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.groupsService.setItemsSelected(false);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  //Similar to setLiveRefresh, but it runs the time out once and then unsubscribes from the timer\r\n  startRefreshTimer(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); this.setLiveRefresh(false)}) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\t//Refreshes the list of found paths used in importing images without Geo tagging\r\n\tthis.foundFilePaths = []\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t\t/*if (files != null) {\r\n\t\t\tfiles.forEach( (file) => {\r\n\t\t\t\tthis.geoDataService.uploadNewFeature(this.selectedProject.id, this.createBlankFeature(), file)\r\n\t\t\t})};*/\r\n\t\t}\r\n\t);\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  //Creates a feature with a long/lat value of 0,0 and no associated image.\r\n  createBlankFeature() {\r\n\tlet blankFeature:Feature = {\r\n\t\t\"type\": \"Feature\",\r\n\t\t\"geometry\": {\r\n\t\t  \"type\": \"Point\",\r\n\t\t  \"coordinates\": [0, 0]\r\n\t\t},\r\n\t\t\"properties\": {\r\n\t\t}\r\n\t  }\r\n\treturn blankFeature\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tlet modal = this.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0])\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tif( !this.showSidebar) {\r\n\t\tlet scrollPos = document.documentElement.scrollTop\r\n\t\tthis.scrollService.setScrollPosition(scrollPos)\r\n\t} else {\r\n\t\tthis.scrollService.setScrollRestored(true)\r\n\t}\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {AfterViewChecked, Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit, AfterViewChecked {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService) { }\r\n\r\n  \r\n\r\n  ngAfterViewChecked() {\r\n\tif ( this.scrollService.scrollRestored ) {\r\n\t\tthis.scrollService.scroll()\r\n\t\tthis.scrollService.setScrollPosition(document.documentElement.scrollTop)\r\n\t}\r\n  }\r\n\r\n  ngOnInit() {\r\n\t//console.log(\"GOT HERE- PLS\")\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t\t//console.log(\"loading should work?\")\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\t//console.log(\"GOT HERE- NO PROJ FOUND\")\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\r\n\t//I think doing a more natural refresh in here will cause a dynamic reload\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t\t//console.log(\"This didn't work\")\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormsService, tags } from 'src/app/services/forms.service';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false; //Controls the whether or not an image box is selected or not\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private formsService: FormsService,\r\n\t\t\t   private dialog: MatDialog,\r\n\t\t\t   private scrollService: ScrollService\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t//   console.log(this.groupList)\r\n\t//   console.log(\"HELLOOOOOOO\")\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\t// console.log(this.groupList)\r\n\t\t\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t\t// console.log(e)\r\n\t\t\te.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t  this.tempGroup = []\r\n\t}\r\n\tthis.status = !this.status;\r\n\tif(this.status) {\r\n\t\tthis.groupsService.setItemsSelected(this.status)\r\n\t}\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\tconst geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n\t//Resets contents of temp group\r\n\tthis.groupsService.addTempGroup([])\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\t// console.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string, feat: Feature) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\t//   console.log(this.feature)\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = feat.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\t// console.log(this.tagList)\r\n\t\r\n\tfor (let tag of this.tagList){\r\n\t\tif (tag.feature === this.tempGroup[0].id && tag.groupName === name){\r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: tag.type,\r\n\t\t\t\tgroupName: name,\r\n\t\t\t\tlabel: tag.label,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: tag.options,\r\n\t\t\t\tfeature: this.feature.id,\r\n\t\t\t\textra: []\r\n\t\t\t}\r\n\t\t\tthis.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t}\r\n\t}\r\n\r\n\t// console.log(name)\r\n\t// console.log(featProp)\r\n\t// console.log(this.tempGroup[0].id)\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  addGroups(name: string) {\r\n\t  this.tempGroup.forEach( (feat) => {\r\n\t\t  this.selectGroupForm(name, feat)\r\n\t  })\r\n\t}\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n \r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t//   if (fc) {\r\n\t// \tthis.featureList = fc.features;\r\n\t//   }\r\n\t// });\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\t//   console.log(this.tempGroup)\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\t// console.log(this.groupList)\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\tthis.dialog.open(template);\r\n\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tlet index = 0\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t console.log(feat.id)/*\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tindex = this.groupList.findIndex(item => item.features[index].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: this.groupList[index].name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );*/\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t\tthis.formsService.saveStyles(\"default\", Number(feat.id))\r\n\t}\r\n\r\n\r\n\t//   this.currentIcon = icon;\r\n\t//   this.groupList.forEach(e => {\r\n\t// \tif (e.name == this.selectedGroup) {\r\n\t// \t  e.icon = icon;\r\n\t// \t}\r\n\t//   });\r\n\t//   this.groupsService.addGroup(this.groupList);\r\n\t//   for (let feat of this.featureList) {\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tlet groupProp = this.tempGroup\r\n\t// \tconsole.log(featProp)\r\n\t// \tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: featProp.name,\r\n\t// \t\t  color: featProp.color,\r\n\t// \t\t  icon: icon\r\n\t// \t\t});\r\n\t// \t  }\r\n\t// \tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t// \tthis.groupsService.setActiveGroup(this.selectedGroup);\r\n\t// }\r\n\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: this.groupList[index].icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n\t}\r\n\t// console.log(this.selectedProject.id)\r\n\t// console.log(this.tempGroup[0])\r\n\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures();\r\n\tfeatProp.group = featProp.filter(e => e.properties.group.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures()[0].id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n  private activeGroup$: Subscription;\r\n  activeGroup: string;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n    // console.log(this.field)\r\n    // console.log(this.form)\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    \r\n      this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n    });\r\n\r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n      // console.log(this.checkedOpt)\r\n      let index \r\n      this.checkedOpt.forEach(opt => {      \r\n        console.log(\"what\")\r\n        // console.log(opt)\r\n        if(opt != undefined){index = opt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label && item.group === this.activeGroup && item.title === this.form['label']);\r\n          // console.log(index)\r\n          if (index > -1){\r\n            this.isChecked = true\r\n          }}\r\n      })\r\n      // const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\r\n\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeFeatureId$.unsubscribe();\r\n    }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.formsService.addCheckedOpt(option, this.activeFeatureId, this.activeGroup, this.form['label']);\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option, this.activeFeatureId, this.activeGroup, this.form['label']);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compId === 2 && item.groupName === this.activeGroup && item.title === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.chosenTag = opt[index].option\r\n        }}\r\n      \r\n      \r\n    });\r\n\r\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\r\n    // if (index > -1){\r\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    // }\r\n    \r\n    // console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ console.log(this.chosenTag); this.formsService.updateSelectedRadio(this.chosenTag, 2, this.activeFeatureId, this.activeGroup, this.form['label']);}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  public chosenTag: string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n\r\n    // console.log(this.formsService.getSelectedRadio() )\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compId === 0 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.chosenTag = opt[index].option\r\n        }}\r\n      \r\n      \r\n    });\r\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\r\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\r\n    // console.log(index)\r\n    // if (index > -1){\r\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    // }\r\n  // }\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 0, this.activeFeatureId, this.activeGroup,this.form['label']);}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n  notes:string = \"notes\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 3&&item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.note = opt[index].option\r\n        }\r\n      }\r\n      \r\n      \r\n    });\r\n\r\n    // const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\r\n    // if (index > -1){\r\n    //   this.note = this.formsService.getNotes()[index]['option']\r\n    // }\r\n  }\r\n\r\n  updateNotes(){ \r\n    // console.log(this.form['label'])\r\n    // console.log(this.form.name)\r\n    this.formsService.updateNotes(this.note, 3, this.activeFeatureId, this.activeGroup, this.form['label']); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compId === 1 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n      console.log(index)\r\n      if (index > -1){\r\n        console.log(opt[index].option)\r\n        this.chosenTag = opt[index].option\r\n      }\r\n      }\r\n      \r\n      this.chosenColor = this.color \r\n      \r\n    });\r\n  }\r\n\r\n  updateCheckedTag(){ \r\n    this.formsService.saveStyles(this.chosenColor, this.activeFeatureId)\r\n    this.formsService.updateSelectedRadio(this.chosenTag, 1, this.activeFeatureId, this.activeGroup, this.form['label']); }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tToastrModule.forRoot(),\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of newTag\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteTag(activeGroup, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!-- <div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div> rename button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"tag.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <!-- (click)=\\\"formsService.saveTag(activeGroup, tag, tag.label)\\\" -->\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}