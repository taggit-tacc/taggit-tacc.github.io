{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environmentType.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/scroll.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/services/feature.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NotFoundComponent","[object Object]","tslib_es6","a","Object","core","n","selector","template","b","Group","AssetFilters","this","bbox","assetType","Set","has","delete","add","Project","ProjectRequest","AuthToken","token","expires","Date","expires_in","getTime","Feature","f","geometry","properties","type","assets","styles","project_id","length","asset_type","EnvironmentType","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","fesm2015_router","C","providedIn","notifications_service_NotificationsService","toastr","authService","TIMEOUT","_notifications","notifications","isLoggedIn","interval","getRecent","baseUrl","now","toISOString","notes","forEach","note","status","showSuccessToast","message","showErrorToast","success","error","ngx_toastr","ScrollService","scrollRestored","scrollPosition","change","document","documentElement","scrollTop","scroll","top","geo_data_service_GeoDataService","notificationsService","scrollService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","restoreScroll","qstring","querystring","toJson","fc","map","feat","setScrollRestored","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","featureId","groupData","pc","console","log","file","form","FormData","append","files","tmp","system","path","fileList","showImportErrorToast","remoteFile","system_id","response","importImage","downloadLink","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","overlays","activeOverlay","ov","mapMouseLocation","loc","basemap","bmap","MainComponent","geoDataService","bsModalService","ngx_foundation","c","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","groups_service_GroupsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","_itemsSelected","itemsSelected","groupList","featureList","tempGroupList","group","color","icon","findIndex","item","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","value","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_deletingProjects","deletingProjects","myProjs","p","deletingProj","find","dp","updateProjectsList","data","prom","proj","setActiveProject","put","project","assign","deleting","filter","getProjects","deletingFailed","tap","users","uname","getProjectUsers","forms_service_FormsService","groupsService","projectsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","extra","tagData","checkedOptions","chosenTag","option","notebook","tempData","newTag","optData","newOpt","selectedProject","selectedFeatureID","selectedFeature","undefined","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","updateFormItem","selectedColor","currentID","style","checkDefault","faIcon","updateFeatureProperty","updateFeatureStyle","groupObject","opt","formObj","finalArray","gName","tag","tLabel","index","splice","ind","key","choice","tGroup","Number","selection","componentId","compId","rOption","componentID","compID","feature_service_FeatureService","formsService","_tags","tags$","featureCollection","tagList","getTags","featListfeat","deleteFeature","delFeats","featListFeature","featProp","saveFeature","customList","saveFeatures","tempTags","listTag","saveTags","newName","oldName","listFeature","delTag","nOption","check","TagGeneratorComponent","dialog","featureService","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","newGroup","groups$","formType","formName","formLabel","formValue","formRequired","event","target","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","myOpts","createTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","newTagValue","activeGroup$","activeFeatureId$","formGroup$","tags","deleteTag","renameTag","closeAll","getRawValue","unsubscribe","Activate","authSvc","state","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","marker","featureType","ico","leaflet_src","divIcon","className","html","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","skip","addRemoveOverlay","turf_min","fitBounds","removeLayer","overlay","imageOverlay","set","getBounds","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","d","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","_systems","systems","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","offset","limit","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","fileType","date","File","lastModified","valueOf","msg","sysStr","lastSystem","fileStr","lastFile","noPreviousSelections","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","ModalFileBrowserComponent_1","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","retrievalError","selectedFiles","onClose","Subject","list","combineLatest","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","currentDirectory","init","browse","pth","selectedPath","getFiles","hasMoreFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","shiftKey","selectFilesShiftClick","checkIfSelectable","addSelectedFile","selectShift","firstFileIndex","saveState","Array","from","close","count","clear","addRangeFiles","lastFileIndex","again","maxIndex","max","i","min","R","modal_download_selector_component_ModalDownloadSelectorComponent","ModalDownloadSelectorComponent_1","passbackData","fileExtension","downloadSelectForm","Name","Extension","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","projRqst","create","modal_share_project_component_ModalShareProjectComponent","projShareForm","activeProj","projectUsers","onlyOne","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","foundFilePaths","getState","setGroupProperties","hasSuccessNotification","some","hasFailureNotification","substring","uploadNewFeature","createBlankFeature","lastProj","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","setUnselectAll","setItemsSelected","timerSubscription","reloadFeatures","setLiveRefresh","afterClosed","importFileFromTapis","coordinates","saveFile","height","width","afterAllClosed","openSidebar","setActiveGroup","myRandColor","getRandomColor","addGroup","addTempGroup","setShowGroup","setScrollPosition","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","forExport","content","CSVHolder","JSONHolder","projID","tagsPresent","headerComplete","headerTagOptions","element","featureSource","_a","_b","_c","tempTagOptionNum","compileJSON","tempCSV","export","download","featureID","transferJSON","compiledJSON","longitude","latitude","src","groupColor","icon color","tag name","tag type","tag selection","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","err","reload","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","projectsExist","imagesExist","featureListScroll","slice","groupExist","setActiveFeatureId","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","featurePath","v","saveTag","selectGroupForm","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","what","saveStyles","SelectImageComponent","activeFeatureNum$","asset","assetId","deleteGroup","FormFieldsComponent","isValid","controls","valid","isDirty","FormCheckBoxComponent","isChecked","updateChecked","FormDropDownComponent","getSelectedRadio","updateExtra","FormFileComponent","FormRadioComponent","String","FormTextBoxComponent","FormColorComponent","chosenColor","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"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","file":"main-es2015.316c4bcbb03aec41c251.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\" (dblclick)=\\\"toRoot()\\\">\\r\\n\\t\\t<i class=\\\"fas fa-folder\\\"></i>\\r\\n\\t\\t<span > Home </span>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\">\\r\\n\\t\\t<i class=\\\"fas fa-folder-open\\\"></i>\\r\\n\\t\\t<span class=\\\"lineBreak\\\"> {{selectedPath}} </span>\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"retrievalError\\\" class=\\\"grid-x file-row\\\" class=\\\"error\\\">\\r\\n\\t\\tError retrieving files\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList; let fileIndex = index\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select($event, file, fileIndex)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"basic\\\" (click)=\\\"selectAll()\\\">Select all</button>\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Galleries\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the Gallery ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  overflow: hidden;\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\" (keyup.enter)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: flex;\\n  height: 100vh;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" [disabled]=\\\"onlyOne\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  overflow: hidden;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div *ngIf=\\\"tempGroup.length === 1\\\">\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div *ngIf=\\\"tempGroup.length > 1\\\">\\r\\n\\t\\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"addGroups(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\" (click)=\\\"deleteFromGroup(color)\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect  class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea  [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (keyup)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.card-buttons {\\n  align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" name={{label}} value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  transition: opacity 0.3s ease;\\n  backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  transition: 0.3s ease;\\n  align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" name={{label}} value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Gallery </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<h4> Create a new Gallery </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: flex;\\n  justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t  \\t</div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<option class=\\\"fa\\\" *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n.error {\\n  background-color: red;\\n  color: white;\\n}\\n.lineBreak {\\n  max-width: 350px;\\n  word-break: break-word;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Gallery : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Gallery</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Gallery</button>\\r\\n\\t<!-- <button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Gallery</button> -->\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\t\\r\\n\\t<button mat-raised-button class=\\\"button-spacing\\\" [disabled]=\\\"!itemsSelected\\\" (click)=\\\"clearAll()\\\">Clear Selected</button>\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your gallery in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\" *ngIf=\\\"itemsSelected && !showSidebar\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" (keyup.enter)=\\\"addToGroupService(groupInput.value)\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  ds_id?: string;\r\n  title?: string;\r\n  uuid?: string;\r\n  public?: boolean;\r\n  system_file?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n  deleting?: boolean;\r\n  deletingFailed?: boolean;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport interface ProjectRequest {\r\n  project: Project;\r\n  observable?: boolean;\r\n  watch_content?: boolean;\r\n}\r\n\r\nexport class ProjectRequest implements ProjectRequest {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { INotification } from '../models/notification';\r\nimport { interval, Observable, ReplaySubject } from 'rxjs';\r\nimport { AuthService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n  // Interval time to get notifications in millisecs\r\n  private TIMEOUT = 5000;\r\n  private _notifications: ReplaySubject<Array<INotification>> = new ReplaySubject<Array<INotification>>(1);\r\n  public readonly  notifications: Observable<Array<INotification>> = this._notifications.asObservable();\r\n\r\n  constructor(private toastr: ToastrService,\r\n    private http: HttpClient,\r\n    private authService: AuthService ) {\r\n      if (this.authService.isLoggedIn()) {\r\n      const timer = interval(this.TIMEOUT);\r\n      timer.subscribe((next) => {\r\n        this.getRecent();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Sends a request to GeoAPI to retrieve recent notifications\r\n  getRecent(): void {\r\n    let baseUrl = environment.apiUrl + 'notifications/';\r\n    let now = new Date();\r\n    let then = new Date(now.getTime() - this.TIMEOUT);\r\n\r\n    this.http.get<Array<INotification>>(baseUrl + `?startDate=${then.toISOString()}`)\r\n      .subscribe( (notes) => {\r\n        this._notifications.next(notes);\r\n        notes.forEach( (note) => {\r\n          switch (note.status) {\r\n            case 'success':\r\n              this.showSuccessToast(note.message);\r\n              break;\r\n            case 'error':\r\n              this.showErrorToast(note.message);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  showSuccessToast(message: string): void {\r\n    this.toastr.success(message);\r\n  }\r\n\r\n  showImportErrorToast(message: string): void {\r\n    this.toastr.error(message + \", trying alternate method\")\r\n  }\r\n\r\n  showErrorToast(message:string): void {\r\n    this.toastr.error(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollService {\r\n\r\n  constructor() { }\r\n\r\n  public scrollRestored:boolean = true //if true, the scroll was restored to the proper place\r\n  public scrollPosition:number = 0\r\n\r\n  setScrollRestored(change:boolean) { this.scrollRestored = change; }\r\n\r\n  setScrollPosition() { this.scrollPosition = document.documentElement.scrollTop;}\r\n\r\n  scroll() {\r\n    //Attempts to scroll to the specified location\r\n\t\tdocument.documentElement.scroll({top: this.scrollPosition})\r\n\t\t//if it reaches there, marks the check as complete\r\n\t\tif(document.documentElement.scrollTop == this.scrollPosition){\r\n\t\t\tthis.scrollRestored = false\r\n\t\t}\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport { NotificationsService } from './notifications.service';\r\nimport { ScrollService } from './scroll.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  //TODO: Go over this and remove all unused functions, a lot of this was copy/pasted over from Hazmapper without a second thought\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n  private fileList: Array<RemoteFile>\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n\tprivate notificationsService: NotificationsService,\r\n\tprivate scrollService: ScrollService) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters(), restoreScroll = false): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\t// this._loaded.next(false);\r\n\t\tthis._loaded.next(true);\r\n\r\n\t\tif ( restoreScroll ) {\r\n\t\t\tthis.scrollService.setScrollRestored(true)\r\n\t\t}\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id, new AssetFilters(), true);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t  }, error => {\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t  }, error => {\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  //This function updates the underlying observable, so changes naturally flow to feature service\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.fileList = tmp\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.notificationsService.showSuccessToast('Import started!');\r\n\t  }, error => {\r\n\t\tthis.notificationsService.showImportErrorToast('Import failed! Try again?');\r\n\t  });\r\n  }\r\n\r\n  //An alternate function for importing images with no GPS data. A feature is created elsewhere, and the image is added to the feature\r\n  //Inputs:\r\n  //projectId: Id number of current project\r\n  //features: A pre-created feature with user-defined or zeroed out gps data\r\n  //file: A Tapis Remote File containing the image to be imported\r\n  importImage(projectId: number, feature: Feature, path: string): void {\r\n\tlet featureId = feature.id\r\n\tlet file\r\n\tthis.fileList.forEach(remoteFile =>{\r\n\t\tif (remoteFile.path == path) {\r\n\t\t\tfile = remoteFile\r\n\t\t}\r\n\t});\r\n\tlet payload = {system_id: file.system, path: file.path};\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/assets/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\tthis.notificationsService.showSuccessToast('Import started!');\r\n\t\t//this.getFeatures(projectId)\r\n\t});\r\n  }\r\n\r\n  //Creates a new feature from an uploaded locally created feature\r\n  uploadNewFeature(projectId: number, feature:Feature, path: string): void {\r\n\tlet payload = feature;\r\n\tlet response\r\n\t//Calls the addFeatureAsset route in GeoAPI, resp is a list of features\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\t//this.getFeatures(projectId)\r\n\t\tresponse = new Feature(resp[0])\r\n\t\tthis.importImage(projectId, response, path)\r\n\t});\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  private _itemsSelected: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public itemsSelected: Observable<boolean> = this._itemsSelected.asObservable();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t//   console.log(tempGroupList[group.name].features)\r\n\t\t  let index = tempGroupList[group.name].features.findIndex(item => (item == feat))\r\n\t\t  if(index == -1){\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\t\t  }\r\n\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n\tthis._itemsSelected.next(!select);\r\n  }\r\n\r\n  setItemsSelected(select: boolean): void {\r\n\tthis._itemsSelected.next(select)\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser, ProjectRequest} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\nimport { NotificationsService } from './notifications.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  private _deletingProjects: BehaviorSubject<Project[]> = new BehaviorSubject<Project[]>([]);\r\n  public deletingProjects: Observable<Project[]> = this._deletingProjects.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService,\r\n    private notificationsService: NotificationsService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n    updateProjectsList(resp: Project[] = []) {\r\n      const myProjs = resp.length !== 0\r\n        ? resp\r\n        : this._projects.value;\r\n  \r\n      this._deletingProjects.value.length !== 0\r\n        ? this._projects.next(myProjs.map(p => {\r\n          const deletingProj = this._deletingProjects.value.find(dp => dp.id === p.id);\r\n          return deletingProj\r\n            ? deletingProj\r\n            : p;\r\n        }))\r\n        : this._projects.next(myProjs);\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     console.log(resp)\r\n     this.updateProjectsList(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    this.notificationsService.showErrorToast(\"Error importing files Design Safe, GeoAPI might be down\")\r\n  });\r\n  }\r\n\r\n  create(data: ProjectRequest): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      // Spread operator, just pushes the new project into the array\r\n      //console.log(data)\r\n      this._projects.next([...this._projects.value, proj]);\r\n      \r\n      //Awkward as hell, but this ensures we actually transition to the newly created project\r\n\t    //Without this, the screen flickers briefly to the new project, but ends up stuck on the old project\r\n      this.setActiveProject(proj);\r\n      this.setActiveProject(proj);\r\n    });\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    //saves change as last visited project\r\n    window.localStorage.setItem(\"lastProj\", JSON.stringify(proj))\r\n    try {\r\n      this._activeProject.next(proj);\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n  \r\n  update(data: ProjectRequest): void{\r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.project.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared.\r\n  delete(data: Project):void{\r\n    console.log(\"We are in the function...\")\r\n    this._deletingProjects.next([...this._deletingProjects.value, {...data, deleting: true}]);\r\n    this.updateProjectsList();\r\n\r\n    this.http.delete(environment.apiUrl  + `projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n\r\n        this._deletingProjects.next(this._deletingProjects.value.filter(p => p.id !== data.id));\r\n        //These next two lines might be causing problems. Adding getProjects causes duplicates during project creation,\r\n        //So I'm thinking that calling these here might be the root of my delete woes, as they're restoring the project I just\r\n        //deleted...\r\n        this.updateProjectsList();\r\n        this.getProjects();\r\n        //As elegant as a brick to the face, but this solves the delete issues...\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      }, error => {\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n        \r\n        this._deletingProjects.next(this._deletingProjects.value.map(p => {\r\n          return p.id === data.id\r\n            ? {...p, deleting: false, deletingFailed: true}\r\n            : p;\r\n        }));\r\n        this.updateProjectsList();\r\n\r\n        this.getProjects();\r\n\r\n        this.notificationsService.showErrorToast('Could not delete project!');\r\n        console.error(error);\r\n      }); // end of error\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProjectsService } from './projects.service';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\r\nimport { fadeInItems } from '@angular/material';\r\nimport { Feature, FeatureCollection } from 'geojson';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  \r\n\r\n  private activeGroup\r\n  private groupList\r\n  private featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n  private selectedProject\r\n  private selectedFeatureID\r\n  private selectedFeature\r\n  tempGroup: Array<Feature>;\r\n\r\n  constructor(private groupsService: GroupsService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService) {\r\n\r\n\t\t\t\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t\t\t\t\tthis.activeGroup = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.groups.subscribe((next) => {\r\n\t\t\t\t\tthis.groupList = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\t\t\t\tthis.selectedProject = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.activeFeatureId.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeatureID = next\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.groupsService.activeFeature.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeature = next\r\n\t\t\t\t});\r\n\t\t\t\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\t\t\t\tthis.features = fc;\r\n\t\t\t  \r\n\t\t\t\t\tif (this.features != undefined) {\r\n\t\t\t\t\t  this.featureList = this.features.features;\r\n\t\t\t\t\t}\r\n\t\t\t\t  });\r\n\t\t\t  }\r\n  // TODO This should be stored in projects api later on (or not)\t//I think it's good here, but this might be good to fully pull out later -Ben\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  checkDefault(selectedColor:string){\r\n\tif(selectedColor === \"default\") {\r\n\t\ttry {\r\n\t\t\tselectedColor = this.selectedFeature.styles.color\r\n\t\t} catch (error) {\r\n\t\t\tselectedColor = \"#00C8FF\"\r\n\t\t}\r\n\t}\r\n\treturn selectedColor\r\n  }\r\n\r\n  //Inputs:\r\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\r\n  //This method accesses group services to retrive the current group's icon as well\r\n  saveStyles(selectedColor:string, currentID:number){\r\n\tlet icon:string\r\n\tlet payload\r\n\tlet style\r\n\r\n\t//A check to see if the color isn't supposed to be changed\r\n\tselectedColor = this.checkDefault(selectedColor)\r\n\r\n\t//Cycles through each group until it finds one that matches the active group\r\n\tthis.groupList.forEach(group => {\r\n\t\tif ((group.name === this.activeGroup)) {\r\n\t\t\ticon = group.icon\r\n\r\n\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\tlet tempGroup = [{\r\n\t\t\t\tname: group.name,\r\n\t\t\t\tcolor: group.color,\r\n\t\t\t\ticon: group.icon\r\n\t\t\t}]\r\n\t\t\t\r\n\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\tpayload = {\r\n\t\t\t\tgroup: tempGroup,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\tcolor: selectedColor\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstyle = {\r\n\t\t\t\tfaIcon: icon,\r\n\t\t\t\tcolor: selectedColor\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t//Finally, sends the payload and projectID to GeoAPI to update the feature\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, currentID, payload)\r\n\tthis.geoDataService.updateFeatureStyle(this.selectedProject.id, currentID, style)\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\", extra: []};\r\n  tagData = []\r\n  checkedOptions = []\r\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  notebook = []; //Var for storing note tags\r\n\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tempData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\r\n\r\n\tif (index > -1) {\r\n\t\tthis.tempData[index].label = tag.label;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tempData.push(tag);\r\n\t}\r\n}\r\n\r\ntempData = [];\r\ngetTags(): tags[]{\r\n\tthis.tempData = [];\r\n\tthis.tempData = this.tagData\r\n\r\n\tfor (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tconst index = this.tempData.findIndex(item => item.groupName === tag.groupName  && item.label === tag.label && item.feature === tag.feature);\r\n\t\t\t\tif(index == -1){\r\n\t\t\t\t\tthis.tempData.push(tag)\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\r\n\treturn this.tempData;\r\n}\r\n\r\nnewTag: object[] = [];\r\ndeleteTag(gName: string, tag: tags): void{\r\n\r\n\tlet data = this.tempData;\r\n\twhile(true){\r\n\t\tconst index = data.findIndex(item => item.groupName === gName && item.label === tag.label && item.type === tag.type);\r\n\t\t// delete this.exampleNote[index];\r\n\t\tif (index > -1) {\r\n\t\tdata.splice(index, 1);\r\n\t\t}else{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tthis.tempData = data;\r\n\tconsole.log(this.tempData)\r\n}\r\n\r\n\r\noptData = []\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.optData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.optData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.optData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object, id: number, group: string, label:string): void {\r\n\tlet option = { key: opt['key'], label: opt['label'], choice: opt['key'], id: id , group: group, title: label}\r\n\tthis.checkedOptions.push(option)\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tempData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\r\n\t\t\t\t\t\ttag.extra.push(option)\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\ndeleteCheckedOpt(opt:object, id:number, group: string, label: string): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\r\n\tthis.checkedOptions.splice(index,1)\r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t});\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tempData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\r\n\t\t\t\t\t\ttag.extra.splice(index,1)\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\nnewOpt: object[] = [];\r\ngetCheckedOpt(): any[]{\r\n\tthis.newOpt = []\r\n\tfor (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tthis.newOpt.push(tag.extra)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\treturn this.newOpt;\r\n}\r\n\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number, feature: number, group: string, label: string){ \r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\t\t\t  // code from here is a mess\r\n\t\t\t  //Which means my problem is probably somewhere in here\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tagData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compId'] === componentId && item['groupName'] === group && item['label'] === label);\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = selection\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlet rOption = {option: selection, id: feature, compId: componentId, groupName: group, label: label}\r\n\t\t\t\t\t\t\ttag.extra.push(rOption)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\n//TODO: Rename this function, it's called getSelectedRadio, but it's used as the getter for every tag type\r\ngetSelectedRadio(): any[] {\r\n\tthis.newOpt = []\r\n\tfor (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tthis.newOpt.push(tag.extra)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\treturn this.newOpt;\r\n }\r\n\r\n//Notes tag functions\r\nupdateNotes(change, componentID: number, feature: number, group:string, label:string){\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t});\r\n\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tagData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group && tag.type === \"text\"){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compID'] === componentID && item['groupName'] === group  && item['label'] === label);\r\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\t// console.log(tag.extra)\r\n\t\t\t\t\t\t\t// console.log(tag.extra[index])\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = change\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlet rOption = {option: change, id: feature, groupName: group, compID: componentID, label:label} \r\n\t\t\t\t\t\t\t// console.log(rOption)\r\n\t\t\t\t\t\t\ttag.extra.push(rOption);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t  if(tag.feature == feature){payload.tag.push(tag)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t\t}\r\n\t// if (index > -1) {\r\n\t// \t// console.log(\"IT WORKED\")\r\n\t// \tthis.notebook[index]['option'] = change\r\n\t// }\r\n\t// else {\r\n\t// \tlet rOption = {option: change, id: feature, groupName: group} \r\n\t// \tthis.notebook.push(rOption);\r\n\t// \t// console.log(this.tagData)\r\n\t// }\r\n}\r\n\r\ngetNotes(): any[]{ return this.notebook }\r\n\r\n}\r\n\r\n\r\n//Todo: put this in models so we can reference it like we do the Features type\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>,\r\n\tfeature: string | number,\r\n\textra: Array<Group>\r\n}","import { Injectable } from '@angular/core';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { FormsService, tags } from './forms.service';\r\nimport { feature } from '@turf/turf';\r\nimport { AbstractEmitterVisitor } from '@angular/compiler/src/output/abstract_emitter';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeatureService {\r\n  private featureCollection: FeatureCollection;\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  public features$: Observable<FeatureCollection>;\r\n  private _tags: BehaviorSubject<tags[]>;\r\n  public tags$: Observable<tags[]>;\r\n  private tagList: tags[];\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n              private formsService: FormsService) {\r\n    this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n    this.features$ = this._features.asObservable(); \r\n\r\n    this._tags = new BehaviorSubject<tags[]>( [] );\r\n    this.tags$ = this._tags.asObservable();\r\n\r\n    this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n      this._features.next(fc)\r\n      this.featureCollection = fc\r\n      // console.log(this.featureCollection)\r\n\r\n      //Update the tag list alongside the features\r\n      try {\r\n        if( this.tagList == undefined ) { //Only update if tagList is empty, after retrieval, the only way to edit tags will be to edit this list\r\n            this.tagList = this.formsService.getTags()\r\n            this._tags.next( this.tagList )\r\n        }\r\n      } catch (error) {}\r\n      });\r\n  }\r\n\r\n  //Takes the feature to be deleted, and filters it out of the feature list\r\n  deleteFeature(feat:Feature): void {\r\n    this.featureCollection.features = this.featureCollection.features.filter(featListfeat => featListfeat.id != feat.id)\r\n    this._features.next(this.featureCollection)  //Update the observable\r\n    this.geoDataService.deleteFeature(feat)\r\n  }\r\n\r\n  //Takes a list of features, and deletes them from the observable in a more efficient manner\r\n  bulkFeatureDelete(delFeats:Array<Feature>): void {\r\n    delFeats.forEach(feat => {\r\n      //Filter out every feature in delFeats from the master list\r\n      this.featureCollection.features = this.featureCollection.features.filter(featListFeature => featListFeature.id != feat.id)\r\n      this.geoDataService.deleteFeature(feat)\r\n    })\r\n    this._features.next(this.featureCollection)  //Update the observable with the filtered list\r\n  }\r\n\r\n  //saveFeatures takes a feature list and passes it to GeoAPI to save\r\n  //With this scheme, you can just update a feature's property\r\n  saveFeatures(features:FeatureCollection): void {\r\n    this._features.next(features)  //Update the observable\r\n    features.features.forEach(feat => {\r\n      this.geoDataService.updateFeatureProperty(feat.project_id, Number(feat.id), feat.properties)\r\n    })\r\n    this.geoDataService.getFeatures(features.features[0].project_id)\r\n  }\r\n\r\n  //This might be a little short to consider a function, but it saves me from writing it every time...\r\n  //Assumes that the feature passed in has had it's properties updated or changed before being passed in\r\n  saveFeature(feat:Feature): void {\r\n    this.geoDataService.updateFeatureProperty(feat.project_id, Number(feat.id), feat.properties)\r\n  }\r\n\r\n  //Takes a feature, and optionally an updated property section\r\n  //If featprop is null, it assumes the passed in feature was already updated with the new properties\r\n  updateFeatureProperties(feature:Feature, featProp=null): void {\r\n    //If featprop has a value, update the feature's properties to the new section\r\n    if( featProp != null) {\r\n      feature.properties = featProp\r\n    }\r\n    //Update and save the list\r\n    this.featureCollection.features.forEach(feat => {\r\n      if(feat.id == feature.id){\r\n        feat = feature\r\n      }\r\n    })\r\n    this.saveFeature(feature)\r\n  }\r\n  \r\n  //Update Styles takes an object defining new style options and the feature they should be connected with\r\n  updateStyle(feature:Feature, style): void {\r\n    //Update and save the list\r\n    this.featureCollection.features.forEach(feat => {\r\n      if(feat.id == feature.id){\r\n        feat.styles = style\r\n      }\r\n    })\r\n    this.geoDataService.updateFeatureStyle(feature.project_id, Number(feature.id), feature.properties)\r\n  }\r\n\r\n  //Save tags has 2 purposes, first it updates every feature's tag list to reflect the change, then it sends the features to GeoAPI to be saved\r\n  saveTags(tagList): void {\r\n    this._tags.next(tagList) //Update the observable\r\n    let customList = []\r\n    //Update each feature's tag list\r\n    this.featureCollection.features.forEach(feat => {\r\n      \r\n      tagList.forEach(tag => {\r\n        if (feat.id == tag.feature){\r\n          customList.push(tag)\r\n        }}) //end of for each tag\r\n\r\n      feat.properties.tag = customList\r\n      customList = []\r\n    });\r\n    this.saveFeatures(this.featureCollection) //Save updated features to backend\r\n  }\r\n\r\n  //Takes the entire tag that should be deleted and filters the list from it\r\n  //NOTE: This does sucessfully delete multiple tags at a time, just not if you delete multiple and immediately reload...\r\n  deleteTag(tag:tags): void {\r\n    //If groupname and label of the passed in tag match, remove from list\r\n    let tempTags = []\r\n    this.tagList.forEach( (listTag) => {\r\n      if( !((listTag.groupName == tag.groupName) && (listTag.label == tag.label) && (listTag.type == tag.type) ) ){\r\n        tempTags.push(listTag)\r\n      }\r\n    })\r\n    this.tagList = tempTags\r\n    this.saveTags(this.tagList) //saves tags to backend\r\n  }\r\n\r\n  renameTag(tag:tags, newName:string): void {\r\n    let oldName = tag.label //The passed in tag has the old tag's name\r\n\r\n    this.tagList.forEach( listTag => {\r\n      if( (listTag.label == oldName) && (listTag.type == tag.type) ) {\r\n        listTag.label = newName\r\n      }\r\n    })\r\n\r\n    this.saveTags(this.tagList) //saves tags to backend\r\n  }\r\n\r\n  createTag(newTag:tags, activeGroup:string, groupList: Array<any>): void {\r\n\r\n    this.featureCollection.features.forEach( listFeature => { //Loop through every feature in the project\r\n      if(listFeature.properties.group) {\r\n        listFeature.properties.group.forEach( group => { //Loop through every group attached to the feature\r\n          //NOTE: While it is tempting to just edit the passed in tag, this causes a strange glitch\r\n          if( group.name == activeGroup ) {\r\n            let tag:tags = {\r\n              extra:newTag.extra,\r\n              feature: listFeature.id,\r\n              groupName: newTag.groupName,\r\n              label: newTag.label,\r\n              options: newTag.options,\r\n              type: newTag.type\r\n            }\r\n            this.tagList.push(tag)\r\n          } // end of if statement\r\n        }) // end of for each group \r\n      } // end of if prop group\r\n    }) // end of for each listFeature\r\n\r\n    this.saveTags(this.tagList)\r\n  } // end of creatTag function\r\n\r\n  bulkTagDelete(tagList: Array<any>): void {\r\n    tagList.forEach( delTag => {\r\n      //Filter out each tag from the tag list\r\n      this.tagList = this.tagList.filter(listTag => listTag != delTag)\r\n    })\r\n    this.saveTags(this.tagList) //saves tags to backend\r\n  }\r\n\r\n  updateExtra(change:any, componentID: number, feature: number, groupName:string, label:string, type:string): void{\r\n    let nOption\r\n    this.tagList.forEach( tag => {\r\n      // updating notes\r\n      if(tag.feature === feature && tag.groupName === groupName && tag.type === type){\r\n        const index = tag.extra.findIndex(item => item['id'] === feature && item['compID'] === componentID && item['groupName'] === groupName  && item['label'] === label);\r\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\t// console.log(tag.extra)\r\n\t\t\t\t\t\t\t// console.log(tag.extra[index])\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = change\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n              \r\n\t\t\t\t\t\t\tnOption = {option: change, id: feature, groupName: groupName, compID: componentID, label:label} \r\n\t\t\t\t\t\t\t// console.log(rOption)\r\n\t\t\t\t\t\t\ttag.extra.push(nOption);\r\n\t\t\t\t\t\t}\r\n      } // end of updating notes\r\n\r\n\r\n\r\n    }) // end of for each tag\r\n    this.saveTags(this.tagList)\r\n  } // end of updateExtra function\r\n\r\n  updateChecked(opt:object, id: number, group: string, label:string, check:string): void{\r\n    let nOption \r\n    this.tagList.forEach( tag => {\r\n      if(check == \"create\"){\r\n        if(tag != undefined){\r\n            if(tag.feature === id && tag.groupName === group){\r\n              nOption = { option: opt['key'], id: id , group: group, label: label}\r\n              console.log(nOption)\r\n              tag.extra.push(nOption)\r\n            }\r\n        }\r\n      } // end of create\r\n      else{\r\n        if(tag.feature === id && tag.groupName === group){\r\n          const index = tag.extra.findIndex(item => item['option'] === opt['key'] && item['id'] === id &&  item['group'] === group && item['label'] === label)\r\n          // item.label === opt['label'] && item.id === id && item.group === group && item.title === label\r\n          tag.extra.splice(index,1)\r\n        }\r\n      } // end of else\r\n    }) // end of for each tag\r\n    this.saveTags(this.tagList)\r\n  } // end of updateChecked function\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature, Project } from 'src/app/models/models';\r\nimport { GeoDataService } from 'src/app/services/geo-data.service';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n  groupList: Array<any>;\r\n  groups$: Subscription;\r\n  tempGroup: Array<Feature>;\r\n  private selectedProject;\r\n  newTag: object[] = [];\r\n  newGroup:object[] = [];\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router,\r\n\tprivate geoDataService: GeoDataService,\r\n\tprivate projectsService: ProjectsService,\r\n\tprivate featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t  });\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\tthis.selectedProject = next;\r\n\t});\r\n\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\t\t//Assemble the new tag\r\n\t\tlet formItem: tags = {\r\n\t\t\ttype: this.formType,\r\n\t\t\tgroupName: this.activeGroup,\r\n\t\t\tlabel: this.formLabel,\r\n\t\t\toptions: [],\r\n\t\t\tfeature: 0,\r\n\t\t\textra: []\r\n\t\t}\r\n\t\tthis.openOption[this.formLabel] = false;\r\n\t\t//Adds the options for drop down, checklist, and radio buttons\r\n\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\t\tlet myOpts = [];\r\n\t\t\tfor (const opt of this.formOptions) {\r\n\t\t\t  myOpts.push({\r\n\t\t\t\tkey: opt[0],\r\n\t\t\t\tlabel: opt,\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t\tformItem.options = this.formOptions;\r\n\t\t  }\r\n\t//Pass it to feature and form service to propogate to all features in a group\r\n\tthis.featureService.createTag(formItem, this.activeGroup, this.groupList)\r\n\t// this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\r\n\t//Reset user-defined fields to blank options\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n\tthis.labelFilter = '';\r\n\tthis.changed = true;\r\n\t//Navigate back to the display panel\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n   }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { GeoDataService } from 'src/app/services/geo-data.service';\r\nimport { Feature, FeatureCollection } from 'geojson';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  private groupList;\r\n  private selectedProject\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = [];\r\n  newTag: tags[] = [];\r\n  newTagValue = \"\"\r\n  featureList: Array<any> = [];\r\n  tempGroup: Array<Feature>;\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router,\r\n\tprivate projectsService: ProjectsService,\r\n\tprivate geoDataService: GeoDataService,\r\n\tprivate featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t});\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\tthis.selectedProject = next;\r\n\t});\r\n\r\n\tthis.featureService.features$.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.featureList = fc.features;\r\n\t  });\r\n\t\r\n\tthis.featureService.tags$.subscribe( tags => {\r\n\t\tthis.tagList = tags\r\n\t})\r\n\r\n\t  // this is to get the list of tags so far\r\n\t  for (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\t  const index = this.newTag.findIndex(item => item.groupName === tag.groupName  && item.label === tag.label && item.feature === tag.feature);\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tthis.newTag.push(tag)\r\n\t\t\t\t\t}\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n  \r\n  //Takes the name of the tag's group, and the tag itself to delete\r\n   deleteTag(tag: tags){\r\n\tthis.featureService.deleteTag(tag)  \r\n   }\r\n\r\n  //submits a tag's name change to geoAPI\r\n  renameTag(tag) {\r\n\t  this.featureService.renameTag(tag, this.newTagValue)\r\n\t  //Reset newTagValue for the next rename\r\n\t  this.newTagValue = ''\r\n\t  this.dialog.closeAll() //Ensures the window closes when using enter-submission\r\n\t}\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\tthis.groupsService.setActivePane(\"preset\");\r\n\tthis.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { SystemSummary} from 'ng-tapis';\r\n//import { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n  public lastSystem:SystemSummary //The last filesystem the user was browsing\r\n  public lastFile:RemoteFile; //The last directory the user was browsing\r\n  public noPreviousSelections:boolean\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string, offset: number, limit: number) {\r\n    return this.tapis.filesList({systemId: system, filePath: path, offset, limit});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n\r\n  //Saves the current file directory and file system to Local Storage\r\n  saveState() {\r\n    let sysStr = JSON.stringify(this.lastSystem)\r\n    let fileStr = JSON.stringify(this.lastFile)\r\n    window.localStorage.setItem(\"system\", sysStr)\r\n    window.localStorage.setItem(\"file\", fileStr)\r\n  }\r\n\r\n  //Attempts to retrieve the last used state\r\n  getState() {\r\n    try {\r\n      this.lastSystem = JSON.parse(window.localStorage.getItem(\"system\"));\r\n      this.lastFile = JSON.parse(window.localStorage.getItem(\"file\"));\r\n      this.noPreviousSelections = this.lastFile == null;\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public selectedPath;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public retrievalError = false;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  private offset:number;\r\n  public firstFileIndex: number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t//retrive state data\r\n\t//this.tapisFilesService.getState()\r\n\r\n\t// This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.tapisFilesService.lastSystem\r\n\r\n\tif (this.selectedSystem == null) {\r\n\t\tthis.selectedSystem = this.myDataSystem\r\n\t\tthis.tapisFilesService.lastSystem = this.myDataSystem\r\n\t}\r\n\r\n\t//If the user has already navigated to a folder, restore those options\r\n\tthis.currentDirectory = this.tapisFilesService.lastFile\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\t//If the user hasn't yet opened the file browser, set the last file to an init file.\r\n\tif ( this.tapisFilesService.noPreviousSelections) {\r\n\t\tthis.selectedSystem = this.myDataSystem;\r\n\t\tthis.tapisFilesService.lastFile = init\r\n\t\tthis.tapisFilesService.noPreviousSelections = false\r\n\t}\r\n\tthis.browse(this.tapisFilesService.lastFile);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.selectedSystem = system\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tthis.selectedPath = file.path\r\n\tthis.selectedSystem = this.selectedSystem //Self-assignment keeps the system name from disappearing while browsing subfolders\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\tthis.tapisFilesService.lastFile = file //Updates the last directory visted\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  toRoot() {\r\n\tlet pth;\r\n\tthis.selectedSystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: this.selectedSystem.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init)\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalFileBrowserComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalFileBrowserComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.retrievalError = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\t//If retrieving the files from DesignSafe bugs out due to the site being down, this is where it ends up\r\n\t\tthis.retrievalError = true;\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(event: any, file: RemoteFile, index: number) {\r\n\tif (event.shiftKey) {\r\n\t\tthis.selectFilesShiftClick(index, file);\r\n\t  }\r\n\telse {\r\n\t\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t\t\tthis.addSelectedFile(file, index);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  selectFilesShiftClick(index: number, file: RemoteFile) {\r\n    // this.selectedFiles.clear();\r\n    this.selectShift(index, file);\r\n  }\r\n\r\n\r\n  addSelectedFile(file: RemoteFile, index: number) {\r\n\tif (index != -1) {\r\n\t\tthis.firstFileIndex = index;\r\n\t  }\r\n\r\n\tif(this.tapisFilesService.checkIfSelectable(file)){\r\n\t\tif (this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.selectedFiles.delete(file.path);\r\n\t\t} else {\r\n\t\t\tthis.selectedFiles.set(file.path, file);\r\n\t\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t\t}\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tthis.tapisFilesService.saveState()\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.tapisFilesService.saveState()\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.dialogRef.close()\r\n  }\r\n\r\n  selectAll(){\r\n\t  let indexTmp = -1\r\n\t  let count = 0\r\n\t  for(let file of this.filesList){\r\n\t\tif (! this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.select(\"\",file,indexTmp)\r\n\t\t\tcount += 1\r\n\t\t}\r\n\t  }\r\n\t  if (count == 1){\r\n\t\tthis.selectedFiles.clear();\r\n\t  }\r\n  }\r\n\r\n  selectShift(index: number, file: RemoteFile) {\r\n    if (this.firstFileIndex != undefined && this.firstFileIndex != index) {\r\n      this.addRangeFiles(this.firstFileIndex, index, true);\r\n    } else {\r\n      this.addSelectedFile(file, index);\r\n    }\r\n  }\r\n\r\n  addRangeFiles(firstFileIndex: number, lastFileIndex: number, again: boolean) {\r\n    let maxIndex = Math.max(firstFileIndex, lastFileIndex);\r\n    let minIndex = Math.min(firstFileIndex, lastFileIndex);\r\n\r\n    for (let i = minIndex; i < maxIndex + 1; ++i) {\r\n      this.addSelectedFile(this.filesList[i], -1);\r\n    }\r\n\r\n    if (again) {\r\n      this.addSelectedFile(this.filesList[firstFileIndex], -1);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n\t\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n  private offset:number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalDownloadSelectorComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalDownloadSelectorComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project, ProjectRequest } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  public readonly onClose: Subject<any> = new Subject<any>();\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close(project: Project) {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\t//Watch content we can set to false, for our project, we don't need this yet.\r\n\t//Watch content refers to syncing files created in a folder with a hazmapper map\r\n\t//Set observable to true, Hazmapper doesn't let users define that value for some reason.\r\n\tconst proj = new Project();\r\n\tconst projRqst = new ProjectRequest();\r\n\r\n\t//Retrieve project name and description\r\n\tproj.description = this.projCreateForm.get('description').value;\r\n\tproj.name = this.projCreateForm.get('name').value;\r\n\r\n\tprojRqst.project = proj\r\n\r\n\tthis.projectsService.create(projRqst)\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n  onlyOne:boolean; //if only one user is present == TRUE \r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n      this.onlyOne = (this.projectUsers.length == 1)\r\n      console.log(this.onlyOne)\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project, ProjectRequest } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    //The project is being properly assembled, but the problem is that the returned project isn't updating.\r\n    //Do I need more data in my projects?\r\n    /*\r\n      export interface Project {\r\n      description: string;\r\n      id?: number;\r\n      name: string;\r\n      ds_id?: string;\r\n      title?: string;\r\n      uuid?: string;\r\n      public?: boolean;\r\n      system_file?: string;\r\n      system_id?: string;\r\n      system_path?: string;\r\n      deleting?: boolean;\r\n      deletingFailed?: boolean;\r\n    }\r\n     */\r\n    const p = new Project();\r\n    const projRqst = new ProjectRequest();\r\n\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    \r\n    projRqst.project = p\r\n\r\n    this.projectsService.update(projRqst);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport { NotificationsService } from 'src/app/services/notifications.service';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6; // 60 secs per reload default, right now it's an hour (6000 sec) //This is in seconds, and somehow got set to 6\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n  itemsSelected:boolean = false;\r\n  foundFilePaths = []\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService,\r\n\t\t\t  private notificationsService: NotificationsService,\r\n\t\t\t  private featureService: FeatureService) {}\r\n\r\n  ngOnInit() {\r\n\t  this.filesService.getState()\r\n\r\n\tthis.featureService.features$.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc\r\n\t\t\r\n\t\tif (this.features != undefined) {\r\n\t\t\tthis.featureList = this.features.features;\r\n\t\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\t\r\n\t\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t\t//Not sure about the above note, if anything needs to be done here, it seems like we have achieved persistance\r\n\t\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\t\t}\r\n\t})\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\t(this.notificationsService.notifications.subscribe(next => {\r\n\t\tlet hasSuccessNotification = next.some(note => note.status === 'success');\r\n\t\tlet hasFailureNotification = next.some(note => note.status === 'error');\r\n\t\tif (hasSuccessNotification) {\r\n\t\t  this.geoDataService.getFeatures(this.selectedProject.id);\r\n\t\t  console.log(\"Features Got\")\r\n\t\t}\r\n\t\tif (hasFailureNotification) {\r\n\t\t\tnext.forEach(item => {\r\n\t\t\t\t//Compiles a list of all necessary files to import via the alt method\r\n\t\t\t\t//The substring from 0 to 16 contains the phrase \"Error importing\", everything after this is the file path\r\n\t\t\t\tif( (item.message.substring(0,16) == \"Error importing \") && !( this.foundFilePaths.some(filePath => filePath === item.message.substring(16)) ) ) {\r\n\t\t\t\t\tlet path = item.message.substring(16)\r\n\t\t\t\t\tthis.geoDataService.uploadNewFeature(this.selectedProject.id, this.createBlankFeature(), path)\r\n\t\t\t\t\tthis.foundFilePaths.push(path)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n\t\t}\r\n\t}));\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tlet lastProj\r\n\t\ttry {\r\n\t\t\t//restores view to the last visited project from local storage\r\n\t\t\tlastProj = JSON.parse(window.localStorage.getItem(\"lastProj\"))\r\n\t\t\tconsole.log(lastProj)\r\n\t\t} catch (error) {\r\n\t\t\tlastProj = this.projectsService.setActiveProject(this.projects[0]);\r\n\t\t}\r\n\r\n\t\t//If lastProj is null, then there is no project saved, or can be found, default to the first project in the list\r\n\t\tif(lastProj == \"none\" || lastProj == null) {\r\n\t\t\tlastProj = this.projects[0];\r\n\t\t}\r\n\r\n\t\tthis.projectsService.setActiveProject(lastProj);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.itemsSelected.subscribe((next) => {\r\n\t\tthis.itemsSelected = next;\r\n\t  })\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\r\n\t// FIXME Maybe redundant //My advice, F*** around and find out -Ben\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  clearAll(){\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.groupsService.setItemsSelected(false);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  //Similar to setLiveRefresh, but it runs the time out once and then unsubscribes from the timer\r\n  startRefreshTimer(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); this.setLiveRefresh(false)}) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\t//Refreshes the list of found paths used in importing images without Geo tagging\r\n\tthis.foundFilePaths = []\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t});\r\n}\r\n\r\n  //Creates a feature with a long/lat value of 0,0 and no associated image. Used in alternate image inport\r\n  //I think if we want a placeholder image, we can add it here.\r\n  createBlankFeature() {\r\n\tlet blankFeature:Feature = {\r\n\t\t\"type\": \"Feature\",\r\n\t\t\"geometry\": {\r\n\t\t  \"type\": \"Point\",\r\n\t\t  \"coordinates\": [0, 0]\r\n\t\t},\r\n\t\t\"properties\": {\r\n\t\t}\r\n\t  }\r\n\treturn blankFeature\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\tthis.dialog.afterAllClosed.subscribe((resp) =>{\r\n\t\t//Close the sidebar and return to the gallery screen if the sidebar's open\r\n\t\tif(this.showSidebar){\r\n\t\t\tthis.openSidebar()\r\n\t\t}\r\n\t})\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\tlet modal = this.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0])\r\n\t});\r\n}\r\n\r\n  //Old function, aside from rewriting it for quality, most concerns here have been addressed. Also, it's not exactly broken... -Ben\r\n  addToGroupService(name: string) {\r\n\tthis.groupName = name;\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence //We do currently have persistance, so make of this what you will -Ben\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n\tthis.dialog.closeAll()\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openSidebar() {\r\n\tif( !this.showSidebar) {\r\n\t\tthis.scrollService.setScrollPosition()\r\n\t} else {\r\n\t\tthis.scrollService.setScrollRestored(true)\r\n\t}\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\t\r\n\tthis.reloadFeatures();\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\t//Don't even ask, I don't know what we use this for... -Ben\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  //This is unused, but the paths are valid routes, mostly seen in the sidebar components.\r\n  //Tagger is the basic sidebar that appears when you oppen the taggit screen, Preset is for tag generation\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n  }\r\n\r\n  // TODO\r\n  //What there is TODO with this, I don't know. Probably nothing at all...\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  //I apologize in advance for this mess of a function -Ben\r\n  //This really needs to be split into something like 3 separate functions\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"FeatureID,longitude,latitude,src\"\r\n\t  let JSONHolder:String = \"\"\r\n\t  let projID = \"\"\r\n\t  let tagsPresent = true\r\n\t  let headerComplete = false //If true, then the full csv header info has been compiled\r\n\t  let headerTagOptions = 0 //Controls how many tagOption columns are in the final CSV\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet group, styles, tag\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tgroup = element.properties['group']\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tgroup = [{\r\n\t\t\t\t\t\t\"color\": \"#000000\",\r\n\t\t\t\t\t\t\"name\": \"N/A\",\r\n\t\t\t\t\t\t\"icon\": \"fa-house-damage\"\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\tstyles = element.properties['style']\r\n\t\t\t\t} catch{\r\n\t\t\t\t\tstyles = []\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\ttag = element.properties['tag']\r\n\t\t\t\t} catch{\r\n\t\t\t\t\ttag = []\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If groups are present on the data, add header data\r\n\t\t\t\tif( group.length > 0 && !headerComplete){\r\n\t\t\t\t\tCSVHolder += \",groupName,groupColor,groupIcon\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Check if the tag var has any data, if so, add new lines to the header\r\n\t\t\t\tif ( tag != undefined && tagsPresent && !headerComplete) {\r\n\t\t\t\t\t//Add a few more lines to the holder to accomodate tags\r\n\t\t\t\t\tCSVHolder += \",Icon,Color,tagType,tagSelection\"\r\n\t\t\t\t\ttag.forEach(tag => {\r\n\t\t\t\t\t\tlet tempTagOptionNum = 0\r\n\t\t\t\t\t\ttag.options.forEach(option => {\r\n\t\t\t\t\t\t\ttempTagOptionNum++\r\n\t\t\t\t\t\t\tif (tempTagOptionNum > headerTagOptions) {\r\n\t\t\t\t\t\t\t\tCSVHolder += \",tagOption\"\r\n\t\t\t\t\t\t\t\theaderTagOptions = tempTagOptionNum\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!headerComplete) {\r\n\t\t\t\t\t\tCSVHolder += \"\\r\\n\"\r\n\t\t\t\t\t\ttagsPresent = false\r\n\t\t\t\t\t\theaderComplete = true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(!headerComplete) {\r\n\t\t\t\t\t//If not, indent the last line.\r\n\t\t\t\t\tCSVHolder +=\"\\r\\n\"\r\n\t\t\t\t\theaderComplete = true\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error) {}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Compile the data it into a JSON\r\n\t\t\t\tJSONHolder += this.compileJSON(coordinates, element.id, featureSource, group, tag, styles) + \", \\n\"\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\t\t\t\t\r\n\t\t\t\t//If there is no groups for the feature, output without group info\r\n\t\t\t\tif( group == undefined ){\r\n\t\t\t\t\t//Indents CSV header.\r\n\t\t\t\t\tCSVHolder +=\"\\r\\n\"\r\n\t\t\t\t\t//Compiles data to a line of a CSV, and adds it to a growing full CSV file\r\n\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \"\\r\\n\"\r\n\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgroup.forEach(group => {\r\n\t\t\t\t\t\tconsole.log(group)\r\n\t\t\t\t\t\t//If tags exist, try to add each tag to the CSV\r\n\t\t\t\t\t\tif ( tag != undefined) {\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\ttag.forEach(tag => {\r\n\t\t\t\t\t\t\t\t//If the tag is in the group, compile a row\r\n\t\t\t\t\t\t\t\t//TODO: If a group doesn't have a tag, it doesn't get printed at all\r\n\t\t\t\t\t\t\t\tif(true){//(tag.groupName === group.name) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(tag);\r\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\r\n\t\t\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\t\t   Icon\t\t\t\t\t Color\r\n\t\t\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \",\" + styles.faIcon + \",\" + styles.color + \",\"\r\n\t\t\t\t\t\t\t\t\t// tagType\t\t\ttagOption(This is repeated a lot)\r\n\t\t\t\t\t\t\t\t\t+ tag.type + \",\" + tag.extra[0].option\r\n\t\t\t\t\t\t\t\t\ttag.options.forEach(option => {\r\n\t\t\t\t\t\t\t\t\t\t//Save each option in the tag to the CSV\r\n\t\t\t\t\t\t\t\t\t\t//Adds just the label to the CSV, we can reconstruct the key from that.\r\n\t\t\t\t\t\t\t\t\t\ttempCSV += \",\" + option.label\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\ttempCSV += \"\\r\\n\"\r\n\t\t\t\t\t\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} catch{\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t//If the above fails, attempt to construct a line with group data\r\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\r\n\t\t\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\r\n\t\t\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \"\\r\\n\"\r\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\t//If all else fails, It writes no data on an error, so output the groupless data\r\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \"\\r\\n\"\r\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//Compiles data to a line of a CSV\r\n\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\r\n\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\r\n\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \"\\r\\n\"\r\n\t\t\t\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\r\n  \tcompileJSON(coordinates, featureID, featureSource:string, groups = [], tags = [], style){\r\n\t\tlet compiledJSON = ''\r\n\t    let transferJSON\r\n\r\n\t\t//Add the most basic information to the compiled JSON\r\n\t\ttransferJSON = {\r\n\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\"src\": featureSource\r\n\t\t}\r\n\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\r\n\t\tif( groups.length != 0 ){\r\n\t\t\tgroups.forEach(group => {\r\n\t\t\t\t//At this point, group info should be added, \r\n\t\t\t\t//If tags are set to a default value, there are none present, compile without tag information\r\n\t\t\t\ttransferJSON = {\r\n\t\t\t\t\t\"groupName\": group.name,\r\n\t\t\t\t\t\"groupColor\": group.color\r\n\t\t\t\t}\r\n\t\t\t\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\t\t\t\tif( tags.length > 0) { //Compile a JSON with full tag information\r\n\t\t\t\t\ttags.forEach( tag => {\r\n\t\t\t\t\t\tif ( tag.feature == featureID ) {\r\n\t\t\t\t\t\t\ttransferJSON = {\r\n\t\t\t\t\t\t\t\t\"icon\": style.faIcon,\r\n\t\t\t\t\t\t\t\t\"icon color\": style.color,\r\n\t\t\t\t\t\t\t\t\"tag name\": tag.label,\r\n\t\t\t\t\t\t\t\t\"tag type\": tag.type,\r\n\t\t\t\t\t\t\t\t\"tag selection\": tag.extra[0].option,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t//If the above failed, compile the minimum JSON\r\n\t\tif( compiledJSON == \"\" ){\r\n\t\t\ttransferJSON = {\r\n\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\"src\": featureSource\r\n\t\t\t}\r\n\t\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\t\t}\r\n\t\treturn compiledJSON\r\n\t}\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\t//Its a quirk of those browsers that they don't allow same-page downloads\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {AfterViewChecked, Component, OnInit, Renderer2} from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project, FeatureCollection} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit, AfterViewChecked {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService,\r\n\t\t\t  private featureService: FeatureService) { }\r\n\r\n  \r\n\r\n  ngAfterViewChecked() {\r\n\tif ( this.scrollService.scrollRestored) {\r\n\t\tthis.scrollService.scroll()\r\n\t}\r\n  }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\t\r\n\tthis.featureService.features$.subscribe( (fc:any) => {\r\n\t\tif (fc) {\r\n\t\t\tif (fc.features.length > 0) {\r\n\t\t\t  this.imagesExist = true;\r\n\t\t\t\tthis.featureList = fc.features.filter(feature => {\r\n\t\t\t\t  try{\r\n\t\t\t\t\treturn feature.assets[0].asset_type === \"image\";\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t//If a feature has no asset, it ends up in this catch\r\n\t\t\t\t\t  console.error(error)\r\n\t\t\t\t\t//After outputting the error, add an \"image not found\" placeholder,\r\n\t\t\t\t\t//Allowing users to still select their errored import\r\n\t\t\t\t\t//Note that this doesn't really work!\r\n\t\t\t\t\tfeature.assets.push({ \"path\":\"../../images/Image-not-found.png\" })\r\n\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t\t} else {\r\n\t\t\t  this.imagesExist = false;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t/*\r\n\t//I think doing a more natural refresh in here will cause a dynamic reload\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t\tthis.featureList = fc.features.filter(feature => {\r\n\t\t\t  try{\r\n\t\t\t\treturn feature.assets[0].asset_type === \"image\";\r\n\t\t  \t  } catch (error) {\r\n\t\t\t\t//If a feature has no asset, it ends up in this catch\r\n\t\t\t  \tconsole.error(error)\r\n\t\t\t\t//After outputting the error, add an \"image not found\" placeholder,\r\n\t\t\t\t//Allowing users to still select their errored import\r\n\t\t\t\tfeature.assets.push({\r\n\t\t\t\t\t\"path\": \"../../images/Image-not-found.png\"\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t  \t  }\r\n\t\t\t});\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t} else {\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});*/\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t\t//If scrollSum is larger than the length of the feature list, curtail it to just be the length\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormsService, tags } from 'src/app/services/forms.service';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false; //Controls the whether or not an image box is selected or not\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private formsService: FormsService,\r\n\t\t\t   private dialog: MatDialog,\r\n\t\t\t   private scrollService: ScrollService,\r\n\t\t\t   private featureService: FeatureService\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource\r\n\tif( this.feature.assets[0].path != \"../../images/Image-not-found.png\") {\r\n\t\tfeatureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\t} else {\r\n\t\tfeatureSource = this.feature.assets[0].path\r\n\t}\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\t// console.log(this.groupList)\r\n\t\t\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t\t// console.log(e)\r\n\t\t\te.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t  this.tempGroup = []\r\n\t}\r\n\tthis.status = !this.status;\r\n\tif(this.status) {\r\n\t\tthis.groupsService.setItemsSelected(this.status)\r\n\t}\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t  this.groupsService.setItemsSelected(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\tconst featureService = this.featureService\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tfeatureService.deleteFeature(value)\r\n\t})\r\n\t//Resets contents of temp group\r\n\tthis.groupsService.addTempGroup([])\r\n\tthis.scrollService.setScrollRestored(true)\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\tthis.scrollService.setScrollPosition()\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\t// console.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\tthis.scrollService.setScrollPosition()\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string, feat: Feature) {\r\n\tlet color = \"\";\r\n\tlet icon = \"\"\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\t//   console.log(this.feature)\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t\ticon = e.icon\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = feat.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t  icon: icon,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t\ticon: icon,\r\n\t  });\r\n\t}\r\n\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\t\r\n\tfor (let tag of this.tagList){\r\n\t\tif (tag.feature === this.tempGroup[0].id && tag.groupName === name){\r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: tag.type,\r\n\t\t\t\tgroupName: name,\r\n\t\t\t\tlabel: tag.label,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: tag.options,\r\n\t\t\t\tfeature: this.feature.id,\r\n\t\t\t\textra: []\r\n\t\t\t}\r\n\t\t\tthis.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t}\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\t//Yes, I know there are two identical lines here. It doesn't work unless it does it twice\r\n\t//I don't know why that is, but if you can figure out a better way, go ahead.\r\n\tthis.geoDataService.getFeatures(Number(feat.project_id));\r\n\tthis.geoDataService.getFeatures(Number(feat.project_id));\r\n  }\r\n\r\n  addGroups(name: string) {\r\n\t  this.tempGroup.forEach( (feat) => {\r\n\t\t  this.selectGroupForm(name, feat)\r\n\t  })\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.scrollService.setScrollRestored(true)\r\n\t}\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n \r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature, tag } from '@turf/turf';\r\nimport { group } from '@angular/animations';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup(name: string) {\r\n\r\n\tlet data = this.formsService.getTags();\r\n\twhile(true){\r\n\t\tconst index = data.findIndex(item => item.groupName === name);\r\n\t\t// delete this.exampleNote[index];\r\n\t\tif (index > -1) {\r\n\t\tdata.splice(index, 1);\r\n\t\t}else{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == name){\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\tthis.groupList = this.groupList.filter(e => e.name != name);\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let feat of this.tempGroup){\r\n\r\n\t\tlet featProp = feat.properties;\r\n\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != name);\r\n\r\n\t\tfeatProp.tag = data\r\n\t\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\t//Set the default icon to be the group's icon\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t  this.choice = e.icon;\r\n\t\t}\r\n\t  });\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tlet index = 0\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t console.log(feat.id)\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t\tthis.formsService.saveStyles(\"default\", Number(feat.id))\r\n\t}\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\r\n\t  }\r\n\tthis.dialog.closeAll()\r\n\t});\r\n\t\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t//Loops through every feature in tempGroup, trying to match them to the features in the group list\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\tfeatProp.group.forEach(group => {\r\n\t\t\tif ( group.name == this.selectedGroup ) {\r\n\t\t\t\tgroup.name = name\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Finds every tag with the old group name and changes it to the new name\r\n\t\ttry{\r\n\t\t\tfeatProp.tag.forEach(tag => {\r\n\t\t\t\tif( tag.groupName == this.selectedGroup ) {\r\n\t\t\t\t\ttag.groupName = name\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch {}\r\n\r\n\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t}\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n  tempGroup: Array<Feature>;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup(name: string) {\r\n\t\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == name){\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\tthis.groupList = this.groupList.filter(e => e.name != name);\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let feat of this.tempGroup){\r\n\r\n\t\tlet featProp = feat.properties;\r\n\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != name);\r\n\t\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  //Might move the guts of this method to either featureService or groupService and have it update the observable\r\n  //Delete asset removes the feature from the active group\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tthis.tempGroup = group.features;\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup(group.name);\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tfor (let feat of this.tempGroup){\r\n\r\n\tlet featProp = feat.properties;\r\n\tif (feat.id == assetId){\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\t}}\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n  private activeGroup$: Subscription;\r\n  activeGroup: string;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService,\r\n    private featureService: FeatureService) { }\r\n\r\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n    // console.log(this.field)\r\n    // console.log(this.form)\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    \r\n      this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n    });\r\n\r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n \r\n      let index \r\n      this.checkedOpt.forEach(opt => {      \r\n\r\n        if(opt != undefined){\r\n          index = opt.findIndex(item => item.id === this.activeFeatureId && item.option === this.field.label && item.group === this.activeGroup && item.label === this.form['label']);\r\n\r\n          if (index > -1){\r\n            this.isChecked = true\r\n          }}\r\n      })\r\n      // const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\r\n\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeFeatureId$.unsubscribe();\r\n    }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.featureService.updateChecked(option, this.activeFeatureId, this.activeGroup, this.form['label'], \"create\");\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.featureService.updateChecked(option, this.activeFeatureId, this.activeGroup, this.form['label'], \"delete\");\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService,\r\n    private featureService: FeatureService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 2 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.chosenTag = opt[index].option\r\n        }}\r\n      \r\n      \r\n    });\r\n\r\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\r\n    // if (index > -1){\r\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    // }\r\n    \r\n    // console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ this.featureService.updateExtra(this.chosenTag, 2, this.activeFeatureId, this.activeGroup, this.form['label'], \"dropdown\");}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() label:String;\r\n  public chosenTag: string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService,\r\n    private featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID == 0 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        if (index > -1){\r\n          this.chosenTag = opt[index].option\r\n        }}\r\n      \r\n      \r\n    });\r\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\r\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\r\n    // console.log(index)\r\n    // if (index > -1){\r\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    // }\r\n  // }\r\n  }\r\n\r\n  updateCheckedTag(){ this.featureService.updateExtra(this.chosenTag, 0, this.activeFeatureId, this.activeGroup,this.form['label'], \"radio\");}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n  notes:string = \"notes\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService,\r\n    private featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 3&&item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.note = opt[index].option\r\n        }\r\n      }\r\n      \r\n      \r\n    });\r\n\r\n    // const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\r\n    // if (index > -1){\r\n    //   this.note = this.formsService.getNotes()[index]['option']\r\n    // }\r\n  }\r\n\r\n  updateNotes(){ \r\n    // console.log(this.form['label'])\r\n    // console.log(this.form.name)\r\n    this.featureService.updateExtra(this.note, 3, this.activeFeatureId, this.activeGroup, this.form['label'], \"text\"); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FeatureService } from 'src/app/services/feature.service';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n  @Input() label:String;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService,\r\n    private featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 1 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        if (index > -1){\r\n          this.chosenTag = opt[index].option\r\n        }\r\n      }\r\n      \r\n      this.chosenColor = this.color \r\n      \r\n    });\r\n  }\r\n\r\n  updateCheckedTag(){ \r\n    this.formsService.saveStyles(this.chosenColor, this.activeFeatureId)\r\n    this.featureService.updateExtra(this.chosenTag, 1, this.activeFeatureId, this.activeGroup, this.form['label'], \"color\"); }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tToastrModule.forRoot(),\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"deleteTag(tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"newTagValue\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tvalue={{tag.label}}\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(keyup.enter)=\\\"renameTag(tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\" (click)=\\\"renameTag(tag.label)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\" label={{field.label}}></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" label={{field.label}} [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}