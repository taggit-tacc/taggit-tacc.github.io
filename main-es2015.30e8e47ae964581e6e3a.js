(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"/WLi":function(t,e,i){"use strict";i.r(e),e.default='<div>\n  <select class="form-control" [(ngModel)]="chosenTag" id="field.name" name="field.name" (change)="updateCheckedTag()">\n      <option *ngFor="let opt of field" [value]="opt.label">{{opt.label}}</option>\n  </select>\n</div>'},0:function(t,e,i){t.exports=i("zUnb")},"033P":function(t,e,i){"use strict";i.r(e),e.default='<div class="asset-list">\n  <div class="subitem-title" (click)="expandPanel()">Image List</div>\n\n  <div *ngIf="showSubitem" class="subitem asset-subitem">\n\n\t<div *ngFor="let asset of getActiveFeatures()" (click)="jumpToImage(asset)" class="asset-container" [ngClass]="{\'highlight\': isActiveFeature(asset)}">\n\n\t  <div class="name-group">\n\t\t{{ getAssetDisplay(asset) }}\n\t  </div>\n\n\t  <div class="button-group">\n\t\t<div (click)="deleteAsset(asset.id)">\n\t\t  <i class="fas fa-minus"\n\t\t\t matTooltip="Delete"\n\t\t\t matTooltipPosition="above">\n\t\t  </i>\n\t\t</div>\n\t  </div>\n\t</div>\n  </div>\n</div>\n'},"0NOL":function(t,e,i){"use strict";i.r(e),e.default='<h4> Select Files </h4>\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\n<hr>\n<select (ngModelChange)="selectSystem($event)" [(ngModel)]="selectedSystem">\n\t<option [ngValue]="myDataSystem"> My Data </option>\n\t<option [ngValue]="communityDataSystem"> Community Data</option>\n\t<option [ngValue]="publishedDataSystem"> Published Data</option>\n\t<optgroup label="My Projects">\n\t\t<option *ngFor="let project of projects" [ngValue]="project">{{project.description}}</option>\n\t</optgroup>\n</select>\n\n<div class="fileslisting"  infiniteScroll [infiniteScrollDistance]="2" [infiniteScrollThrottle]="100" [scrollWindow]="false" (scrolled)="getFiles()">\n\t<div class="clickable" class="grid-x file-row" (dblclick)="toRoot()">\n\t\t<i class="fas fa-folder"></i>\n\t\t<span > Home </span>\n\t</div>\n\t<div class="clickable" class="grid-x file-row">\n\t\t<i class="fas fa-folder-open"></i>\n\t\t<span class="lineBreak"> {{selectedPath}} </span>\n\t</div>\n\t<div *ngIf="retrievalError" class="grid-x file-row" class="error">\n\t\tError retrieving files\n\t</div>\n\t<div class="grid-x file-row" *ngFor="let file of filesList; let fileIndex = index" [ngClass]="{\'selected\':selectedFiles.has(file.path)}">\n\t\t<div class="clickable" (click)="select($event, file, fileIndex)"  (dblclick)="browse(file)">\n\n\t\t\t<i class="fas fa-folder" *ngIf="file.type === \'dir\'" ></i>\n\t\t\t<i class="far fa-file" *ngIf="file.type !== \'dir\'"></i>\n\t\t\t<span > {{ file.name }} </span>\n\t\t</div>\n\t\t<div class="size">\n\t\t\t{{file.length | filesize }}\n\t\t</div>\n\t</div>\n\t<div class="grid-x" *ngIf="inProgress">\n\t\t<div class="cell medium-12">\n\t\t  <i class="fas fa-spin fa-atom"></i>\n\t\t</div>\n\t  </div>\n</div>\n\n<div class="button-group">\n\t<button mat-raised-button color="basic" (click)="selectAll()">Select all</button>\n\t<button mat-raised-button color="warn" class="button warning" (click)="cancel()">Done</button>\n\t<button mat-raised-button color="primary" class="button" [disabled]="!selectedFiles.size" (click)="chooseFiles()">Import</button>\n</div>\n'},"1NWJ":function(t,e,i){"use strict";i.r(e),e.default=":host .drop-container {\n  background: #fff;\n  border-radius: 6px;\n  height: 150px;\n  width: 100%;\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed #c0c4c7;\n}\n:host p {\n  font-size: 16px;\n  font-weight: 400;\n  color: #c0c4c7;\n}\n:host .upload-button {\n  display: inline-block;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: #5754a3;\n}\n:host .upload-button input {\n  display: none;\n}\n:host .dropzone {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border-radius: 5px;\n  background: white;\n  margin: 10px 0;\n}\n:host .dropzone.hovering {\n  border: 2px solid #f16624;\n  color: #dadada !important;\n}\n:host progress::-webkit-progress-value {\n  transition: width 0.1s ease;\n}"},"503e":function(t,e,i){"use strict";i.r(e),e.default='<div [formGroup]="form">\n  <div *ngIf="!field.value" class="drop-container dropzone" dropZone (hovered)="toggleHover($event)"\n       (dropped)="field.onUpload($event)" [class.hovering]="isHovering">\n    <p class="m-0">\n      Drag a file here or\n      <label class="upload-button">\n\t<input type="file" multiple="" (change)="field.onUpload($event.target.files)"> browse\n      </label>\n      to upload.\n    </p>\n  </div>\n  <div *ngIf="field.value">\n    \x3c!-- <button type="button" class="btn btn-primary">Change</button> --\x3e\n    <div class="card">\n      <img class="card-img-top" [src]="field.value">\n    </div>\n  </div>\n</div>\n'},"6CRC":function(t,e,i){"use strict";i.r(e),e.default=""},"7E2L":function(t,e,i){"use strict";i.r(e),e.default='<h4> Select Files </h4>\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\n<hr>\n<select (ngModelChange)="selectSystem($event)" [(ngModel)]="selectedSystem">\n\t<option [ngValue]="myDataSystem"> My Data </option>\n\t<option [ngValue]="communityDataSystem"> Community Data</option>\n\t<option [ngValue]="publishedDataSystem"> Published Data</option>\n\t<optgroup label="My Galleries">\n\t\t<option *ngFor="let project of projects" [ngValue]="project">{{project.description}}</option>\n\t</optgroup>\n</select>\n<div class="fileslisting"  infiniteScroll [infiniteScrollDistance]="2" [infiniteScrollThrottle]="100" [scrollWindow]="false" (scrolled)="getFiles()">\n\t<div class="grid-x file-row" *ngFor="let file of filesList" [ngClass]="{\'selected\':selectedFiles.has(file.path)}">\n\t\t<div class="clickable" (dblclick)="browse(file)">\n\t\t\t<i class="fas fa-folder" *ngIf="file.type === \'dir\'" ></i>\n\t\t\t<i class="far fa-file" *ngIf="file.type !== \'dir\'"></i>\n\t\t\t<span > {{ file.name }} </span>\n\t\t</div>\n\t\t<div class="size">\n\t\t\t{{file.length | filesize }}\n\t\t</div>\n\t</div>\n\t<div class="grid-x" *ngIf="inProgress">\n\t\t<div class="cell medium-12">\n\t\t  <i class="fas fa-spin fa-atom"></i>\n\t\t</div>\n\t  </div>\n\n</div>\n\n<form [formGroup]="downloadSelectForm" (ngSubmit)="update()" id="current-project-form">\n    <div>\n        <small><em> If no filename is specified, it will default to the Gallery ID number. </em></small>\n    </div>\n\n    <mat-form-field>\n        <input matInput type="text" formControlName="Name" appearance="filled"  required="false">\n    </mat-form-field>\n</form>\n<span class="radio-box">\n<mat-radio-group [(ngModel)]="fileExtension">\n    <mat-radio-button value=".csv">.csv</mat-radio-button>\n    <mat-radio-button value=".json">.json</mat-radio-button>\n</mat-radio-group>\n</span>\n\n<div class="button-group">\n\t<button mat-raised-button color="warn" class="button warning" (click)="cancel()">Cancel</button>\n\t<button mat-raised-button color="primary" class="button" (click)="chooseFiles()">Save</button>\n</div>\n'},"8lyn":function(t,e,i){"use strict";i.r(e),e.default=":host .top-bar {\n  height: 40px;\n  padding: 5px;\n  padding-left: 0.5em;\n  flex-wrap: nowrap;\n  position: fixed;\n  overflow: hidden;\n  width: 100%;\n  z-index: 999;\n}\n:host .top-bar-right .top-bar-left {\n  -webkit-box-flex: 0;\n  flex-wrap: nowrap;\n  flex: 0 1 auto;\n  max-width: 100%;\n}\n@media print, screen and (min-width: 40em) {\n  :host .top-bar {\n    flex-wrap: nowrap;\n    flex: 0 1 auto;\n  }\n}"},AZwa:function(t,e,i){"use strict";i.r(e),e.default='\x3c!-- <div class="grid-x"> --\x3e\n\n\x3c!--   <div class="top-bar" style="background-color: black" id="navbar"> --\x3e\n\n\x3c!--\t<div class="top-bar-left"> --\x3e\n\x3c!--\t  <img src="assets/logo.svg" width="30PX"> --\x3e\n\x3c!--\t  <span style="color: white">Taggit</span> --\x3e\n\x3c!--\t</div> --\x3e\n\n\n\x3c!--\t<div class="top-bar-right"> --\x3e\n\x3c!--\t  <div class="light-blue" *ngIf="currentUser">{{ currentUser.username }}</div> --\x3e\n\x3c!--\t</div> --\x3e\n\n\x3c!--   </div> --\x3e\n\n\x3c!--   <\\!-- <div class="cell control-bar"> -\\-> --\x3e\n\x3c!--   <\\!--\t<app-control-bar></app-control-bar> -\\-> --\x3e\n\x3c!--   <\\!-- </div> -\\-> --\x3e\n\x3c!-- </div> --\x3e\n\n<app-control-bar></app-control-bar>\n\x3c!-- NOTE Router Outlet was here --\x3e\n<app-image-gallery></app-image-gallery>\n\n\x3c!-- NOTE Leaflet was here --\x3e\n'},Af46:function(t,e,i){"use strict";i.r(e),e.default="<p>\n  notfound works!\n</p>\n"},"Ag+R":function(t,e,i){"use strict";i.r(e),e.default=":host {\n  min-height: 20em;\n}\n:host .fileslisting {\n  height: 20em;\n  overflow-y: scroll;\n  padding: 0px 20px;\n}\n:host .file-row {\n  display: flex;\n  background: #f9f9f9;\n  border: 1px solid transparent;\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n}\n:host .clickable {\n  flex: 1;\n  max-width: 20em;\n}\n:host .size {\n  align-items: flex-end;\n}\n:host .file-row:hover {\n  border: 1px solid;\n}\n:host .file-row.selected {\n  background: #d3d3d3;\n}\n:host .mat-radio-button ~ .mat-radio-button {\n  margin-left: 16px;\n}\n:host .radio-box {\n  position: relative;\n  bottom: 45px;\n  left: 45%;\n}"},FN4D:function(t,e,i){"use strict";i.r(e),e.default=""},I57P:function(t,e,i){"use strict";i.r(e),e.default=":host {\n  overflow-y: scroll;\n}\n:host .select-group {\n  overflow: hidden;\n  max-height: 20%;\n}\n:host .subitem-title {\n  text-align: left;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #F1F1F1;\n  display: flex;\n  justify-content: space-between;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #F1F1F1;\n  border-style: solid;\n  overflow-y: scroll;\n  background-color: #FFFFFF;\n  height: 100%;\n}\n:host .group-subitem {\n  height: 100px;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .boxed input[type=radio] {\n  display: none;\n}\n:host .boxed label {\n  background-color: #fff;\n  transition: all 0.3s;\n}\n:host .boxed input[type=radio]:checked + label {\n  background-color: #B3E5FF;\n}\n:host .group-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .name-group {\n  display: inline-block;\n  padding: 3px;\n}\n:host .button-group {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n}\n:host .button-group div {\n  padding: 3px;\n}\n:host .fa {\n  font-weight: 900;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  font-family: Font Awesome\\ 5 Free;\n  line-height: 1;\n}\n:host .fa option {\n  font-weight: 900;\n}"},IElf:function(t,e,i){"use strict";i.r(e),e.default=":host {\n  background-color: #F1F1F1;\n}"},MHpZ:function(t,e,i){"use strict";i.r(e),e.default='<div class="create-prompt">\n  <div class="subitem-title" (click)="expandPanel()">\n\t<span>\n\t  Create Tag\n\t</span>\n\t\x3c!-- <span style="cursor: pointer" --\x3e\n\t\x3c!--\t  (click)="addFormItem(); clearLabel(); clearOption()" --\x3e\n\t\x3c!--\t  matTooltip="Add Form Item" --\x3e\n\t\x3c!--\t  style="cursor: pointer; margin-right: 20px" --\x3e\n\t\x3c!--\t  matTooltipPosition="above"> --\x3e\n\t\x3c!--   <i class="fas fa-plus"></i> --\x3e\n\t\x3c!-- </span> --\x3e\n  </div> \x3c!-- subitem-title --\x3e\n\n  <div *ngIf="showSubitem" class="subitem">\n\t<form class="form-type-form">\n\t  <div *ngFor="let control of enabledControls; let idx = index" class="box form">\n\t\t<input type="radio" [id]="control" value="control.toLowerCase()" name="form-type" [checked]="(idx === 0)" (change)="selectInputForm(control.toLowerCase())">\n\t\t<label style="cursor: pointer; margin: 3px; padding: 3px; font-size: 10px" [for]="control">{{ control }}</label>\n\t  </div> \x3c!-- form-type-form --\x3e\n\t</form>\n\n\t<div *ngIf="formType == \'text\'; else optionForms">\n\t  <div class="form-name">\n\t\t<mat-form-field class="input-label-group">\n\t\t  <mat-label>Label</mat-label>\n\t\t  <input matInput placeholder="Label" #labelValue [(ngModel)]="labelFilter" (keyup)="inputFormLabel($event)" name="labelFilter" class="tiny" type="text">\n\t\t</mat-form-field>\n\t  </div> \x3c!--form-name --\x3e\n\t</div> \x3c!-- formtype --\x3e\n\n\t<ng-template #optionForms>\n\t  <div class="form-name">\n\n\t\t<mat-form-field class="input-label-group">\n\t\t  <mat-label>Label</mat-label>\n\t\t  <input matInput placeholder="Label" #labelValue [(ngModel)]="labelFilter" (keyup)="inputFormLabel($event)" name="labelFilter" class="tiny" type="text">\n\t\t</mat-form-field>\n\t\t<mat-form-field class="input-label-group">\n\t\t  <mat-label>Options</mat-label>\n\t\t  <div class="input-group">\n\t\t\t<input matInput #optionValue class="input-group-field" placeholder="Option" type="text" [(ngModel)]="optionFilter" name="optionFilter" (keyup.enter)="addOptionItem(optionValue.value); optionValue.value = \'\'; clearOption()">\n\t\t  </div> \x3c!-- input-group --\x3e\n\t\t</mat-form-field>\n\n\t\t<div class="input-group-button">\n\t\t  <button mat-button color="accent" class="button" (click)="addOptionItem(optionValue.value); optionValue.value = \'\'; clearOption()">\n\t\t\t<i class="fas fa-plus"></i>\n\t\t  </button>\n\t\t</div> \x3c!-- input-group-button --\x3e\n\n\t\t<ul class="form-option-container">\n\t\t  <li *ngFor="let opt of formOptions" class="list-group">\n\t\t\t<div [className]="showOpt">\n\t\t\t  {{opt.label}}\n\t\t\t</div> \x3c!-- showopt --\x3e\n\t\t\t<div class="button-group">\n\t\t\t  <div (click)="deleteOption(opt)">\n\t\t\t\t<i class="fas fa-minus"\n\t\t\t\t   matTooltip="Delete"\n\t\t\t\t   matTooltipPosition="above"\n\t\t\t\t   style="cursor: pointer">\n\t\t\t\t</i>\n\t\t\t  </div> \x3c!-- delete opt --\x3e\n\n\t\t\t  <div (click)="openRenameOptionModal(renameOptionModal)">\n\t\t\t\t<i class="fas fa-edit"\n\t\t\t\t   style="cursor: pointer"\n\t\t\t\t   matTooltip="Rename"\n\t\t\t\t   matTooltipPosition="above">\n\t\t\t\t</i>\n\t\t\t  </div>\n\n\t\t\t  <ng-template #renameOptionModal>\n\t\t\t\t<input matInput #optionRename\n\t\t\t\t\t   placeholder="Rename Option">\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<div class="button-group">\n\t\t\t\t  <button matDialogClose\n\t\t\t\t\t\t  mat-raised-button\n\t\t\t\t\t\t  color="primary"\n\t\t\t\t\t\t  (click)="renameOption(opt, optionRename.value)">Rename</button>\n\t\t\t\t  <button matDialogClose\n\t\t\t\t\t\t  mat-button>Cancel</button>\n\t\t\t\t</div>\n\t\t\t  </ng-template>\n\n\t\t\t</div> \x3c!-- button group --\x3e\n\n\t\t  </li>\n\t\t</ul>\n\t  </div> \x3c!-- form name --\x3e\n\t</ng-template> \x3c!-- form options --\x3e\n\n\t<button mat-raised-button color="primary" (click)="addFormItem(); clearLabel(); clearOption()">Save</button>\n\t<button mat-button color="primary" (click)="cancelCreate(); clearLabel(); clearOption()">Cancel</button>\n\n  </div> \x3c!-- subitem --\x3e\n</div> \x3c!-- create-group --\x3e\n'},N3QO:function(t,e,i){"use strict";i.r(e),e.default=":host .img-list-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 1em;\n  height: 100%;\n  padding: 1em;\n}\n:host #no-img {\n  font-size: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n}\n:host #no-proj {\n  font-size: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n}\n:host #new-proj {\n  font-size: 32px;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n:host app-image-box {\n  height: 100%;\n}\n:host .masonry-item {\n  width: 200px;\n}\n:host img-spin {\n  position: relative;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100px;\n  background: #fff;\n}\n:host load-spin {\n  position: relative;\n  width: 100%;\n  height: 100px;\n  background: #fff;\n}\n:host .side-bar-container {\n  background-color: #F1F1F1;\n  position: fixed;\n  width: 25%;\n  margin-right: 0px;\n  height: calc(100vh - 50px);\n  right: 0;\n}\n:host .success {\n  margin-right: 20%;\n}\n:host .danger {\n  margin-right: 0%;\n}\n:host #gallery-container-container {\n  position: relative;\n  width: 100%;\n  height: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  margin-top: 0px;\n}\n:host #loading-load {\n  position: relative;\n  width: 100%;\n  height: auto;\n  text-align: center;\n  flex-direction: column;\n  margin-top: 50px;\n}\n:host #gallery-container {\n  position: relative;\n  width: 100%;\n  height: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n}\n:host #gallery-container .gallery-image {\n  height: 100%;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n:host #gallery-container .gallery-image img {\n  max-width: 100%;\n  max-height: 100%;\n  margin: 0 auto;\n}\n:host .imager {\n  width: 75%;\n  height: calc(100vh - 50px);\n  background-color: #fefefe;\n}\n:host .view-image {\n  max-width: 100%;\n  height: auto;\n}\n:host .gallery-btn {\n  width: 35px;\n  height: 35px;\n  background: #000;\n  color: #fff;\n  text-align: center;\n  line-height: 35px;\n  cursor: pointer;\n  transition: all 0.4s ease;\n  font-size: 20px;\n  box-sizing: border-box;\n  padding-left: 2px;\n  position: fixed;\n  bottom: 10px;\n}\n:host .gallery-btn:hover {\n  background: #222;\n}\n:host .gallery-close {\n  top: 10px;\n}\n:host .gallery-close .gallery-next {\n  right: 10px;\n}\n:host .gallery-prev {\n  right: 50px;\n}\n:host .gallery-prev .gallery-next {\n  bottom: 10px;\n}\n@media (min-width: 478px) {\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\n    grid-row-end: span 2;\n  }\n}\n@media (max-width: 768px) {\n  :host .img-list-container {\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  }\n}\n@media (max-width: 450px) {\n  :host .img-list-container {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n}"},P1jy:function(t,e,i){"use strict";i.r(e),e.default='<h4>Share this project</h4>\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\n\n<form [formGroup]="projShareForm" (ngSubmit)="submit()" id="share-project-form">\n    <mat-form-field>\n        <mat-label>Username:</mat-label>\n        <input matInput type="text" formControlName="name" required="true">\n    </mat-form-field>\n\n<div class="button-group small">\n    <button mat-raised-button color="warn" class="button small warning" type="button" (click)="close()">Close</button>\n    <button mat-raised-button color="primary" class="button small align-right" type="submit" [disabled]="!projShareForm.valid">Add Member</button>\n</div>\n\n<br>\n<h5>Current Users</h5>\n<div *ngFor="let user of projectUsers">\n    <br>\n    <mat-card class="card-container">\n        <span class="card-item">\n            {{user.username}}\n        </span>\n        <span class="card-buttons">\n            <button mat-raised-button color="warn" class="button small warning" type="button" [disabled]="onlyOne" (click)="delete(user.username)">\n                <i class="fas fa-trash"></i>\n            </button>\n        </span>\n    </mat-card>\n</div>\n</form>'},Pwca:function(t,e,i){"use strict";i.r(e),e.default='<div *ngIf="loaded; else loader" id="loading-load">\n  <div *ngIf="projectsExist; else noProjWarn" id="gallery-container">\n\t<div *ngIf="imagesExist; else noImgWarn" id="gallery-container-container">\n\t  <div [ngClass]="status ? \'success\' : \'danger\'"\n\t\t   infiniteScroll\n\t\t   [infiniteScrollDistance]="1"\n\t\t   [infiniteScrollThrottle]="1500"\n\t\t   (scrolled)="onScroll()"\n\t\t   class="img-list-container"\n\t\t   *ngIf="!showSidebar; else elseBlock">\n\t\t<app-image-box\n\t\t  *ngFor="let feat of featureListScroll"\n\t\t  [feature]="feat">\n\t\t</app-image-box>\n\t  </div>\n\n\t  <ngx-spinner\n\t\tbdOpacity = 0.9\n\t\tbdColor = ""\n\t\tsize = "default"\n\t\tcolor = "#3ADB76"\n\t\ttype = "line-scale-pulse-out"\n\t\tid = "img-spin"\n\t\t[fullScreen] = "false">\n\t  </ngx-spinner>\n\t  <ng-template #elseBlock>\n\t\t<div *ngIf="groupExist; else noImgDisplay">\n\t\t  <div class="imager">\n\t\t\t<img class="view-image" [src]="getPath()">\n\t\t  </div>\n\t\t</div>\n\t\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\n\t\t\x3c!-- <div (click)="otherPath(1)">next</div> --\x3e\n\t\t\x3c!-- <div (click)="otherPath(-1)">prev</div> --\x3e\n\n\n\t\t\x3c!-- <img [src]="getPath()"> --\x3e\n\t\t\x3c!-- <button class="button" (click)="otherPath(1)">next</button> --\x3e\n\t\t\x3c!-- <button class="button" (click)="otherPath(-1)">prev</button> --\x3e\n\n\t\t\x3c!-- <app-image-list> --\x3e\n\t\t  \x3c!--   <\\!-- *ngFor="let feat of features.features" -\\-> --\x3e\n\t\t\t\x3c!--   <\\!-- [feature]="feat" -\\-> --\x3e\n\n\t\t\t  \x3c!--   <\\!-- *ngFor="let feat of features.features" -\\-> --\x3e\n\t\t\t\t\x3c!--   <\\!-- [feature]="features.features" -\\-> --\x3e\n\t\t\t\t  \x3c!--   <\\!-- (clickRequest)="addGroupList($event)" -\\-> --\x3e\n\t\t\t\t\t\x3c!-- </app-image-list> --\x3e\n\n\t  </ng-template>\n\t  <div *ngIf="showSidebar" class="side-bar-container">\n\t\t<app-side-bar></app-side-bar>\n\t  </div>\n\t</div>\n\t<ng-template #noImgWarn>\n\t  <div id="no-img">\n\t\tNo images have been imported!<br>Please import images through the menu.\n\t  </div>\n\t</ng-template>\n  </div>\n\n  <ng-template #noProjWarn>\n\t<div id="no-proj">\n\t  No project has been created!<br>Please create a project through the menu.\n\t</div>\n  </ng-template>\n\n  \x3c!-- <div id="gallery-container"> --\x3e\n\t\x3c!--   <div [ngClass]="status ? \'success\' : \'danger\'"> --\x3e\n\t  \x3c!--\t<div class="img-list-container" *ngIf="!showSidebar; else elseBlock"> --\x3e\n\t\t\x3c!--\t  <app-image-box --\x3e\n\t\t\x3c!--\t\t*ngFor="let feat of features.features" --\x3e\n\t\t\x3c!--\t\t[feature]="feat" --\x3e\n\t\t\x3c!--\t\t(clickRequest)="addGroupList($event)"> --\x3e\n\t\t  \x3c!--\t  </app-image-box> --\x3e\n\t\t\x3c!--\t</div> --\x3e\n\n\t  \x3c!--\t<ng-template #elseBlock> --\x3e\n\t\t\x3c!--\t  <app-image-list> --\x3e\n\t\t  \x3c!--\t  </app-image-list> --\x3e\n\t\t\x3c!--\t</ng-template> --\x3e\n\n\t  \x3c!--   </div> --\x3e\n\t\x3c!--   <div *ngIf="showSidebar" class="side-bar-container"> --\x3e\n\t  \x3c!--\t<app-side-bar></app-side-bar> --\x3e\n\t  \x3c!--   </div> --\x3e\n\t\x3c!-- </div> --\x3e\n\n</div>\n\n<ng-template #loader>\n  <div *ngIf="projectsExist; else createProj" id="loader">\n\tLoading...\n  </div>\n\n  <ng-template #createProj> \n\t<div id="new-proj" (click)="openCreateProjectModal()">\n\t\tStart a new project\n\t</div>\n</ng-template>\n\n\n  \x3c!-- <ngx-spinner\n\tbdOpacity = 0.9\n\tbdColor = ""\n\tsize = "default"\n\tcolor = "#3ADB76"\n\ttype = "line-scale-pulse-out"\n\tid = "load-spin"\n\t[fullScreen] = "false">\n  </ngx-spinner> --\x3e\n</ng-template>\n'},"T+fY":function(t,e,i){"use strict";i.r(e),e.default='<div class="form-group row" *ngFor="let tag of field">\n  <label class="col-md-3 form-control-label" [attr.for]="tag.label">\n\t{{field.label}}\n\t<strong class="text-danger" *ngIf="tag.required">*</strong>\n  </label>\n  <div class="col-md-9" [ngSwitch]="tag.type">\n\t<app-form-color *ngSwitchCase="\'color\'" [field]="field" [form]="form"></app-form-color>\n\t<app-form-textbox *ngSwitchCase="\'text\'" [field]="field" [form]="form"></app-form-textbox>\n\t<app-form-dropdown *ngSwitchCase="\'dropdown\'" [field]="field" [form]="form"></app-form-dropdown>\n\t<app-form-checkbox *ngSwitchCase="\'checkbox\'" [field]="field" [form]="form"></app-form-checkbox>\n\t<app-form-radio *ngSwitchCase="\'radio\'" [field]="field" [form]="form"></app-form-radio>\n\t\x3c!-- <app-form-file *ngSwitchCase="\'file\'" [field]="field" [form]="form"></app-form-file> --\x3e\n\t<div class="alert alert-danger my-1 p-2 fadeInDown animated" *ngIf="!isValid && isDirty">{{tag.label}} is required</div>\n  </div>\n</div>\n'},T7o7:function(t,e,i){"use strict";i.r(e),e.default=":host .subitem-title {\n  text-align: left;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #F1F1F1;\n  display: flex;\n  justify-content: space-between;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #F1F1F1;\n  border-style: solid;\n  overflow-y: scroll;\n  background-color: #FFFFFF;\n  height: 100%;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .asset-list {\n  max-height: 20%;\n  overflow: hidden;\n}\n:host .asset-subitem {\n  height: 100px;\n}\n:host .asset-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n}\n:host .highlight {\n  background-color: #B3E5FF;\n}\n:host .name-group {\n  display: inline-block;\n  padding: 3px;\n}\n:host .button-group {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n}\n:host .button-group div {\n  padding: 3px;\n  padding-right: 5px;\n}"},VzVu:function(t,e,i){"use strict";i.r(e),e.default="\x3c!--The content below is only a placeholder and can be replaced.--\x3e\n<router-outlet></router-outlet>\n"},X9m5:function(t,e,i){"use strict";i.r(e),e.default='<div id="callback">\n    <div>\n\t<i class="fas fa-spinner"></i>\n    </div>\n</div>\n'},"ay+3":function(t,e,i){"use strict";i.r(e),e.default='<div class="img-container">\n  <img [ngClass]="status ? \'img-selected\' : \'img-unselected\'"\n\t   [src]="featureSource"\n\t   (click)="imageSelect()"\n\t   class="img-responsive img-target"\n\t   title={{featurePath}}>\n  <div class="top-overlay">\n\t<div class="image-option"\n\t\t matTooltip="Zoom"\n\t\t matTooltipPosition="below"\n\t\t (click)="imageZoom(diffSizes)">\n\t  <i class="fas fa-search-plus"></i>\n\t</div>\n\n\t<ng-template #diffSizes>\n\t  <div class="zoom-content">\n\t\t<div class="img-container">\n\t\t  <img [src]="featureSource" title={{featurePath}}>\n\t\t</div>\n\t\t<div class="img-details">\n\t\t  <div class="detail-container">\n\t\t\t<div class="title">\n\t\t\t  Coordinates\n\t\t\t</div>\n\t\t\t<div class="detail-contents">\n\t\t\t  <div class="detail-item">\n\t\t\t\t{{coordinates[0]}},\n\t\t\t  </div>\n\t\t\t  <div class="detail-item">\n\t\t\t\t{{coordinates[1]}}\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>\n\t\t  <div class="detail-container">\n\t\t\t<div class="title">\n\t\t\t  Image Source\n\t\t\t</div>\n\t\t\t<div class="detail-contents">\n\t\t\t  <div class="detail-item">\n\t\t\t\t{{featurePath}}\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>\n\t\t<button mat-button class="close-button" matDialogClose aria-label="Close modal" type="button">\n\t\t  <span aria-hidden="true">&times;</span>\n\t\t</button>\n\t  </div>\n\t</ng-template>\n\n\t<div class="image-option"\n\t\t matTooltip="Remove"\n\t\t matTooltipPosition="below"\n\t\t (click)="openImageDeleteModal(deleteImage)">\n\t  <i class="fas fa-trash"></i>\n\t</div>\n\n\t<ng-template #deleteImage>\n\t  <div *ngIf="tempGroup.length === 1">\n\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\n\t  </div>\n\n\t  <div *ngIf="tempGroup.length > 1">\n\t\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\n\t\t</div>\n\n\t  <button mat-raised-button color="primary" matDialogClose (click)="imageDelete()">Delete Image</button>\n\t  <button mat-button matDialogClose>Cancel</button>\n\t</ng-template>\n\n\t<div class="image-option"\n\t\t matTooltip="Add To Group"\n\t\t matTooltipPosition="below"\n\t\t (click)="openImageAddModal(addMoreToGroup)">\n\t  <i class="fas fa-plus"></i>\n\t</div>\n\n\t<ng-template #addMoreToGroup>\n\n\t  <mat-form-field appearance="fill">\n\t\t<mat-label>Groups</mat-label>\n\t\t<mat-select matNativeControl required [(value)]="activeGroup">\n\t\t  <mat-option>\n\t\t\tNone\n\t\t  </mat-option>\n\t\t  <mat-option *ngFor="let group of groupList" [value]="group.name">\n\t\t\t{{ group.name }}\n\t\t  </mat-option>\n\t\t</mat-select>\n\t  </mat-form-field>\n\n\t  \x3c!-- <select #selectGroup class="form-control" [value]="activeGroup"> --\x3e\n\t  \x3c!--\t<option *ngFor="let group of groupList"> --\x3e\n\t  \x3c!--\t  {{ group.name }} --\x3e\n\t  \x3c!--\t</option> --\x3e\n\t  \x3c!-- </select> --\x3e\n\t  \x3c!-- <button mat-raised-button color="primary" matDialogClose (click)="selectGroupForm(selectGroup.value)">Add To Group</button> --\x3e\n\t  <p>\n\t\t<button mat-raised-button color="primary" matDialogClose (click)="addGroups(activeGroup)" [disabled]="!activeGroup">Add To Group</button>\n\t\t<button mat-button color="secondary" matDialogClose>Cancel</button>\n\t  </p>\n\n\t  \x3c!-- <button mat-raised-button color="primary" class="button" matDialogClose aria-label="Close modal" type="button"> --\x3e\n\t  \x3c!--\t<span aria-hidden="true">&times;</span> --\x3e\n\t  \x3c!-- </button> --\x3e\n\t</ng-template>\n  </div>\n\n  <div class="bottom-overlay">\n\n\t\x3c!-- <div class="color-container"> --\x3e\n\t  \x3c!-- TODO This should be an iff relationship --\x3e\n\t  <div *ngIf="hasGroup && colors.length > 0">\n\n\t\t<div *ngIf="colors.length < 5; else dotdot" class="group-tags">\n\t\t  <div *ngFor="let color of colors"\n\t\t\t   class="center"\n\t\t\t   (mouseover)="getGroupNameFromColor(color)"\n\t\t\t   [matTooltip]="currentGroup"\n\t\t\t   matTooltipPosition="above">\n\t\t\t<svg class="box" width="25px" height="75px" (click)="deleteFromGroup(color)">\n\t\t\t  \x3c!-- <rect width="15px" height="15px" [style.fill]="color"/> --\x3e\n\t\t\t  <rect width="15px" height="15px" x="5" y="30" [style.fill]="color"/>\n\t\t\t  <rect class="inner-del" width="25px" height="15px" rx="3" x="0" y="0" style="fill: #ffffff"/>\n\t\t\t  <rect  class="inner-del" width="15px" height="5px" x="5" y="5" style="fill: #DE6363"/>\n\t\t\t</svg>\n\t\t  </div>\n\t\t</div>\n\n\t\t<ng-template #dotdot class="text">\n\t\t  <div class="image-option"\n\t\t\t   (click)="openMoreGroupsModal(moreGroupsModal)">\n\t\t\t<i class="fas fa-ellipsis-h"></i>\n\t\t  </div>\n\t\t</ng-template>\n\n\t\t\x3c!-- TODO Should close modal once zero groups --\x3e\n\t\t<ng-template #moreGroupsModal>\n\t\t  <div style="display: flex; justify-content: center; align-items: center">\n\t\t\t<div *ngFor="let color of colors"\n\t\t\t\t class="center-temp"\n\t\t\t\t style="display: flex"\n\t\t\t\t (mouseover)="getGroupNameFromColor(color)"\n\t\t\t\t [matTooltip]="currentGroup"\n\t\t\t\t matTooltipPosition="right">\n\t\t\t  <svg style="padding: 1" (click)="deleteFromGroup(color)" width="15px" height="15px">\n\t\t\t\t<rect width="15px" height="15px" [style.fill]="color"/>\n\t\t\t\t<rect class="inner-del-temp" width="8px" height="4px" x="3.3" y="5.5" style="fill: #000"/>\n\t\t\t  </svg>\n\t\t\t</div>\n\t\t  </div>\n\t\t</ng-template>\n\n\t  </div>\n\t\x3c!-- </div> --\x3e\n\n  </div>\n\n</div>\n'},c6cR:function(t,e,i){"use strict";i.r(e),e.default="\x3c!-- <p>side-bar works!</p> --\x3e\n\x3c!-- <app-preset-generator></app-preset-generator> --\x3e\n\x3c!-- <app-tagger></app-tagger> --\x3e\n<app-select-group></app-select-group>\n<app-select-image></app-select-image>\n<router-outlet></router-outlet>\n"},crnd:function(t,e){function i(t){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}))}i.keys=function(){return[]},i.resolve=i,t.exports=i,i.id="crnd"},"dTB+":function(t,e,i){"use strict";i.r(e),e.default=":host {\n  display: block;\n  font-size: 0.8em;\n  height: calc(100vh - 50px);\n}\n:host .lat-lon-label {\n  font-size: 0.8em;\n  color: #4d4d4d;\n}\n:host .active-project {\n  background-color: #1aff8c;\n}\n:host .menu button.dropdown.button {\n  padding: 0.85em 1em;\n}\n:host .switch {\n  margin: 0;\n}\n:host .button.tiny {\n  margin: 0;\n}\n:host .no-show-option {\n  display: none;\n}\n:host .show-option {\n  display: block;\n}\n:host .create-prompt {\n  max-height: 500px;\n  height: 500px;\n}\n:host .select-group {\n  max-height: 20%;\n  height: 20%;\n}\n:host .subitem-title {\n  text-align: left;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #F1F1F1;\n  display: flex;\n  justify-content: space-between;\n}\n:host .input-label-group {\n  padding: 10px;\n  display: block;\n}\n:host .input-group {\n  display: inline-block;\n}\n:host .form-name {\n  text-align: center;\n}\n:host .input-group-button {\n  display: inline-block;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #F1F1F1;\n  border-style: solid;\n  overflow-y: auto;\n  background-color: #FFFFFF;\n  height: 40vh;\n  padding: 20px;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .preset-descriptions {\n  max-height: 20%;\n  height: 20%;\n}\n:host .boxed input[type=radio] {\n  display: none;\n}\n:host .boxed label {\n  background-color: #fff;\n  transition: all 0.3s;\n}\n:host .boxed input[type=radio]:checked + label {\n  background-color: #B3E5FF;\n}\n:host .group-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .button-group {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n}\n:host .form-option-container {\n  padding: 0px;\n}\n:host .list-group {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .list-suboptions {\n  background-color: #F0F0F0;\n}\n:host .button-group div {\n  padding: 3px;\n}\n:host .name-group {\n  display: inline-block;\n  padding: 3px;\n}\n:host .form-item-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .form-type-form {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 5px;\n  margin-bottom: 15px;\n}\n:host .form-type-form input[type=radio] {\n  display: none;\n}\n:host .form-type-form label {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #ddd;\n  transition: all 0.3s;\n}\n:host .form-type-form input[type=radio]:checked + label {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #000;\n}\n:host .changed {\n  color: #F07575;\n}\n:host .unchanged {\n  color: #555555;\n}\n:host .asset-list {\n  max-height: 20%;\n  height: 20%;\n}\n:host .asset-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n}\n:host .highlight {\n  background-color: #B3E5FF;\n}"},dagV:function(t,e,i){"use strict";i.r(e),e.default='\x3c!--<div *ngIf="!field.multiline">\n  <input [attr.type]="field.type" class="form-control"  [id]="field.name" [name]="field.name" [(ngModel)]="note" (change)="updateNotes()">\n</div>\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\nbecame too large. However, how this was done isn\'t clear, and a text area just looks better, in my opinion--\x3e\n<div>\n  <textarea  [id]="field.name"\n\t\trows="9" class="form-control" [placeholder]="notes" [(ngModel)]="note" (keyup)="updateNotes()"></textarea>\n</div>\n'},dp4s:function(t,e,i){"use strict";i.r(e),e.default=":host #share-project-form {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 5em;\n}\n\n.card-container {\n  display: flex;\n  justify-content: space-between;\n  width: 99%;\n}\n\n.card-item {\n  text-align: center;\n  align-items: center;\n}\n\n.card-buttons {\n  align-items: flex-end;\n}"},eC1z:function(t,e,i){"use strict";i.r(e),e.default='<div id="map" style="min-height: calc(100vh - 67px)"></div>\n'},fIZ9:function(t,e,i){"use strict";i.r(e),e.default='<div  class="form-check form-check">\n  <label class="form-check-label">\n      <input class="form-check-input" [(ngModel)]="chosenTag" type="radio" id="inlineCheckbox2" name={{label}} value={{field.label}} (change)="updateCheckedTag()" /> \n          {{field.label}}\n      </label>\n</div>'},fWOx:function(t,e,i){"use strict";i.r(e),e.default=":host #create-project-form {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 5em;\n}"},if2z:function(t,e,i){"use strict";i.r(e),e.default=":host .img-container {\n  position: relative;\n}\n:host .img-container img {\n  -o-object-fit: cover;\n     object-fit: cover;\n  cursor: default;\n  width: 100%;\n  height: 100%;\n  transition: opacity 0.3s ease;\n  backface-visibility: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  margin: 0 auto;\n}\n:host .top-overlay {\n  display: flex;\n  flex-direction: row;\n  transition: 0.3s ease;\n  opacity: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n  text-align: center;\n}\n:host .bottom-overlay {\n  display: flex;\n  flex-direction: row;\n  transition: 0.3s ease;\n  opacity: 1;\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  text-align: center;\n}\n:host .img-container:hover img {\n  opacity: 0.9;\n}\n:host .img-container:hover .top-overlay {\n  opacity: 0.9;\n}\n:host .img-container:hover .top-overlay:hover {\n  opacity: 1;\n}\n:host .image-option {\n  opacity: 0.9;\n  background-color: white;\n  display: flex;\n  color: black;\n  width: 40px;\n  height: 30px;\n  border-radius: 5px;\n  font-size: 16px;\n  margin: 3px;\n  justify-content: center;\n  align-items: center;\n}\n:host .image-option:hover {\n  opacity: 1;\n}\n:host .image-option .fas {\n  top: 5px;\n}\n:host .img-selected {\n  border: solid #4FB876;\n  border-width: 5px;\n}\n:host .img-unselected {\n  border: solid #fff;\n  border-width: 5px;\n}\n:host .group-tags {\n  opacity: 0.9;\n  background-color: white;\n  display: flex;\n  flex-direction: row;\n  width: auto;\n  height: 30px;\n  border-radius: 5px;\n  padding: 5px;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n:host .center {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  transition: 0.3s ease;\n  align-items: center;\n}\n:host .center .inner-del {\n  opacity: 0;\n  transition: 0.3s ease;\n  cursor: pointer;\n}\n:host .center:hover .inner-del {\n  opacity: 1;\n}\n:host .box {\n  padding: 1px;\n}\n.center-temp {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.center-temp .inner-del-temp {\n  opacity: 0;\n  transition: 0.3s ease;\n  cursor: pointer;\n}\n.center-temp:hover .inner-del-temp {\n  opacity: 0.5;\n}\n.zoom-content {\n  display: flex;\n  flex-direction: column;\n  max-height: 700px;\n}\n.zoom-content .img-container {\n  overflow-y: scroll;\n  width: 100%;\n  height: 100%;\n  background-color: #e7e7e7;\n}\n.zoom-content .img-details {\n  display: flex;\n  flex-direction: row;\n  margin-top: 24px;\n  background-color: #e7e7e7;\n  align-items: center;\n  text-align: center;\n}\n.zoom-content .title {\n  background-color: #ccc;\n  padding: 5px;\n}\n.zoom-content .detail-container {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  padding: 5px;\n}\n.zoom-content .detail-contents {\n  display: flex;\n  flex-direction: row;\n  padding: 5px;\n  background-color: #fff;\n}\n.zoom-content .detail-item {\n  padding: 5px;\n}"},ld75:function(t,e,i){"use strict";i.r(e),e.default=":host {\n  text-align: left;\n}\n:host .mat-form-field {\n  width: 100%;\n  text-align: left;\n}\n:host .input-group {\n  padding: 5px;\n}\n:host label {\n  padding: 5px;\n}\n:host input {\n  padding: 5px;\n  vertical-align: middle;\n}\n:host .radio-group {\n  display: flex;\n  flex-direction: column;\n}\n:host .form-controls {\n  padding: 20px;\n}"},"m/u+":function(t,e,i){"use strict";i.r(e),e.default='<div  class="form-check form-check">\n  <label class="form-check-label">\n      <input class="form-check-input" [(ngModel)]="chosenTag" type="radio" id="inlineCheckbox3" name={{label}} value={{field.label}} (change)="updateCheckedTag()" /> \n          {{field.label}}\n      <input class="form-check-input" [(ngModel)]="chosenColor" type="color" id="inlineCheckbox3"/>\n  </label>\n</div>'},moaK:function(t,e,i){"use strict";i.r(e),e.default='<h4> Current Gallery </h4>\n<form [formGroup]="projCreateForm" (ngSubmit)="update()" id="current-project-form">\n  <mat-form-field>\n\t<mat-label>Name:</mat-label>\n\t<input matInput type="text" formControlName="name" appearance="filled"  required="true">\n\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <textarea matInput formControlName="description" required="true"></textarea>\n  </mat-form-field>\n\n  <div class="button-group small">\n    <button mat-raised-button color="basic" class="button small warning" type="button" (click)="close()">Close</button>\n    <button *ngIf="activeProject.deletable" mat-raised-button color="warn" class="button small warning" type="delete" (click)="delete()">Delete</button>\n    <button mat-raised-button color="primary" class="button small align-right" type="submit" [disabled]="!projCreateForm.valid">Update</button>\n  </div>\n</form>\n'},nOsy:function(t,e,i){"use strict";i.r(e),e.default='<h4> Create a new Gallery </h4>\n<form [formGroup]="projCreateForm" (ngSubmit)="submit()" id="create-project-form">\n  <mat-form-field>\n\t<mat-label>Name:</mat-label>\n\t<input matInput type="text" formControlName="name" required="true">\n  </mat-form-field>\n\n  <mat-form-field>\n\t<mat-label>Description</mat-label>\n\t<textarea matInput formControlName="description" required="true"></textarea>\n  </mat-form-field>\n\n  <div class="button-group small">\n\t<button mat-raised-button color="warn" class="button small warning" type="button" (click)="close()">Close</button>\n\t<button mat-raised-button color="primary" class="button small align-right" type="submit" [disabled]="!projCreateForm.valid">Submit</button>\n  </div>\n</form>\n'},obZR:function(t,e,i){"use strict";i.r(e),e.default=""},qk7I:function(t,e,i){"use strict";i.r(e),e.default=":host {\n  font-size: 0.8em;\n  display: block;\n}\n:host .subitem-title {\n  text-align: left;\n  display: flex;\n  justify-content: space-between;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #F1F1F1;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #F1F1F1;\n  border-style: solid;\n  padding: 10px;\n  overflow-y: auto;\n  background-color: #FFFFFF;\n  height: 40vh;\n}\n:host .main-form-container {\n  padding: 10px;\n}\n:host .subitem-scroll {\n  padding: 10px;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .highlight {\n  background-color: #B3E5FF;\n}\n:host .boxed input[type=radio] {\n  display: none;\n}\n:host .boxed label {\n  background-color: #fff;\n  transition: all 0.3s;\n}\n:host .boxed input[type=radio]:checked + label {\n  background-color: #B3E5FF;\n}\n:host .group-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .select-group {\n  max-height: 20%;\n  height: 20%;\n}\n:host .tag-forms {\n  height: 500px;\n}\n:host .asset-list {\n  max-height: 20%;\n  height: 20%;\n}\n:host .asset-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n}\n:host .preset-descriptions {\n  max-height: 20%;\n  height: 20%;\n}\n:host .form-item-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .button-group {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n}\n:host .button-group div {\n  padding: 3px;\n}\n:host .name-group {\n  padding: 3px;\n  font-size: 17px;\n  font-weight: bold;\n}\n:host .list-group {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .list-suboptions {\n  background-color: #F0F0F0;\n}"},s9wi:function(t,e,i){"use strict";i.r(e),e.default='<div class="select-group">\n  <div class="subitem-title" (click)="expandPanel()">Groups</div>\n  <div *ngIf="showSubitem" class="subitem group-subitem">\n\t\x3c!-- TODO redundant functionality radio is just for style --\x3e\n\t<form class="boxed">\n\t  <div *ngFor="let group of groupList" (click)="selectGroupForm(group.name)" class="box form">\n\t\t<input type="radio" [id]="group.name" [value]="group.name" name="skills" [checked]="isChecked(group.name)">\n\t\t<label class="group-container" style="cursor: pointer" [for]="group.name">\n\t\t  <div class="name-group">\n\t\t\t{{group.name}}\n\t\t\t<svg class="box" width="10px" height="10px">\n\t\t\t  <rect width="10px" height="10px" style="fill: #ffffff"/>\n\t\t\t  <rect width="8px" height="8px" x="1px" y="1px" [style.fill]="group.color"/>\n\t\t\t</svg>\n\t\t  </div>\n\t\t  <div class="button-group">\n\t\t\t<div (click)="deleteGroup(group.name)">\n\t\t\t  <i class="fas fa-minus"\n\t\t\t\t matTooltip="Delete"\n\t\t\t\t matTooltipPosition="below">\n\t\t\t  </i>\n\t\t\t</div>\n\t\t\t<div (click)="openRenameModal(renameModal, group.name)">\n\t\t\t  <i class="fas fa-edit"\n\t\t\t\t matTooltip="Rename"\n\t\t\t\t matTooltipPosition="below">\n\t\t\t  </i>\n\t\t\t</div>\n\t\t\t\t<div (click)="openIconSelection(iconModal, group.name)">\n\t\t\t\t\t<span class="fa {{group.icon}}"\n\t\t\t\t\tmatTooltip="icons"\n\t\t\t\t\tmatTooltipPosition="below"></span>\n\t\t\t\t</div>\n\t\t  \t</div>\n\t\t</label>\n\t  </div>\n\t</form>\n\n\t<ng-template #renameModal>\n\t  <input matInput #groupRename\n\t\t\t placeholder="Rename Group"\n\t\t\t (keyup.enter)="renameGroup(groupRename.value)">\n\t  <br/>\n\t  <br/>\n\t  <div class="button-group">\n\t\t<button matDialogClose color="primary" mat-raised-button (click)="renameGroup(groupRename.value)">Rename</button>\n\t\t\x3c!-- <button matDialogClose color="primary" mat-raised-button (click)="saveGroup(groupRename.value, currentIcon)">Rename</button> --\x3e\n\t\t<button matDialogClose mat-button>Cancel</button>\n\t  </div>\n\t</ng-template>\n\n\t<ng-template #iconModal>\n\t\t<div class="iconDropdown">\n\t\t<select class="fa" [(ngModel)]="choice">\n\t\t\t<option class="fa" *ngFor="let icons of iconList" value={{icons.id}} [innerHTML]="icons.unicode"></option>\n\t\t</select>\n\t\t<br/>\n\t  \t<br/>\n\t\t<div class="button-group">\n\t\t\t<button matDialogClose color="primary" mat-raised-button (click)="saveIcon(choice)">Save</button>\n\t\x3c!-- <button matDialogClose color="primary" mat-raised-button (click)="saveGroup(selectedGroup, choice)">Save</button> --\x3e\n\t\t\t<button matDialogClose mat-button>Cancel</button>\n\t\t  </div>\n\t</div>\n\t</ng-template>\n\n  </div> \x3c!-- subitem --\x3e\n</div> \x3c!-- select-group --\x3e\n'},tw4j:function(t,e,i){"use strict";i.r(e),e.default=":host #current-project-form {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 5em;\n}"},u61n:function(t,e,i){"use strict";i.r(e),e.default=""},u6lZ:function(t,e,i){"use strict";i.r(e),e.default=":host {\n  min-height: 20em;\n}\n:host .fileslisting {\n  height: 20em;\n  overflow-y: scroll;\n  padding: 0px 20px;\n}\n:host .file-row {\n  display: flex;\n  background: #f9f9f9;\n  border: 1px solid transparent;\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n}\n:host .clickable {\n  flex: 1;\n  max-width: 20em;\n}\n:host .size {\n  align-items: flex-end;\n}\n:host .file-row:hover {\n  border: 1px solid;\n}\n:host .file-row.selected {\n  background: #d3d3d3;\n}\n.error {\n  background-color: red;\n  color: white;\n}\n.lineBreak {\n  max-width: 350px;\n  word-break: break-word;\n}"},uV4w:function(t,e,i){"use strict";i.r(e),e.default=":host .active-project {\n  background-color: #1aff8c;\n}\n:host .menu button.dropdown.button {\n  padding: 0.85em 1em;\n}\n:host .button.tiny {\n  margin: 0;\n}\n:host .current-project {\n  padding: 30px;\n  font-size: 14px;\n}\n:host .goods {\n  height: 27px;\n  margin: 0px;\n  padding: 0px;\n}\n:host .toggler {\n  margin-left: 10px;\n}\n:host .picker {\n  display: inline-block;\n}\n:host .group-bar {\n  display: flex;\n  flex-direction: row;\n}\n:host .path-buttons {\n  text-align: center;\n}\n:host .project-menu {\n  margin-left: 10px;\n}\n:host .top-bar {\n  position: fixed;\n  margin-top: -50px;\n  height: 50px;\n  z-index: 999;\n}\n:host .top-bar-right .top-bar-left {\n  -webkit-box-flex: 0;\n  flex-wrap: nowrap;\n  flex: 0 1 auto;\n  max-width: 100%;\n}\n:host .my-button {\n  border-radius: 5px;\n  padding: 5px;\n}\n:host .button-spacing {\n  margin-right: 15px;\n}\n@media print, screen and (min-width: 40em) {\n  :host .top-bar {\n    flex-wrap: nowrap;\n    flex: 0 1 auto;\n  }\n}\n:host .example-spacer {\n  flex: 1 1 auto;\n}"},vlUF:function(t,e,i){"use strict";i.r(e),e.default='<mat-toolbar class="top-bar" color="primary">\n  <img src="assets/logo.svg" width="40PX">\n  <span style="color: white">Taggit</span>\n\n  <button mat-icon-button [matMenuTriggerFor]="project" color="foreground" class="project-menu">\n\t<mat-icon>menu</mat-icon>\n  </button>\n\n\n  <mat-menu #project="matMenu">\n\t<span mat-menu-item *ngIf="selectedProject" (click)="openProjectModal(selectedProject)">\n\t  Current Gallery : {{selectedProject.name}}\n\t</span>\n\t<button mat-menu-item (click)="openCreateProjectModal()">Create Gallery</button>\n\t<button mat-menu-item [matMenuTriggerFor]="projectList">Select Gallery</button>\n\t\x3c!-- <button mat-menu-item (click)="openShareProjectModal()">Share Gallery</button> --\x3e\n\t<button mat-menu-item (click)="openFilePicker(test)">File Browser</button>\n\t<button mat-menu-item [matMenuTriggerFor]="saveOptions">Save as</button>\n  </mat-menu>\n\n  <mat-menu #projectList="matMenu">\n\t<button mat-menu-item class="clickable" *ngFor="let p of projects" (click)="selectProject(p)" [ngClass]="{\'active-project\': p === selectedProject}">\n\t  {{ p.name }}\n\t</button>\n  </mat-menu>\n\n  <mat-menu #saveOptions="matMenu">\n\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\n\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\n\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\n  </mat-menu>\n\n  <span class="example-spacer"></span>\n\n  <div *ngIf="showSidebar; else doThat" class="path-buttons">\n\t<div class="slides" style="line-height: 1; font-size: 12px">\n\t  {{imageName}}\n\t  <div class="lr-buttons" style="margin-top: 5px">\n\t\t<i (click)="otherPath(false)" style="margin-right: 10px; cursor: pointer" class="fas fa-angle-left"></i>\n\t\t<i (click)="otherPath(true)" style="margin-left: 10px; cursor: pointer" class="fas fa-angle-right"></i>\n\t  </div>\n\t</div>\n  </div>\n\n  <ng-template #doThat>\n\t\x3c!-- <input placeholder="Search images" --\x3e\n\t\x3c!--\t   name="" --\x3e\n\t\x3c!--\t   type="text" --\x3e\n\t\x3c!--\t   value="" --\x3e\n\t\x3c!--\t   class="goods"/> --\x3e\n\n\n\t\x3c!-- <mat-form-field appearance="fill"> --\x3e\n\t\x3c!--   <input matInput placeholder="Search"> --\x3e\n\t\x3c!-- </mat-form-field> --\x3e\n\n\t\x3c!-- <mat-form-field class="example-full-width"> --\x3e\n\t\x3c!--   <input matInput type="text" --\x3e\n\t\x3c!--\t\t [(ngModel)]="value" --\x3e\n\t\x3c!--\t\t placeholder="Search"> --\x3e\n\t\x3c!-- </mat-form-field> --\x3e\n  </ng-template>\n\n  <span class="example-spacer"></span>\n\n  \x3c!-- <div *ngIf="showGroup" class="group-bar grid-x align-right"> --\x3e\n  <div class="group-bar grid-x align-right">\n\t\n\t<button mat-raised-button class="button-spacing" [disabled]="!itemsSelected" (click)="clearAll()">Clear Selected</button>\n\n\t\x3c!-- A link that looks like a button, links to Hazmapper--\x3e\n\t<a class="button-spacing" mat-raised-button href={{hazMapperLink}} title="Open your gallery in HazMapper" target="_blank">\n\t\t<img src="assets/hazmapper-header-logo.png" width="100PX">\n\t</a>\n\n\t<button mat-raised-button\n\t\t\t(click)="openAddGroupModal(addGroupModal)" *ngIf="itemsSelected && !showSidebar">Add Group</button>\n\n\t<ng-template #addGroupModal>\n\t  <mat-form-field>\n\t\t<mat-label>Group Name</mat-label>\n\t\t<input matInput placeholder="Group Name" (keyup.enter)="addToGroupService(groupInput.value)" #groupInput>\n\t  </mat-form-field>\n\t  <br/>\n\t  <br/>\n\t  <button mat-raised-button matDialogClose color="primary" (click)="addToGroupService(groupInput.value)">Add Group</button>\n\t  <button mat-button matDialogClose color="secondary">Cancel</button>\n\t</ng-template>\n  </div>\n\n  \x3c!-- <button *ngIf="groupsExist && showSidebar && activePane == \'preset\'" --\x3e\n  \x3c!--\t\t  mat-button --\x3e\n  \x3c!--\t\t  color="secondary" --\x3e\n  \x3c!--\t\t  (click)="goToRoute()">Tagger</button> --\x3e\n\n  \x3c!-- <button *ngIf="groupsExist && showSidebar && activePane == \'tagger\'" --\x3e\n  \x3c!--\t\t  mat-button --\x3e\n  \x3c!--\t\t  color="secondary" --\x3e\n  \x3c!--\t\t  (click)="goToRoute()">Preset</button> --\x3e\n\n\n  <button *ngIf="groupsExist && !showSidebar"\n\t\t  mat-raised-button\n\t\t  style="margin-left: 15px"\n\t\t  (click)="openSidebar()">Taggit!</button>\n\n  <button *ngIf="groupsExist && showSidebar"\n\t\t  mat-raised-button\n\t\t  style="margin-left: 15px"\n\t\t  (click)="openSidebar()">Gallery</button>\n\n\n</mat-toolbar>\n'},yXUO:function(t,e,i){"use strict";i.r(e),e.default='<div  class="form-check form-check">\n    <label class="form-check-label">\n        <input class="form-check-input" type="checkbox" [checked]="isChecked" id="inlineCheckbox1" value={{field.label}} (change)="selected($event, field)" /> \n            {{field.label}}\n        </label>\n</div>'},ynWL:function(t,e,i){"use strict";i.r(e),e.default=""},zUnb:function(t,e,i){"use strict";i.r(e);i("yLV6");var s=i("8Y7J"),o=i("wAiw"),n=i("mrSG"),r=i("cUpR"),a=i("omvX"),l=i("IheW"),c=i("SVse"),p=i("MNke"),u=i("7g+E"),h=i("neit"),d=i("gavF"),m=i("BzsH"),g=i("Fwaw"),f=i("s6ns"),b=i("Mz6y"),v=i("ZwOa"),x=i("Gi4r"),y=i("r0V8"),S=i("elxJ"),w=i("JjoW"),F=i("jGvI"),j=i("EApP"),O=i("vO5K"),k=i("nqmK"),G=i("iInd");let I=class{constructor(){}ngOnInit(){}};I=n.a([Object(s.n)({selector:"app-notfound",template:n.b(i("Af46")).default,styles:[n.b(i("6CRC")).default]}),n.c("design:paramtypes",[])],I);class P{}class L{constructor(){this.bbox=[],this.assetType=new Set}updateAssetTypes(t){this.assetType.has(t)?this.assetType.delete(t):this.assetType.add(t)}updateBBox(t){this.bbox=t}toJson(){return{assetType:[...this.assetType],bbox:this.bbox}}}class D{}class T{}class C{constructor(t,e){this.token=t,this.expires=new Date(e)}static fromExpiresIn(t,e){const i=new Date((new Date).getTime()+1e3*e);return new C(t,i)}isExpired(){return(new Date).getTime()>this.expires.getTime()}}class E{constructor(t){this.geometry=t.geometry,this.properties=t.properties,this.id=t.id,this.type=t.type,this.assets=t.assets,this.styles=t.styles,this.project_id=t.project_id}featureType(){return this.assets&&1===this.assets.length?this.assets[0].asset_type:this.assets&&this.assets.length>1?"collection":this.assets.length?void 0:this.geometry.type}}var _;!function(t){t.Production="production",t.Staging="staging",t.Local="local"}(_||(_={}));const N={production:!0,apiUrl:"https://agave.designsafe-ci.org/geo/v2/",clientId:"jHXnvsmQQcmP43qlrG7ATaxFXHQa",baseHref:"/",backend:_.Production};var A=i("jtHE");class R{constructor(t,e){this.username=t,this.email=e}}let M=class{constructor(t,e){this.http=t,this.router=e,this._currentUser=new A.a(1),this.currentUser=this._currentUser.asObservable(),this.LS_TOKEN_KEY="hazmapperToken",this.LS_USER_KEY="hazmapperUser"}login(){const t=localStorage.getItem(this.LS_TOKEN_KEY);if(t){const e=JSON.parse(t);this.userToken=new C(e.token,new Date(e.expires)),this.userToken&&!this.userToken.isExpired()||(this.logout(),this.redirectToauthenticaor()),this.getUserInfo()}else this.redirectToauthenticaor()}redirectToauthenticaor(){const t=`https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${N.clientId}&response_type=token&redirect_uri=${location.origin+N.baseHref+"callback"}&state=${Math.random().toString(36)}`;window.location.href=t}isLoggedIn(){return this.userToken&&!this.userToken.isExpired()}logout(){this.userToken=null,localStorage.removeItem(this.LS_TOKEN_KEY),localStorage.removeItem(this.LS_USER_KEY)}setToken(t,e){this.userToken=C.fromExpiresIn(t,e),localStorage.setItem(this.LS_TOKEN_KEY,JSON.stringify(this.userToken)),this.router.navigate(["/"])}getUserInfo(){const t=localStorage.getItem(this.LS_USER_KEY),e=JSON.parse(t);null!==e?this._currentUser.next(new R(e.username,e.email)):this.http.get("https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid").subscribe(t=>{const e=new R(t.name,t.email);localStorage.setItem(this.LS_USER_KEY,JSON.stringify(e)),this._currentUser.next(e)})}};M.ctorParameters=()=>[{type:l.b},{type:G.b}],M=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[l.b,G.b])],M);var U=i("2Vo4"),$=i("IzEk"),z=i("r8II"),V=i("l5mm");let B=class{constructor(t,e,i){if(this.toastr=t,this.http=e,this.authService=i,this.TIMEOUT=5e3,this._notifications=new A.a(1),this.notifications=this._notifications.asObservable(),this.authService.isLoggedIn()){Object(V.a)(this.TIMEOUT).subscribe(t=>{this.getRecent()})}}getRecent(){let t=N.apiUrl+"notifications/",e=new Date,i=new Date(e.getTime()-this.TIMEOUT);this.http.get(t+"?startDate="+i.toISOString()).subscribe(t=>{this._notifications.next(t),t.forEach(t=>{switch(t.status){case"success":this.showSuccessToast(t.message);break;case"error":this.showErrorToast(t.message)}})})}showSuccessToast(t){this.toastr.success(t)}showImportErrorToast(t){this.toastr.error(t+", trying alternate method")}showErrorToast(t){this.toastr.error(t)}};B.ctorParameters=()=>[{type:j.b},{type:l.b},{type:M}],B=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[j.b,l.b,M])],B);let J=class{constructor(){this.scrollRestored=!0,this.scrollPosition=0}setScrollRestored(t){this.scrollRestored=t}setScrollPosition(){this.scrollPosition=document.documentElement.scrollTop}scroll(){document.documentElement.scroll({top:this.scrollPosition}),document.documentElement.scrollTop==this.scrollPosition&&(this.scrollRestored=!1)}};J=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[])],J);let H=class{constructor(t,e,i){this.http=t,this.notificationsService=e,this.scrollService=i,this._pointClouds=new U.a(null),this.pointClouds=this._pointClouds.asObservable(),this._loaded=new U.a(null),this.loaded=this._loaded.asObservable(),this._features=new U.a({type:"FeatureCollection",features:[]}),this.features$=this._features.asObservable(),this._activeFeature=new U.a(null),this._mapMouseLocation=new U.a(null),this._basemap=new U.a("roads"),this._overlays=new U.a(null),this._activeOverlay=new U.a(null)}getFeatures(t,e=new L,i=!1){const s=z.stringify(e.toJson());this.http.get(N.apiUrl+`/projects/${t}/features/?`+s).subscribe(t=>{t.features=t.features.map(t=>new E(t)),this._features.next(t),this._loaded.next(!0),i&&this.scrollService.setScrollRestored(!0)})}deleteFeature(t){this.http.delete(N.apiUrl+`projects/${t.project_id}/features/${t.id}/`).subscribe(e=>{this.getFeatures(t.project_id,new L,!0)})}getPointClouds(t){this.http.get(N.apiUrl+`/projects/${t}/point-cloud/`).subscribe(t=>{this._pointClouds.next(t)})}addFeature(t){this.features$.pipe(Object($.a)(1)).subscribe(e=>{e.features.push(t),this._features.next(e)})}addPointCloud(t,e,i){const s={description:e,conversion_parameters:i};this.http.post(N.apiUrl+`/projects/${t}/point-cloud/`,s).subscribe(e=>{this.getPointClouds(t)},t=>{})}updateFeatureProperty(t,e,i){this.http.post(N.apiUrl+`projects/${t}/features/${e}/properties/`,i).subscribe(t=>{},t=>{})}updateFeatureStyle(t,e,i){this.http.post(N.apiUrl+`/projects/${t}/features/${e}/styles/`,i).subscribe(t=>{},t=>{})}deletePointCloud(t){console.log(t),this.http.delete(N.apiUrl+`/projects/${t.project_id}/point-cloud/${t.id}/`).subscribe(e=>{this.getPointClouds(t.project_id)})}addFileToPointCloud(t,e){const i=new FormData;i.append("file",e),console.log(t),this.http.post(N.apiUrl+`/projects/${t.project_id}/point-cloud/${t.id}/`,i).subscribe(t=>{console.log(t)})}importFileFromTapis(t,e){const i=e.map(t=>({system:t.system,path:t.path})),s={files:i};this.fileList=i,this.http.post(N.apiUrl+`projects/${t}/features/files/import/`,s).subscribe(t=>{this.notificationsService.showSuccessToast("Import started!")},t=>{this.notificationsService.showImportErrorToast("Import failed! Try again?")})}importImage(t,e,i){let s,o=e.id;this.fileList.forEach(t=>{t.path==i&&(s=t)});let n={system_id:s.system,path:s.path};this.http.post(N.apiUrl+`projects/${t}/features/${o}/assets/`,n).subscribe(t=>{this.notificationsService.showSuccessToast("Import started!")})}uploadNewFeature(t,e,i){let s,o=e;this.http.post(N.apiUrl+`projects/${t}/features/`,o).subscribe(e=>{s=new E(e[0]),this.importImage(t,s,i)})}downloadGeoJSON(t,e=new L){const i=z.stringify(e.toJson()),s=document.createElement("a");this.http.get(N.apiUrl+`/projects/${t}/features/?`+i).subscribe(t=>{const e=new Blob([JSON.stringify(t)],{type:"application/json"});s.href=URL.createObjectURL(e),s.setAttribute("download","hazmapper.json"),document.body.appendChild(s),s.click(),document.body.removeChild(s)})}uploadFile(t,e){const i=new FormData;i.append("file",e,e.name),this.http.post(N.apiUrl+`/projects/${t}/features/files/`,i).subscribe(t=>{t.forEach(t=>{this.addFeature(new E(t))})},t=>{})}uploadAssetFile(t,e,i){const s=new FormData;s.append("file",i,i.name),this.http.post(N.apiUrl+`/api/projects/${t}/features/${e}/assets/`,s).subscribe(i=>{let s=this._activeFeature.getValue();s&&s.id===e&&(this.activeFeature=new E(i),this.getFeatures(t))},t=>{})}getOverlays(t){this.http.get(N.apiUrl+`/projects/${t}/overlays/`).subscribe(t=>{this._overlays.next(t)})}addOverlay(t,e,i,s,o,n,r){const a=new FormData;a.append("file",e),a.append("label",i),a.append("minLat",s.toFixed(6)),a.append("maxLat",o.toFixed(6)),a.append("minLon",n.toFixed(6)),a.append("maxLon",r.toFixed(6)),this.http.post(N.apiUrl+`/projects/${t}/overlays/`,a).subscribe(e=>{this.getOverlays(t)})}get overlays(){return this._overlays.asObservable()}get features(){return this._features.asObservable()}get activeFeature(){return this._activeFeature.asObservable()}set activeFeature(t){t?t===this._activeFeature.getValue()?this._activeFeature.next(null):this._activeFeature.next(t):this._activeFeature.next(null)}get activeOverlay(){return this._activeOverlay.asObservable()}set activeOverlay(t){this._activeOverlay.next(t)}get mapMouseLocation(){return this._mapMouseLocation.asObservable()}set mapMouseLocation(t){this._mapMouseLocation.next(t)}set basemap(t){this._basemap.next(t)}get basemap(){return this._basemap.asObservable()}};H.ctorParameters=()=>[{type:l.b},{type:B},{type:J}],H=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[l.b,B,J])],H);let W=class{constructor(t,e,i){this.geoDataService=t,this.authService=e,this.bsModalService=i}ngOnInit(){}};W.ctorParameters=()=>[{type:H},{type:M},{type:h.c}],W=n.a([Object(s.n)({selector:"app-main",template:n.b(i("AZwa")).default,styles:[n.b(i("8lyn")).default]}),n.c("design:paramtypes",[H,M,h.c])],W);let K=class{constructor(t,e){this.route=t,this.auth=e}ngOnInit(){const t=this.route.snapshot.fragment,e=new URLSearchParams(t),i=e.get("access_token"),s=+e.get("expires_in");this.auth.setToken(i,s)}};K.ctorParameters=()=>[{type:G.a},{type:M}],K=n.a([Object(s.n)({selector:"app-callback",template:n.b(i("X9m5")).default,styles:[n.b(i("u61n")).default]}),n.c("design:paramtypes",[G.a,M])],K);var Z=i("SxV6"),q=i("lJxs");let X=class{constructor(){this._groups=new U.a([]),this.groups=this._groups.asObservable(),this._forms=new U.a([]),this.forms=this._forms.asObservable(),this._tempGroup=new U.a([]),this.tempGroup=this._tempGroup.asObservable(),this._showGroup=new U.a(null),this.showGroup=this._showGroup.asObservable(),this._showSidebar=new U.a(null),this.showSidebar=this._showSidebar.asObservable(),this._activeFeature=new U.a(null),this.activeFeature=this._activeFeature.asObservable(),this._activeGroup=new U.a(null),this.activeGroup=this._activeGroup.asObservable(),this._activeFeatureNum=new U.a(null),this.activeFeatureNum=this._activeFeatureNum.asObservable(),this._unselectAll=new U.a(null),this.unselectAll=this._unselectAll.asObservable(),this._featureImagesExist=new U.a(null),this.featureImagesExist=this._featureImagesExist.asObservable(),this._activeFeatureId=new U.a(null),this.activeFeatureId=this._activeFeatureId.asObservable(),this._activePane=new U.a(null),this.activePane=this._activePane.asObservable(),this._tagFeatureGroup=new U.a(null),this.tagFeatureGroup=this._tagFeatureGroup.asObservable(),this._itemsSelected=new U.a(null),this.itemsSelected=this._itemsSelected.asObservable()}addGroup(t){this._groups.next(t)}setGroupProperties(t){let e={};for(let i of t)if(i.properties.group)for(let t of i.properties.group){e[t.name]||(e[t.name]={name:t.name,features:[],color:t.color,icon:t.icon}),-1==e[t.name].features.findIndex(t=>t==i)&&e[t.name].features.push(i)}this._groups.next(Object.values(e))}addForm(t){this._forms.next(t)}addTempGroup(t){this._tempGroup.next(t)}setShowGroup(t){this._showGroup.next(t)}setFeatureImagesExist(t){this._featureImagesExist.next(t)}setShowSidebar(t){this._showSidebar.next(t)}setUnselectAll(t){this._unselectAll.next(t),this._itemsSelected.next(!t)}setItemsSelected(t){this._itemsSelected.next(t)}setActiveProject(t){this._activeFeature.next(t)}setActiveGroup(t){this._activeGroup.next(t)}setActivePane(t){this._activePane.next(t)}setActiveFeatureNum(t){this._activeFeatureNum.next(t)}setActiveFeatureId(t){this._activeFeatureId.next(t)}setTagFeatureGroup(t,e,i){let s=t+e,o=this._tagFeatureGroup.value;null==o?o={}:o[s]=i,this._tagFeatureGroup.next(o)}};X=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[])],X);var Y=i("s7LF"),Q=i("vkgz");let tt=class{constructor(t,e,i){this.http=t,this.authService=e,this.notificationsService=i,this._projects=new U.a([]),this.projects=this._projects.asObservable(),this._activeProject=new A.a(1),this.activeProject=this._activeProject.asObservable(),this._projectUsers=new A.a(1),this.projectUsers$=this._projectUsers.asObservable(),this._deletingProjects=new U.a([]),this.deletingProjects=this._deletingProjects.asObservable()}testGeoApi(){this.http.post("http://localhost:8888/projects/",{name:"Awesome Project",description:"Cool project"}).subscribe(t=>{this._projects.next([...this._projects.value,t]),this._activeProject.next(t)});this.http.get("http://localhost:8888/projects/").subscribe(t=>{this._projects.next(t)})}updateProjectsList(t=[]){const e=0!==t.length?t:this._projects.value;0!==this._deletingProjects.value.length?this._projects.next(e.map(t=>{const e=this._deletingProjects.value.find(e=>e.id===t.id);return e||t})):this._projects.next(e)}getProjects(){this.http.get(N.apiUrl+"/projects/").subscribe(t=>{console.log(t),this.updateProjectsList(t)},t=>{this.notificationsService.showErrorToast("Error importing files Design Safe, GeoAPI might be down")})}create(t){const e=this.http.post(N.apiUrl+"/projects/",t);return e.subscribe(t=>{this._projects.next([...this._projects.value,t]),this.setActiveProject(t),this.setActiveProject(t)}),e}setActiveProject(t){window.localStorage.setItem("lastProj",JSON.stringify(t));try{this._activeProject.next(t)}catch(e){return e}}update(t){this.http.put(N.apiUrl+`/projects/${t.project.id}/`,t).subscribe(t=>{this._activeProject.next(t)})}delete(t){console.log("We are in the function..."),this._deletingProjects.next([...this._deletingProjects.value,Object.assign({},t,{deleting:!0})]),this.updateProjectsList(),this.http.delete(N.apiUrl+`projects/${t.id}/`).subscribe(e=>{window.localStorage.setItem("lastProj",JSON.stringify("none")),this._deletingProjects.next(this._deletingProjects.value.filter(e=>e.id!==t.id)),this.updateProjectsList(),this.getProjects(),window.localStorage.setItem("lastProj",JSON.stringify("none"))},e=>{window.localStorage.setItem("lastProj",JSON.stringify("none")),this._deletingProjects.next(this._deletingProjects.value.map(e=>e.id===t.id?Object.assign({},e,{deleting:!1,deletingFailed:!0}):e)),this.updateProjectsList(),this.getProjects(),this.notificationsService.showErrorToast("Could not delete project!"),console.error(e)})}getProjectUsers(t){return this.http.get(N.apiUrl+`/projects/${t.id}/users/`).pipe(Object(Q.a)(t=>{this._projectUsers.next(t)}))}addUserToProject(t,e){const i={username:e};this.http.post(N.apiUrl+`/projects/${t.id}/users/`,i).subscribe(e=>{this.getProjectUsers(t).subscribe()})}deleteUserFromProject(t,e){this.http.delete(N.apiUrl+`/projects/${t.id}/users/${e}/`).subscribe(e=>{this.getProjectUsers(t).subscribe()},t=>{console.log(t)})}};tt.ctorParameters=()=>[{type:l.b},{type:M},{type:B}],tt=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[l.b,M,B])],tt);let et=class{constructor(t,e,i){this.groupsService=t,this.projectsService=e,this.geoDataService=i,this._forms=new U.a([]),this.forms=this._forms.asObservable(),this._activeFormList=new U.a([]),this.activeFormList=this._activeFormList.asObservable(),this._formGroup=new U.a(null),this.formGroup=this._formGroup.asObservable(),this.featureList=[],this.userTag={type:"text",groupName:"car",label:"Title",options:[],feature:"",extra:[]},this.tagData=[],this.checkedOptions=[],this.chosenTag=[{option:"",id:0},"",""],this.notebook=[],this.tempData=[],this.newTag=[],this.optData=[],this.newOpt=[],this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.groupsService.groups.subscribe(t=>{this.groupList=t}),this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t}),this.groupsService.activeFeatureId.subscribe(t=>{this.selectedFeatureID=t}),this.groupsService.activeFeature.subscribe(t=>{this.selectedFeature=t}),this.geoDataService.features.subscribe(t=>{this.features=t,null!=this.features&&(this.featureList=this.features.features)})}addForm(t,e){this.forms.pipe(Object(Z.a)(),Object(q.a)(i=>i.map(i=>(i.groupName==t&&i.formList.push(e),i)))).subscribe(t=>{this._forms.next(t)}),this.changeGroupForm(t)}updateFormItem(){let t={};this._activeFormList.value&&(this._activeFormList.value.forEach(e=>t[e.label]=e.required?new Y.b(e.value||"",Y.k.required):new Y.b(e.value||"")),this._formGroup.next(new Y.c(t)))}changeGroupForm(t){this.forms.pipe(Object(Z.a)(),Object(q.a)(e=>e.map(e=>{if(e.groupName==t)return e.formList}))).subscribe(t=>{this._activeFormList.next(t.find(t=>null!=t))}),this.updateFormItem()}checkDefault(t){if("default"===t)try{t=this.selectedFeature.styles.color}catch(e){t="#00C8FF"}return t}saveStyles(t,e){let i,s,o;t=this.checkDefault(t),this.groupList.forEach(e=>{if(e.name===this.activeGroup){i=e.icon;let n=[{name:e.name,color:e.color,icon:e.icon}];s={group:n,style:{faIcon:i,color:t}},o={faIcon:i,color:t}}}),this.geoDataService.updateFeatureProperty(this.selectedProject.id,e,s),this.geoDataService.updateFeatureStyle(this.selectedProject.id,e,o)}addGroup(t){let e=new P;e.formList=[],e.groupName=t,this.forms.pipe(Object(Z.a)()).subscribe(t=>{t.push(e),this._forms.next(t)})}deleteForm(t,e){this.forms.pipe(Object(Z.a)(),Object(q.a)(i=>i.map(i=>(i.groupName==t&&(i.formList=i.formList.filter(t=>t.label!=e.label)),i)))).subscribe(t=>this._forms.next(t)),this.forms.pipe(Object(Z.a)(),Object(q.a)(i=>i.map(i=>{if(i.groupName==t)return i.formList.filter(t=>t.label!=e.label)}))).subscribe(t=>{this._activeFormList.next(t.find(t=>null!=t))}),this.changeGroupForm(t)}renameForm(t,e,i){this.forms.pipe(Object(Z.a)(),Object(q.a)(s=>s.map(s=>(s.groupName==t&&s.formList.forEach(t=>{t.label==e.label&&(t.label=i)}),s)))).subscribe(t=>{this._forms.next(t)}),this.forms.pipe(Object(Z.a)(),Object(q.a)(s=>s.map(s=>(s.groupName==t&&s.formList.forEach(t=>{t.label==e.label&&(t.label=i)}),s.formList)))).subscribe(t=>{this._activeFormList.next(t.find(t=>null!=t))}),this.changeGroupForm(t)}renameOption(t,e,i,s){this.forms.pipe(Object(Z.a)(),Object(q.a)(o=>o.map(o=>(o.groupName==t&&o.formList.forEach(t=>{t.label==i.label&&t.options.forEach(t=>{t.label==e.label&&(t.label=s)})}),o)))).subscribe(t=>this._forms.next(t)),this.forms.pipe(Object(Z.a)(),Object(q.a)(o=>o.map(o=>(o.groupName==t&&o.formList.forEach(t=>{t.label==i.label&&t.options.forEach(t=>{t.label==e.label&&(t.label=s)})}),o.formList)))).subscribe(t=>{this._activeFormList.next(t.find(t=>null!=t))}),this.changeGroupForm(t)}deleteOption(t,e,i){this.forms.pipe(Object(Z.a)(),Object(q.a)(s=>s.map(s=>(s.groupName==t&&s.formList.forEach(t=>{t.label==i.label&&(t.options=t.options.filter(t=>t.label!=e.label))}),s)))).subscribe(t=>{this._forms.next(t)}),this.forms.pipe(Object(Z.a)(),Object(q.a)(s=>s.map(s=>(s.groupName==t&&s.formList.forEach(t=>{t.label==i.label&&(t.options=t.options.filter(t=>t.label!=e.label))}),s.formList)))).subscribe(t=>{this._activeFormList.next(t.find(t=>null!=t))}),this.changeGroupForm(t)}getForm(t,e){let i=e.filter(e=>e.groupName===t),s=[];return null!=i[0]&&(s=i[0].formList),s}saveTag(t,e,i){const s=this.tempData.findIndex(s=>s.groupName===t&&s.label===i&&s.feature===e.feature);s>-1?this.tempData[s].label=e.label:(e.groupName=t,this.tempData.push(e))}getTags(){this.tempData=[],this.tempData=this.tagData;for(let t of this.featureList)null!=t.properties.tag&&t.properties.tag.forEach(t=>{-1==this.tempData.findIndex(e=>e.groupName===t.groupName&&e.label===t.label&&e.feature===t.feature)&&this.tempData.push(t)});return this.tempData}deleteTag(t,e){let i=this.tempData;for(;;){const s=i.findIndex(i=>i.groupName===t&&i.label===e.label&&i.type===e.type);if(!(s>-1))break;i.splice(s,1)}this.tempData=i,console.log(this.tempData)}deleteOpt(t,e,i){const s=this.optData.findIndex(e=>e.groupName===t&&e.label===i.label);if(s>-1){const t=this.optData[s].options.findIndex(t=>t===e);t>-1&&this.optData[s].options.splice(t,1)}}addCheckedOpt(t,e,i,s){let o,n,r={key:t.key,label:t.label,choice:t.key,id:e,group:i,title:s};this.checkedOptions.push(r),this.groupList.forEach(t=>{if(t.name==i){this.tempGroup=t.features,o=t.icon;let e=[{name:t.name,color:t.color,icon:t.icon}];n={group:e,style:{faIcon:o,color:this.checkDefault("default")},tag:[]}}});for(let a of this.tempGroup)null==a.properties.tag&&a.properties.tag==[]||a.properties.group.forEach(t=>{if(t.name!=this.activeGroup){let e={name:t.name,color:t.color,icon:t.icon};n.group.push(e)}}),null!=a.properties.tag&&this.tempData.forEach(t=>{t.feature===e&&t.groupName===i&&t.extra.push(r),n.tag.push(t)}),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(a.id),n),n.tag=[]}deleteCheckedOpt(t,e,i,s){const o=this.checkedOptions.findIndex(o=>o.label===t.label&&o.id===e&&o.group===i&&o.title===s);let n,r;this.checkedOptions.splice(o,1),this.groupList.forEach(t=>{if(t.name==i){this.tempGroup=t.features,n=t.icon;let e=[{name:t.name,color:t.color,icon:t.icon}];r={group:e,style:{faIcon:n,color:this.checkDefault("default")},tag:[]}}});for(let a of this.tempGroup)null==a.properties.tag&&a.properties.tag==[]||a.properties.group.forEach(t=>{if(t.name!=this.activeGroup){let e={name:t.name,color:t.color,icon:t.icon};r.group.push(e)}}),null!=a.properties.tag&&this.tempData.forEach(o=>{if(o.feature===e&&o.groupName===i){const n=o.extra.findIndex(o=>o.label===t.label&&o.id===e&&o.group===i&&o.title===s);o.extra.splice(n,1)}r.tag.push(o)}),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(a.id),r),r.tag=[]}getCheckedOpt(){this.newOpt=[];for(let t of this.featureList)null!=t.properties.tag&&t.properties.tag.forEach(t=>{this.newOpt.push(t.extra)});return this.newOpt}updateSelectedRadio(t,e,i,s,o){let n,r;this.groupList.forEach(t=>{if(t.name==s){this.tempGroup=t.features,n=t.icon;let e=[{name:t.name,color:t.color,icon:t.icon}];r={group:e,style:{faIcon:n,color:this.checkDefault("default")},tag:[]}}});for(let a of this.tempGroup)null==a.properties.tag&&a.properties.tag==[]||a.properties.group.forEach(t=>{if(t.name!=this.activeGroup){let e={name:t.name,color:t.color,icon:t.icon};r.group.push(e)}}),null!=a.properties.tag&&this.tagData.forEach(n=>{if(n.feature===i&&n.groupName===s){const r=n.extra.findIndex(t=>t.id===i&&t.compId===e&&t.groupName===s&&t.label===o);if(r>-1)n.extra[r].option=t;else{let r={option:t,id:i,compId:e,groupName:s,label:o};n.extra.push(r)}}r.tag.push(n)}),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(a.id),r),r.tag=[]}getSelectedRadio(){this.newOpt=[];for(let t of this.featureList)null!=t.properties.tag&&t.properties.tag.forEach(t=>{this.newOpt.push(t.extra)});return this.newOpt}updateNotes(t,e,i,s,o){let n,r;this.groupList.forEach(t=>{if(t.name==s){this.tempGroup=t.features,n=t.icon;let e=[{name:t.name,color:t.color,icon:t.icon}];r={group:e,style:{faIcon:n,color:this.checkDefault("default")},tag:[]}}});for(let a of this.tempGroup)null==a.properties.tag&&a.properties.tag==[]||a.properties.group.forEach(t=>{if(t.name!=this.activeGroup){let e={name:t.name,color:t.color,icon:t.icon};r.group.push(e)}}),null!=a.properties.tag&&this.tagData.forEach(n=>{if(n.feature===i&&n.groupName===s&&"text"===n.type){const r=n.extra.findIndex(t=>t.id===i&&t.compID===e&&t.groupName===s&&t.label===o);if(r>-1)n.extra[r].option=t;else{let r={option:t,id:i,groupName:s,compID:e,label:o};n.extra.push(r)}}n.feature==i&&r.tag.push(n)}),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(a.id),r),r.tag=[]}getNotes(){return this.notebook}};et.ctorParameters=()=>[{type:X},{type:tt},{type:H}],et=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[X,tt,H])],et);let it=class{constructor(t,e){this.geoDataService=t,this.formsService=e,this._features=new U.a({type:"FeatureCollection",features:[]}),this.features$=this._features.asObservable(),this._tags=new U.a([]),this.tags$=this._tags.asObservable(),this.geoDataService.features.subscribe(t=>{this._features.next(t),this.featureCollection=t;try{null==this.tagList&&(this.tagList=this.formsService.getTags(),this._tags.next(this.tagList))}catch(e){}})}deleteFeature(t){this.featureCollection.features=this.featureCollection.features.filter(e=>e.id!=t.id),this._features.next(this.featureCollection),this.geoDataService.deleteFeature(t)}bulkFeatureDelete(t){t.forEach(t=>{this.featureCollection.features=this.featureCollection.features.filter(e=>e.id!=t.id),this.geoDataService.deleteFeature(t)}),this._features.next(this.featureCollection)}saveFeatures(t){this._features.next(t),t.features.forEach(t=>{this.geoDataService.updateFeatureProperty(t.project_id,Number(t.id),t.properties)}),this.geoDataService.getFeatures(t.features[0].project_id)}saveFeature(t){this.geoDataService.updateFeatureProperty(t.project_id,Number(t.id),t.properties)}updateFeatureProperties(t,e=null){null!=e&&(t.properties=e),this.featureCollection.features.forEach(e=>{e.id==t.id&&(e=t)}),this.saveFeature(t)}updateStyle(t,e){this.featureCollection.features.forEach(i=>{i.id==t.id&&(i.styles=e)}),this.geoDataService.updateFeatureStyle(t.project_id,Number(t.id),t.properties)}saveTags(t){this._tags.next(t);let e=[];this.featureCollection.features.forEach(i=>{t.forEach(t=>{i.id==t.feature&&e.push(t)}),i.properties.tag=e,e=[]}),this.saveFeatures(this.featureCollection)}deleteTag(t){let e=[];this.tagList.forEach(i=>{i.groupName==t.groupName&&i.label==t.label&&i.type==t.type||e.push(i)}),this.tagList=e,this.saveTags(this.tagList)}renameTag(t,e){let i=t.label;this.tagList.forEach(s=>{s.label==i&&s.type==t.type&&(s.label=e)}),this.saveTags(this.tagList)}createTag(t,e,i){this.featureCollection.features.forEach(i=>{i.properties.group&&i.properties.group.forEach(s=>{if(s.name==e){let e={extra:t.extra,feature:i.id,groupName:t.groupName,label:t.label,options:t.options,type:t.type};this.tagList.push(e)}})}),this.saveTags(this.tagList)}bulkTagDelete(t){t.forEach(t=>{this.tagList=this.tagList.filter(e=>e!=t)}),this.saveTags(this.tagList)}updateExtra(t,e,i,s,o,n){let r;this.tagList.forEach(a=>{if(a.feature===i&&a.groupName===s&&a.type===n){const n=a.extra.findIndex(t=>t.id===i&&t.compID===e&&t.groupName===s&&t.label===o);n>-1?a.extra[n].option=t:(r={option:t,id:i,groupName:s,compID:e,label:o},a.extra.push(r))}}),this.saveTags(this.tagList)}updateChecked(t,e,i,s,o){let n;this.tagList.forEach(r=>{if("create"==o)null!=r&&r.feature===e&&r.groupName===i&&(n={option:t.key,id:e,group:i,label:s},console.log(n),r.extra.push(n));else if(r.feature===e&&r.groupName===i){const o=r.extra.findIndex(o=>o.option===t.key&&o.id===e&&o.group===i&&o.label===s);r.extra.splice(o,1)}}),this.saveTags(this.tagList)}};it.ctorParameters=()=>[{type:H},{type:et}],it=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[H,et])],it);let st=class{constructor(t,e,i,s,o,n,r){this.formsService=t,this.groupsService=e,this.dialog=i,this.router=s,this.geoDataService=o,this.projectsService=n,this.featureService=r,this.formOptions=[],this.changed=!1,this.formItemList=[],this.openOption={},this.enabledControls=[],this.showSubitem=!0,this.newTag=[],this.newGroup=[]}ngOnInit(){this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.formsService.activeFormList.subscribe(t=>{this.activeFormList=t}),this.groups$=this.groupsService.groups.subscribe(t=>{this.groupList=t}),this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t}),this.formOptions=[],this.formItemList=[],this.formType="text",this.formName="",this.formLabel="",this.formValue="",this.formRequired=!1,this.enabledControls=["Text","Checkbox","Radio","Dropdown","Color"]}inputFormLabel(t){this.formLabel=t.target.value}addOptionItem(t){if(t){0==this.formOptions.filter(e=>e.label==t).length&&0!=t.length&&this.formOptions.push({key:t[0],label:t})}}deleteOption(t){this.formOptions=this.formOptions.filter(e=>e.label!=t.label)}openRenameModal(t,e){this.selectedGroup=e,this.dialog.open(t)}openRenameOptionModal(t){this.dialog.open(t)}renameOption(t,e){"show-option"==this.showOpt?this.showOpt="no-show-option":this.showOpt="show-option",e=e.toLowerCase(),this.formOptions.forEach(i=>{i.label==t.label&&(i.label=e)})}selectInputForm(t){this.formType=t,this.formLabel="",this.formOptions=[]}clearOption(){this.optionFilter=""}clearLabel(){this.labelFilter=""}addFormItem(){let t={type:this.formType,groupName:this.activeGroup,label:this.formLabel,options:[],feature:0,extra:[]};if(this.openOption[this.formLabel]=!1,"text"!==this.formType&&0!=this.formOptions.length){let e=[];for(const t of this.formOptions)e.push({key:t[0],label:t});t.options=this.formOptions}this.featureService.createTag(t,this.activeGroup,this.groupList),this.formLabel="",this.formOptions=[],this.labelFilter="",this.changed=!0,this.groupsService.setActivePane("tagger"),this.router.navigateByUrl("/tagger",{skipLocationChange:!0})}cancelCreate(){this.groupsService.setActivePane("tagger"),this.router.navigateByUrl("/tagger",{skipLocationChange:!0})}expandPanel(){this.showSubitem=!this.showSubitem,this.showSubitem}};st.ctorParameters=()=>[{type:et},{type:X},{type:f.b},{type:G.b},{type:H},{type:tt},{type:it}],st=n.a([Object(s.n)({selector:"app-tag-generator",template:n.b(i("MHpZ")).default,styles:[n.b(i("dTB+")).default]}),n.c("design:paramtypes",[et,X,f.b,G.b,H,tt,it])],st);let ot=class{constructor(t,e,i,s,o,n,r){this.groupsService=t,this.formsService=e,this.dialog=i,this.router=s,this.projectsService=o,this.geoDataService=n,this.featureService=r,this.openOption={},this.showSubitem=!0,this.tagList=[],this.newTag=[],this.newTagValue="",this.featureList=[]}ngOnInit(){this.activeGroup$=this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.activeFeatureId$=this.groupsService.activeFeatureId.subscribe(t=>{this.activeFeatureId=t}),this.formGroup$=this.formsService.formGroup.subscribe(t=>{this.form=t}),this.groupsService.groups.subscribe(t=>{this.groupList=t}),this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t}),this.featureService.features$.subscribe(t=>{this.featureList=t.features}),this.featureService.tags$.subscribe(t=>{this.tagList=t});for(let t of this.featureList)null!=t.properties.tag&&t.properties.tag.forEach(t=>{-1==this.newTag.findIndex(e=>e.groupName===t.groupName&&e.label===t.label&&e.feature===t.feature)&&this.newTag.push(t)})}openRenameModal(t,e){this.selectedGroup=e,this.dialog.open(t)}openRenameOptionModal(t){this.dialog.open(t)}deleteTag(t){this.featureService.deleteTag(t)}renameTag(t){this.featureService.renameTag(t,this.newTagValue),this.newTagValue="",this.dialog.closeAll()}openOptionToggle(t){this.openOption[t]?this.openOption[t]=!1:this.openOption[t]=!0}createNewTag(){this.groupsService.setActivePane("preset"),this.router.navigateByUrl("/preset",{skipLocationChange:!0})}onSubmit(){this.payload=this.form.getRawValue()}ngOnDestroy(){this.formGroup$.unsubscribe(),this.activeFeatureId$.unsubscribe(),this.activeGroup$.unsubscribe()}expandPanel(){this.showSubitem=!this.showSubitem,this.showSubitem}};ot.ctorParameters=()=>[{type:X},{type:et},{type:f.b},{type:G.b},{type:tt},{type:H},{type:it}],ot=n.a([Object(s.n)({selector:"app-tag-images",template:n.b(i("zXfM")).default,styles:[n.b(i("qk7I")).default]}),n.c("design:paramtypes",[X,et,f.b,G.b,tt,H,it])],ot);let nt=class{constructor(t){this.authSvc=t}canActivate(t,e){if(this.authSvc.isLoggedIn())return!0;this.authSvc.login()}};nt.ctorParameters=()=>[{type:M}],nt=n.a([Object(s.C)(),n.c("design:paramtypes",[M])],nt);const rt=[{path:"",component:W,canActivate:[nt],children:[{path:"tagger",component:ot,canActivateChild:[nt]},{path:"preset",component:st,canActivateChild:[nt]}]},{path:"callback",component:K},{path:"404",component:I}];let at=class{};at=n.a([Object(s.K)({imports:[G.c.forRoot(rt,{onSameUrlNavigation:"reload"})],exports:[G.c],providers:[nt]})],at);let lt=class{constructor(t){this.authService=t,this.title="viewer"}ngOnInit(){this.authService.login()}};lt.ctorParameters=()=>[{type:M}],lt=n.a([Object(s.n)({selector:"app-root",template:n.b(i("VzVu")).default,styles:[n.b(i("ynWL")).default]}),n.c("design:paramtypes",[M])],lt);var ct=i("4R65");i("JXP8");function pt(t,e){let i;return i="image"==t.featureType()?function(t,e){let i=Object(ct.divIcon)({className:"leaflet-fa-marker-icon",html:"<i class='fas fa-camera-retro fa-2x light-blue'></i>"});return Object(ct.marker)(e,{icon:i})}(0,e):"collection"==t.featureType()?function(t,e){let i=Object(ct.divIcon)({className:"icon-marker",html:'<i class="fa fa-folder-open fa-2x light-blue"></i>'});return Object(ct.marker)(e,{icon:i})}(0,e):"video"==t.featureType()?function(t,e){let i=Object(ct.divIcon)({className:"leaflet-fa-marker-icon",html:"<i class='fas fa-video fa-2x light-blue'></i>"});return Object(ct.marker)(e,{icon:i})}(0,e):function(t,e){return Object(ct.circleMarker)(e,{radius:8,fillColor:"#d3d3d3",color:"black",weight:1,opacity:1,fillOpacity:.8})}(0,e),i}var ut=i("WVt+"),ht=i("zP0r"),dt=i("pLZG");let mt=class{constructor(t,e){this.GeoDataService=t,this.route=e,this.mapType="normal",this.features=new ct.FeatureGroup,this.featureClickHandler.bind(this),this.mouseEventHandler.bind(this)}ngOnInit(){this.environment=N,this.overlays=new Map,this.map=new ct.Map("map",{center:[40,-80],zoom:9});const t=ct.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}),e=ct.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"});this.map.addLayer(t),this.loadFeatures(),this.map.on("mousemove",t=>this.mouseEventHandler(t)),this.GeoDataService.activeOverlay.pipe(Object(ht.a)(1)).subscribe(t=>{this.addRemoveOverlay(t)}),this.GeoDataService.activeFeature.pipe(Object(dt.a)(t=>null!=t)).subscribe(t=>{this.activeFeature=t;const e=ut.bbox(t);this.map.fitBounds([[e[1],e[0]],[e[3],e[2]]])}),this.GeoDataService.basemap.pipe(Object(ht.a)(1)).subscribe(i=>{"sat"==i&&(this.map.removeLayer(t),this.map.addLayer(e)),"roads"==i&&(this.map.removeLayer(e),this.map.addLayer(t))})}addRemoveOverlay(t){if(this.overlays.has(t.id))this.features.removeLayer(this.overlays.get(t.id)),this.overlays.delete(t.id);else{const e=ct.imageOverlay(N.apiUrl+"/assets/"+t.path,[[t.minLat,t.minLon],[t.maxLat,t.maxLon]]);this.overlays.set(t.id,e),this.features.addLayer(e)}this.map.fitBounds(this.features.getBounds())}mouseEventHandler(t){this.GeoDataService.mapMouseLocation=t.latlng}loadFeatures(){const t={pointToLayer:pt};this.GeoDataService.features.subscribe(e=>{this.features.clearLayers();const i=ct.markerClusterGroup({iconCreateFunction:t=>ct.divIcon({html:`<div><b>${t.getChildCount()}</b></div>`,className:"marker-cluster"})});e.features.forEach(e=>{const s=ct.geoJSON(e,t);s.on("click",t=>{this.featureClickHandler(t)}),"Point"==e.geometry.type?i.addLayer(s):this.features.addLayer(s)}),this.features.addLayer(i),this.map.addLayer(this.features);try{this.map.fitBounds(this.features.getBounds())}catch(s){}})}featureClickHandler(t){const e=t.layer.feature;this.GeoDataService.activeFeature=e}};mt.ctorParameters=()=>[{type:H},{type:G.a}],mt=n.a([Object(s.n)({selector:"app-map",template:n.b(i("eC1z")).default,styles:[n.b(i("obZR")).default]}),n.c("design:paramtypes",[H,G.a])],mt);var gt=i("JX91");let ft=class{constructor(t){this.tapis=t,this.baseUrl="https://agave.designsafe-ci.org/systems/v2/",this._systems=new A.a(1),this.systems=this._systems.asObservable(),this._projects=new A.a(1),this.projects=this._projects.asObservable()}list(){this.tapis.systemsList({type:"STORAGE"}).subscribe(t=>{this._systems.next(t.result),this._projects.next(t.result.filter(t=>t.id.startsWith("project")))},t=>{this._systems.next(null),this._projects.next(null)})}};ft.ctorParameters=()=>[{type:k.b}],ft=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[k.b])],ft);var bt=i("dFDH");let vt=class{constructor(t,e,i,s){this.tapis=t,this.http=e,this.authService=i,this.popup=s,this.baseUrl="https://agave.designsafe-ci.org/files/v2/",this._listing=new U.a([]),this.listing=this._listing.asObservable(),this.IMPORTABLE_TYPES=["jpg","jpeg","las","laz","json","geojson","geotiff","tiff","gpx"]}checkIfSelectable(t){if("dir"===t.type)return!1;const e=this.getFileExtension(t);return this.IMPORTABLE_TYPES.includes(e)}getFileExtension(t){return t.name.split(".").pop().toLowerCase()}listFiles(t,e,i,s){return this.tapis.filesList({systemId:t,filePath:e,offset:i,limit:s})}getParentPath(t){const e=t.replace("//","/").split("/");e.pop();return e.join("/")}export(t,e,i,s,o){let n={duration:3e3,horizontalPosition:"right",verticalPosition:"top"},r=`https://agave.designsafe-ci.org/files/v2/media/system/${t}${e}`,a="plain/text";a=".csv"==s?"text/csv":"application/json";let l=new Blob([o],{type:a}),c=new Date,p=new File([l],i,{lastModified:c.valueOf()}),u=new FormData;u.append("fileToUpload",p),this.http.post(r,u).subscribe(i=>{console.log(i);let s="Successfully saved file to "+t+e;this.popup.open(s,"",n)},i=>{console.log(i);let s="Faled to save file to "+t+e;this.popup.open(s,"",n)})}saveState(){let t=JSON.stringify(this.lastSystem),e=JSON.stringify(this.lastFile);window.localStorage.setItem("system",t),window.localStorage.setItem("file",e)}getState(){try{this.lastSystem=JSON.parse(window.localStorage.getItem("system")),this.lastFile=JSON.parse(window.localStorage.getItem("file")),this.noPreviousSelections=null==this.lastFile}catch(t){console.log(t)}}};vt.ctorParameters=()=>[{type:k.b},{type:l.b},{type:M},{type:bt.a}],vt=n.a([Object(s.C)({providedIn:"root"}),n.c("design:paramtypes",[k.b,l.b,M,bt.a])],vt);var xt,yt=i("XNiG"),St=i("itXk");let wt=xt=class{constructor(t,e,i,o,n){this.tapisFilesService=t,this.dialogRef=e,this.dialog=i,this.authService=o,this.agaveSystemsService=n,this.currentPath=new s.w,this.allowedExtensions=this.tapisFilesService.IMPORTABLE_TYPES,this.filesList=[],this.inProgress=!0,this.retrievalError=!1,this.selectedFiles=new Map,this.onClose=new yt.a}ngOnInit(){this.agaveSystemsService.list(),Object(St.a)([this.authService.currentUser,this.agaveSystemsService.systems,this.agaveSystemsService.projects]).pipe(Object($.a)(1)).subscribe(([t,e,i])=>{this.myDataSystem=e.find(t=>"designsafe.storage.default"===t.id),this.communityDataSystem=e.find(t=>"designsafe.storage.community"===t.id),this.publishedDataSystem=e.find(t=>"designsafe.storage.published"===t.id),this.selectedSystem=this.tapisFilesService.lastSystem,null==this.selectedSystem&&(this.selectedSystem=this.myDataSystem,this.tapisFilesService.lastSystem=this.myDataSystem),this.currentDirectory=this.tapisFilesService.lastFile,this.projects=i,this.currentUser=t;const s={system:this.myDataSystem.id,type:"dir",path:this.currentUser.username};this.tapisFilesService.noPreviousSelections&&(this.selectedSystem=this.myDataSystem,this.tapisFilesService.lastFile=s,this.tapisFilesService.noPreviousSelections=!1),this.browse(this.tapisFilesService.lastFile)})}selectSystem(t){let e;e=t.id===this.myDataSystem.id?this.currentUser.username:"/";const i={system:t.id,type:"dir",path:e};this.selectedSystem=t,this.tapisFilesService.lastSystem=this.selectedSystem,this.browse(i)}browse(t){this.selectedPath=t.path,this.selectedSystem=this.selectedSystem,"dir"===t.type&&(this.currentDirectory=t,this.tapisFilesService.lastFile=t,this.filesList=[],this.offset=0,this.inProgress=!1,this.getFiles())}toRoot(){let t;t=this.selectedSystem.id===this.myDataSystem.id?this.currentUser.username:"/";const e={system:this.selectedSystem.id,type:"dir",path:t};this.browse(e)}getFiles(){let t=this.offset%xt.limit==0;!this.inProgress&&t&&(this.inProgress=!0,this.tapisFilesService.listFiles(this.currentDirectory.system,this.currentDirectory.path,this.offset,xt.limit).subscribe(t=>{const e=t.result;if(e.length&&"."===e[0].name){const t=e.shift();this.currentPath.next(t.path),t.path=this.tapisFilesService.getParentPath(t.path),t.name="..",e.unshift(t)}const i=[],s=this.allowedExtensions;e.forEach((function(t,e){("file"==t.type&&s.includes(t.path.split(".").pop().toLowerCase())||"dir"==t.type)&&i.push(t)})),this.inProgress=!1,this.retrievalError=!1,this.filesList=this.filesList.concat(i),this.offset=this.offset+e.length},t=>{this.retrievalError=!0,this.inProgress=!1}))}select(t,e,i){t.shiftKey?this.selectFilesShiftClick(i,e):this.tapisFilesService.checkIfSelectable(e)&&this.addSelectedFile(e,i)}selectFilesShiftClick(t,e){this.selectShift(t,e)}addSelectedFile(t,e){-1!=e&&(this.firstFileIndex=e),this.tapisFilesService.checkIfSelectable(t)&&(this.selectedFiles.has(t.path)?this.selectedFiles.delete(t.path):this.selectedFiles.set(t.path,t))}chooseFiles(){this.tapisFilesService.saveState(),this.tapisFilesService.lastSystem=this.selectedSystem;const t=Array.from(this.selectedFiles.values());this.dialogRef.close(t)}cancel(){this.tapisFilesService.saveState(),this.tapisFilesService.lastSystem=this.selectedSystem,this.dialogRef.close()}selectAll(){let t=0;for(let e of this.filesList)this.selectedFiles.has(e.path)||(this.select("",e,-1),t+=1);1==t&&this.selectedFiles.clear()}selectShift(t,e){null!=this.firstFileIndex&&this.firstFileIndex!=t?this.addRangeFiles(this.firstFileIndex,t,!0):this.addSelectedFile(e,t)}addRangeFiles(t,e,i){let s=Math.max(t,e);for(let o=Math.min(t,e);o<s+1;++o)this.addSelectedFile(this.filesList[o],-1);i&&this.addSelectedFile(this.filesList[t],-1)}};var Ft;wt.limit=200,wt.ctorParameters=()=>[{type:vt},{type:f.d},{type:f.b},{type:M},{type:ft}],n.a([Object(s.R)(),n.c("design:type",s.w)],wt.prototype,"currentPath",void 0),wt=xt=n.a([Object(s.n)({selector:"app-modal-file-browser",template:n.b(i("0NOL")).default,styles:[n.b(i("u6lZ")).default]}),n.c("design:paramtypes",[vt,f.d,f.b,M,ft])],wt);let jt=Ft=class{constructor(t,e,i,o,n){this.tapisFilesService=t,this.dialogRef=e,this.dialog=i,this.authService=o,this.agaveSystemsService=n,this.currentPath=new s.w,this.filesList=[],this.inProgress=!0,this.selectedFiles=new Map,this.onClose=new yt.a,this.passbackData=["","","",""],this.fileName="Custom File Name",this.fileExtension=".csv"}ngOnInit(){this.downloadSelectForm=new Y.c({Name:new Y.b(this.fileName),Extension:new Y.b(this.fileExtension)}),this.agaveSystemsService.list(),Object(St.a)([this.authService.currentUser,this.agaveSystemsService.systems,this.agaveSystemsService.projects]).pipe(Object($.a)(1)).subscribe(([t,e,i])=>{this.myDataSystem=e.find(t=>"designsafe.storage.default"===t.id),this.communityDataSystem=e.find(t=>"designsafe.storage.community"===t.id),this.publishedDataSystem=e.find(t=>"designsafe.storage.published"===t.id),this.selectedSystem=this.myDataSystem,this.projects=i,this.currentUser=t;const s={system:this.myDataSystem.id,type:"dir",path:this.currentUser.username};this.browse(s)})}selectSystem(t){let e;e=t.id===this.myDataSystem.id?this.currentUser.username:"/";const i={system:t.id,type:"dir",path:e};this.browse(i)}browse(t){"dir"===t.type&&(this.currentDirectory=t,this.filesList=[],this.offset=0,this.inProgress=!1,this.getFiles())}getFiles(){let t=this.offset%Ft.limit==0;!this.inProgress&&t&&(this.inProgress=!0,this.tapisFilesService.listFiles(this.currentDirectory.system,this.currentDirectory.path,this.offset,Ft.limit).subscribe(t=>{const e=t.result;if(e.length&&"."===e[0].name){const t=e.shift();this.currentPath.next(t.path),this.passbackData[1]=t.path,t.path=this.tapisFilesService.getParentPath(t.path),t.name="..",e.unshift(t)}const i=[];e.forEach((function(t,e){"file"!=t.type&&"dir"!=t.type||i.push(t)})),this.inProgress=!1,this.filesList=this.filesList.concat(i),this.offset=this.offset+e.length},t=>{this.inProgress=!1}))}chooseFiles(){this.passbackData[0]=this.selectedSystem.id,this.downloadSelectForm.dirty?this.passbackData[2]=this.downloadSelectForm.get("Name").value:this.passbackData[2]="",this.passbackData[3]=this.fileExtension,this.dialogRef.close(this.passbackData)}cancel(){this.dialogRef.close()}};jt.limit=200,jt.ctorParameters=()=>[{type:vt},{type:f.d},{type:f.b},{type:M},{type:ft}],n.a([Object(s.R)(),n.c("design:type",s.w)],jt.prototype,"currentPath",void 0),jt=Ft=n.a([Object(s.n)({selector:"app-modal-download-selector",template:n.b(i("7E2L")).default,styles:[n.b(i("Ag+R")).default]}),n.c("design:paramtypes",[vt,f.d,f.b,M,ft])],jt);let Ot=class{constructor(t,e,i){this.dialogRef=t,this.dialog=e,this.projectsService=i,this.onClose=new yt.a}ngOnInit(){this.projCreateForm=new Y.c({name:new Y.b(""),description:new Y.b("")})}close(t){this.dialogRef.close()}submit(){const t=new D,e=new T;t.description=this.projCreateForm.get("description").value,t.name=this.projCreateForm.get("name").value,e.project=t,this.projectsService.create(e),this.dialogRef.close()}};Ot.ctorParameters=()=>[{type:f.d},{type:f.b},{type:tt}],Ot=n.a([Object(s.n)({selector:"app-modal-create-project",template:n.b(i("nOsy")).default,styles:[n.b(i("fWOx")).default]}),n.c("design:paramtypes",[f.d,f.b,tt])],Ot);let kt=class{constructor(t,e,i){this.dialogRef=t,this.dialog=e,this.projectsService=i}ngOnInit(){this.projShareForm=new Y.c({name:new Y.b("")}),this.projectsService.activeProject.subscribe(t=>{this.activeProj=t}),this.projectsService.getProjectUsers(this.activeProj).subscribe(t=>{this.projectUsers=t,this.onlyOne=1==this.projectUsers.length,console.log(this.onlyOne)})}close(){this.dialogRef.close()}submit(){this.projectsService.addUserToProject(this.activeProj,this.projShareForm.get("name").value),this.dialogRef.close()}delete(t){this.projectsService.deleteUserFromProject(this.activeProj,t),this.dialogRef.close()}};kt.ctorParameters=()=>[{type:f.d},{type:f.b},{type:tt}],kt=n.a([Object(s.n)({selector:"app-modal-share-project",template:n.b(i("P1jy")).default,styles:[n.b(i("dp4s")).default]}),n.c("design:paramtypes",[f.d,f.b,tt])],kt);let Gt=class{constructor(t,e,i,s){this.dialogRef=t,this.dialog=e,this.projectsService=i,this.projData=s}ngOnInit(){this.projectsService.activeProject.subscribe(t=>{this.activeProject=t}),this.projCreateForm=new Y.c({name:new Y.b(this.activeProject.name),description:new Y.b(this.activeProject.description)})}close(){this.dialogRef.close()}delete(){confirm("Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.")&&this.projectsService.delete(this.activeProject),this.dialogRef.close()}update(){const t=new D,e=new T;t.description=this.projCreateForm.get("description").value,t.name=this.projCreateForm.get("name").value,t.id=this.activeProject.id,t.uuid=this.activeProject.uuid,e.project=t,this.projectsService.update(e),this.dialogRef.close()}};Gt.ctorParameters=()=>[{type:f.d},{type:f.b},{type:tt},{type:void 0,decorators:[{type:s.B,args:[f.a]}]}],Gt=n.a([Object(s.n)({selector:"app-modal-current-project",template:n.b(i("moaK")).default,styles:[n.b(i("tw4j")).default]}),n.d(3,Object(s.B)(f.a)),n.c("design:paramtypes",[f.d,f.b,tt,Object])],Gt);let It=class{constructor(t,e,i,s,o,n,r,a,l,c,p,u){this.projectsService=t,this.geoDataService=e,this.bsModalService=i,this.groupsService=s,this.formsService=o,this.authService=n,this.filesService=r,this.router=a,this.dialog=l,this.scrollService=c,this.notificationsService=p,this.featureService=u,this.featureList=[],this.REFRESHTIME=6,this.mapMouseLocation=new ct.LatLng(0,0),this.liveRefresh=!0,this.timer=Object(V.a)(1e3*this.REFRESHTIME),this.itemsSelected=!1,this.foundFilePaths=[]}ngOnInit(){this.filesService.getState(),this.featureService.features$.subscribe(t=>{this.features=t,null!=this.features&&(this.featureList=this.features.features,this.groupsService.setActiveProject(this.featureList[0]),this.groupsService.setGroupProperties(this.featureList))}),this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.groupsService.activePane.subscribe(t=>{this.activePane=t}),this.geoDataService.activeFeature.subscribe(t=>{this.activeFeature=t,this.activeFeature&&console.log(this.activeFeature.assets[0].path)}),this.notificationsService.notifications.subscribe(t=>{let e=t.some(t=>"success"===t.status),i=t.some(t=>"error"===t.status);e&&(this.geoDataService.getFeatures(this.selectedProject.id),console.log("Features Got")),i&&(t.forEach(t=>{if("Error importing "==t.message.substring(0,16)&&!this.foundFilePaths.some(e=>e===t.message.substring(16))){let e=t.message.substring(16);this.geoDataService.uploadNewFeature(this.selectedProject.id,this.createBlankFeature(),e),this.foundFilePaths.push(e)}}),this.geoDataService.getFeatures(this.selectedProject.id))}),this.authService.currentUser.subscribe(t=>this.currentUser=t),this.projectsService.getProjects(),this.projectsService.projects.subscribe(t=>{if(this.projects=t,this.projects.length){let t;try{t=JSON.parse(window.localStorage.getItem("lastProj")),console.log(t)}catch(e){t=this.projectsService.setActiveProject(this.projects[0])}"none"!=t&&null!=t||(t=this.projects[0]),this.projectsService.setActiveProject(t)}this.groupsService.groups.subscribe(t=>{this.groupList=t,this.groupList.length>0?this.groupsExist=!0:this.groupsExist=!1}),this.groupsService.activeFeatureNum.pipe(Object(gt.a)(0)).subscribe(t=>{this.activeFeatureNum=t,this.groupList.forEach(e=>{e.name==this.activeGroup&&e.features[t]&&(e.features[t].assets[0].display_path?this.imageName=/[^/]*$/.exec(e.features[t].assets[0].display_path)[0]:this.imageName=/[^/]*$/.exec(e.features[t].assets[0].path)[0])})}),this.groupsService.tempGroup.subscribe(t=>{this.tempGroup=t}),this.groupsService.showGroup.subscribe(t=>{this.showGroup=t}),this.groupsService.showSidebar.subscribe(t=>{this.showSidebar=t}),this.groupsService.tempGroup.subscribe(t=>{this.tempGroup=t}),this.groupsService.itemsSelected.subscribe(t=>{this.itemsSelected=t})}),this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t,this.getDataForProject(this.selectedProject),this.hazMapperLink="https://hazmapper.tacc.utexas.edu/hazmapper/project/"+t.uuid}),this.geoDataService.mapMouseLocation.pipe(Object(ht.a)(1)).subscribe(t=>{this.mapMouseLocation=t}),this.groupsService.setActiveFeatureNum(0)}clearAll(){this.groupsService.setUnselectAll(!0),this.groupsService.setItemsSelected(!1)}reloadFeatures(){this.geoDataService.getFeatures(this.selectedProject.id)}setLiveRefresh(t){t?this.timerSubscription=this.timer.subscribe(()=>{this.reloadFeatures()}):this.timerSubscription.unsubscribe()}startRefreshTimer(t){t?this.timerSubscription=this.timer.subscribe(()=>{this.reloadFeatures(),this.setLiveRefresh(!1)}):this.timerSubscription.unsubscribe()}selectProject(t){this.projectsService.setActiveProject(t),this.getDataForProject(t)}getDataForProject(t){this.geoDataService.getFeatures(t.id),this.geoDataService.getOverlays(t.id),this.geoDataService.getPointClouds(t.id)}openFilePicker(){this.foundFilePaths=[];this.dialog.open(wt).afterClosed().subscribe(t=>{null!=t&&this.geoDataService.importFileFromTapis(this.selectedProject.id,t)})}createBlankFeature(){return{type:"Feature",geometry:{type:"Point",coordinates:[0,0]},properties:{}}}openDownloadSelector(t){let e;this.dialog.open(jt).afterClosed().subscribe(t=>{console.log(t),e=t,this.saveFile(".json"==e[3],!0,e[0],e[1],e[2])})}openCreateProjectModal(){this.dialog.open(Ot,{height:"400px",width:"600px"}),this.dialog.afterAllClosed.subscribe(t=>{this.showSidebar&&this.openSidebar()})}openShareProjectModal(){this.dialog.open(kt,{height:"400px",width:"600px"})}openProjectModal(t){this.dialog.open(Gt,{height:"400px",width:"600px",data:{id:t.id,name:t.name,description:t.description,uuid:t.uuid}}).afterClosed().subscribe(t=>{this.projectsService.setActiveProject(this.projects[0])})}addToGroupService(t){if(this.groupName=t,this.groupsService.setActiveGroup(t),1e3!=this.groupList.length)if(t&&0!==t.length)if(this.groupList.filter(e=>e.name===t).length)console.log("Existing Name");else{let e=this.getRandomColor();this.groupList.push({name:t,features:this.tempGroup,color:e,icon:"fa-house-damage"}),this.groupsService.addGroup(this.groupList),this.formsService.addGroup(this.groupName),console.log(this.groupList),console.log(this.tempGroup);for(let i of this.tempGroup){let s=i.properties;if(console.log(i.properties),s.group)console.log("nope"),s.group.push({name:t,color:e,icon:"fa-house-damage"});else{console.log("This is actually happening"),(s.group=[]).push({name:t,color:e,icon:"fa-house-damage"})}this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(i.id),s),console.log("In control-bar"),console.log("Current feat: "+i.id),console.log("featProp: what gets sent to server"),console.log(s),console.log("groupList: internal listing")}}else console.log("Invalid Name");this.tempGroup=[],this.groupsService.addTempGroup(this.tempGroup),this.groupsService.setUnselectAll(!0),this.groupsService.setShowGroup(!1),this.dialog.closeAll()}openAddGroupModal(t){this.dialog.open(t)}openSidebar(){this.showSidebar?this.scrollService.setScrollRestored(!0):this.scrollService.setScrollPosition();let t=!this.showSidebar;this.groupsService.setActiveGroup(this.groupList[0].name),0==this.groupList.filter(t=>t.name==this.activeGroup)[0].features.length?this.groupsService.setFeatureImagesExist(!1):this.groupsService.setFeatureImagesExist(!0),this.reloadFeatures(),this.groupsService.setActiveFeatureNum(0),this.groupsService.setShowSidebar(t),this.groupsService.setShowGroup(!1),this.router.navigateByUrl("/tagger",{skipLocationChange:!0}),this.tempGroup=[],this.groupsService.addTempGroup(this.tempGroup),this.groupsService.setUnselectAll(!0),this.groupsService.setActivePane("tagger")}otherPath(t){let e=this.groupList.filter(t=>t.name===this.activeGroup);t?(this.activeFeatureNum+=1,this.activeFeatureNum=this.activeFeatureNum%e[0].features.length):(0==this.activeFeatureNum&&(this.activeFeatureNum=e[0].features.length),this.activeFeatureNum-=1),this.groupsService.setActiveFeatureNum(this.activeFeatureNum)}getRandomColor(){for(var t="#",e=0;e<6;e++)t+="0123456789ABCDEF"[Math.floor(16*Math.random())];return t}goToRoute(){"preset"==this.activePane?(this.groupsService.setActivePane("tagger"),this.router.navigateByUrl("/tagger",{skipLocationChange:!0})):(this.groupsService.setActivePane("preset"),this.router.navigateByUrl("/preset",{skipLocationChange:!0})),this.groupsService.setActiveGroup(this.activeGroup)}clearAndUnselect(){}saveFile(t,e=!1,i="",s="",o){let n,r,a="FeatureID,longitude,latitude,src",l="",c="",p=!0,u=!1,h=0;this.featureList.forEach(e=>{c=e.project_id;let i,s,o,n=e.geometry.coordinates,r=N.apiUrl+"/assets/"+e.assets[0].path;r=r.replace(/([^:])(\/{2,})/g,"$1/");try{try{i=e.properties.group}catch(d){i=[{color:"#000000",name:"N/A",icon:"fa-house-damage"}]}try{s=e.properties.style}catch(m){s=[]}try{o=e.properties.tag}catch(g){o=[]}i.length>0&&!u&&(a+=",groupName,groupColor,groupIcon"),null!=o&&p&&!u?(a+=",Icon,Color,tagType,tagSelection",o.forEach(t=>{let e=0;t.options.forEach(t=>{e++,e>h&&(a+=",tagOption",h=e)})}),u||(a+="\r\n",p=!1,u=!0)):u||(a+="\r\n",u=!0)}catch(f){}if(t)l+=this.compileJSON(n,e.id,r,i,o,s)+", \n";else if(null==i){a+="\r\n";let t=e.id+","+n[0]+","+n[1]+","+r+"\r\n";a+=t}else i.forEach(t=>{if(console.log(t),null!=o)try{o.forEach(i=>{{console.log(i);let o=e.id+","+n[0]+","+n[1]+","+r+","+t.name+","+t.color+","+t.icon+","+s.faIcon+","+s.color+","+i.type+","+i.extra[0].option;i.options.forEach(t=>{o+=","+t.label}),o+="\r\n",a+=o}})}catch(d){try{let i=e.id+","+n[0]+","+n[1]+","+r+","+t.name+","+t.color+","+t.icon+"\r\n";a+=i}catch(f){let i=e.id+","+n[0]+","+n[1]+","+r+"\r\n";a+=i}}else{let i=e.id+","+n[0]+","+n[1]+","+r+","+t.name+","+t.color+","+t.icon+"\r\n";a+=i}})}),t?(n=l,r=".json"):(n=a,r=".csv"),e?(""==o?o=c+r:o+=r,this.filesService.export(i,s,o,r,n)):this.download(n,r,c)}compileJSON(t,e,i,s=[],o=[],n){let r,a="";return r={longitude:t[0],latitude:t[1],src:i},a+=JSON.stringify(r),0!=s.length&&s.forEach(t=>{r={groupName:t.name,groupColor:t.color},a+=JSON.stringify(r),o.length>0&&o.forEach(t=>{t.feature==e&&(r={icon:n.faIcon,"icon color":n.color,"tag name":t.label,"tag type":t.type,"tag selection":t.extra[0].option},a+=JSON.stringify(r))})}),""==a&&(r={longitude:t[0],latitude:t[1],src:i},a+=JSON.stringify(r)),a}download(t,e,i){let s=new Blob(["\ufeff"+t],{type:"text/csv;charset=utf-8;"}),o=document.createElement("a"),n=URL.createObjectURL(s),r="taggit-proj-"+i;-1!=navigator.userAgent.indexOf("Safari")&&-1==navigator.userAgent.indexOf("Chrome")&&o.setAttribute("target","_blank"),o.setAttribute("href",n),o.setAttribute("download",r+e),o.style.visibility="hidden",document.body.appendChild(o),o.click(),document.body.removeChild(o)}};It.ctorParameters=()=>[{type:tt},{type:H},{type:h.c},{type:X},{type:et},{type:M},{type:vt},{type:G.b},{type:f.b},{type:J},{type:B},{type:it}],It=n.a([Object(s.n)({selector:"app-control-bar",template:n.b(i("vlUF")).default,styles:[n.b(i("uV4w")).default]}),n.c("design:paramtypes",[tt,H,h.c,X,et,M,vt,G.b,f.b,J,B,it])],It);var Pt=i("z6cu"),Lt=i("JIr8");let Dt=class{constructor(t){this.authService=t}intercept(t,e){return e.handle(t).pipe(Object(Lt.a)(t=>{401===t.status&&(this.authService.logout(),location.reload());const e=t.error.message||t.statusText;return Object(Pt.a)(e)}))}};Dt.ctorParameters=()=>[{type:M}],Dt=n.a([Object(s.C)(),n.c("design:paramtypes",[M])],Dt);let Tt=class{constructor(t){this.authSvc=t}intercept(t,e){return t.url.indexOf("https://agave.designsafe-ci.org")>-1&&this.authSvc.isLoggedIn()&&(t=t.clone({setHeaders:{Authorization:"Bearer "+this.authSvc.userToken.token}})),t.url.indexOf("http://localhost")>-1&&this.authSvc.isLoggedIn()&&(t=t.clone({setHeaders:{"X-JWT-Assertion-designsafe":N.jwt}})),e.handle(t)}};Tt.ctorParameters=()=>[{type:M}],Tt=n.a([Object(s.C)(),n.c("design:paramtypes",[M])],Tt);let Ct=class{constructor(t,e,i,s,o,n,r,a){this.geoDataService=t,this.projectsService=e,this.groupsService=i,this.renderer=s,this.spinner=o,this.dialog=n,this.scrollService=r,this.featureService=a,this.scrolling=!1,this.featureList=[],this.scrollSum=15}ngAfterViewChecked(){this.scrollService.scrollRestored&&this.scrollService.scroll()}ngOnInit(){this.environment=N,this.geoDataService.loaded.subscribe(t=>{this.loaded=t},t=>{this.projectsExist=!1}),this.featureService.features$.subscribe(t=>{t&&(t.features.length>0?(this.imagesExist=!0,this.featureList=t.features.filter(t=>{try{return"image"===t.assets[0].asset_type}catch(e){return console.error(e),t.assets.push({path:"../../images/Image-not-found.png"}),!1}}),this.featureListScroll=this.featureList.slice(0,this.scrollSum)):this.imagesExist=!1)}),this.projectsService.projects.subscribe(t=>{this.projects=t,this.projects.length?this.projectsExist=!0:this.projectsExist=!1}),this.geoDataService.activeFeature.subscribe(t=>{t&&(this.activeFeature=t)}),this.groupsService.groups.subscribe(t=>{this.groupList=t}),this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.groupsService.featureImagesExist.subscribe(t=>{this.groupExist=t}),this.groupsService.tempGroup.subscribe(t=>{this.tempGroup=t}),this.groupsService.showGroup.subscribe(t=>{this.showGroup=t}),this.groupsService.activeFeatureNum.pipe(Object(gt.a)(0)).subscribe(t=>{this.activeFeatureNum=t}),this.groupsService.showSidebar.subscribe(t=>{this.showSidebar=t,this.status=!!t}),this.groupsService.setActiveFeatureNum(0)}getPath(){let t=this.groupList.filter(t=>t.name===this.activeGroup);null!=t[0]&&null==t[0].features[this.activeFeatureNum].assets[0].path&&(this.groupsService.setActiveFeatureNum(0),null==t[0].features[this.activeFeatureNum]&&this.groupsService.setActiveGroup(this.groupList[0].name));let e=this.environment.apiUrl+"/assets/"+t[0].features[this.activeFeatureNum].assets[0].path;return this.groupsService.setActiveFeatureId(t[0].features[this.activeFeatureNum].id),e=e.replace(/([^:])(\/{2,})/g,"$1/"),e}appendSum(){if(0!=this.featureList.length){if(this.scrollSum==this.featureList.length)return this.spinner.hide(),void(this.scrolling=!1);this.scrollSum>this.featureList.length&&(this.scrollSum=this.featureList.length)}this.featureListScroll=this.featureList.slice(0,this.scrollSum),setTimeout(()=>{this.spinner.hide(),this.scrolling=!1},1300)}onScroll(){this.scrolling||(this.spinner.show(),this.scrollSum+=10,this.appendSum(),this.scrolling=!0)}openCreateProjectModal(){this.dialog.open(Ot,{height:"400px",width:"600px"})}};Ct.ctorParameters=()=>[{type:H},{type:tt},{type:X},{type:s.Z},{type:u.b},{type:f.b},{type:J},{type:it}],Ct=n.a([Object(s.n)({selector:"app-image-gallery",template:n.b(i("Pwca")).default,styles:[n.b(i("N3QO")).default]}),n.c("design:paramtypes",[H,tt,X,s.Z,u.b,f.b,J,it])],Ct);var Et=i("KaVy");let _t=class{constructor(t,e,i,s,o,n,r,a){this.geoDataService=t,this.groupsService=e,this.projectsService=i,this.modalService=s,this.formsService=o,this.dialog=n,this.scrollService=r,this.featureService=a,this.status=!1,this.hasGroup=!1,this.colors=[],this.currentGroup="hello",this.unselectAll=!1,this.tagList=this.formsService.getTags(),this.imageCollection={}}ngOnInit(){let t;this.environment=N,t="../../images/Image-not-found.png"!=this.feature.assets[0].path?this.environment.apiUrl+"/assets/"+this.feature.assets[0].path:this.feature.assets[0].path,t=t.replace(/([^:])(\/{2,})/g,"$1/"),this.featureSource=t,this.coordinates=this.feature.geometry.coordinates,this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t}),this.groupsService.groups.subscribe(t=>{this.groupList=t,null!=this.groupList&&this.groupList.length>0&&null!=this.featureSource&&this.groupList.forEach(t=>{t.features.forEach(e=>{e.id==this.feature.id&&(this.colors.includes(t.color)||this.colors.push(t.color),this.hasGroup=!0)})})}),this.groupsService.tempGroup.subscribe(t=>{this.tempGroup=t}),this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.groupsService.unselectAll.subscribe(t=>{this.unselectAll=t,1==this.unselectAll&&(this.status=!1)});let e=this.feature.assets[0].display_path;e=this.feature.assets[0].display_path,this.featurePath=e}imageSelect(){1==this.unselectAll&&(this.unselectAll=!1,this.groupsService.setUnselectAll(!1),this.tempGroup=[]),this.status=!this.status,this.status&&this.groupsService.setItemsSelected(this.status),this.tempGroup.filter(t=>t.assets[0].id==this.feature.assets[0].id).length>0?this.tempGroup=this.tempGroup.filter(t=>t.assets[0].id!=this.feature.assets[0].id):this.tempGroup.push(this.feature),this.groupsService.addTempGroup(this.tempGroup),0==this.tempGroup.length?(this.groupsService.setShowGroup(!1),this.groupsService.setItemsSelected(!1)):this.groupsService.setShowGroup(!0)}imageSelectTrue(){this.status=!0,this.groupsService.setItemsSelected(this.status),this.tempGroup.filter(t=>t.assets[0].id==this.feature.assets[0].id).length>0?this.tempGroup=this.tempGroup.filter(t=>t.assets[0].id!=this.feature.assets[0].id):this.tempGroup.push(this.feature),this.groupsService.addTempGroup(this.tempGroup),this.groupsService.setShowGroup(!0)}imageZoom(t){this.dialog.open(t)}imageDelete(){const t=this.featureService;this.tempGroup.forEach((function(e){t.deleteFeature(e)})),this.groupsService.addTempGroup([]),this.scrollService.setScrollRestored(!0)}openMoreGroupsModal(t){this.dialog.open(t)}openImageDeleteModal(t){this.imageSelectTrue(),this.scrollService.setScrollPosition(),this.dialog.open(t)}deleteFromGroup(t){this.groupList.forEach(e=>{e.features.length<=1?this.groupList=this.groupList.filter(e=>e.color!=t):e.color==t&&(e.features=e.features.filter(t=>t.id!=this.feature.id))});let e=this.feature.properties;e.group=e.group.filter(e=>e.color!=t),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(this.feature.id),e),this.groupsService.addGroup(this.groupList),this.colors=this.colors.filter(e=>e!=t)}openImageAddModal(t){this.imageSelectTrue(),this.scrollService.setScrollPosition(),this.dialog.open(t)}selectGroupForm(t,e){let i="",s="";this.groupsService.setActiveFeatureNum(0),this.groupList.forEach(e=>{e.name==t&&(e.features.push(this.feature),i=e.color,s=e.icon)});let o=e.properties;if(o.group){o.group.map(t=>t.name).includes(t)||o.group.push({name:t,color:i,icon:s})}else o.group=[],o.group.push({name:t,color:i,icon:s});this.groupList.forEach(t=>{t.name==this.activeGroup&&(this.tempGroup=t.features)});for(let n of this.tagList)if(n.feature===this.tempGroup[0].id&&n.groupName===t){let e={type:n.type,groupName:t,label:n.label,options:n.options,feature:this.feature.id,extra:[]};this.formsService.saveTag(this.activeGroup,e,e.label)}this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(e.id),o),this.groupsService.addGroup(this.groupList),this.geoDataService.getFeatures(Number(e.project_id)),this.geoDataService.getFeatures(Number(e.project_id))}addGroups(t){this.tempGroup.forEach(e=>{this.selectGroupForm(t,e)}),this.groupsService.setUnselectAll(!0),this.scrollService.setScrollRestored(!0)}getGroupNameFromColor(t){this.groupList.forEach(e=>{e.color==t&&(this.currentGroup=e.name)})}};_t.ctorParameters=()=>[{type:H},{type:X},{type:tt},{type:Et.a},{type:et},{type:f.b},{type:J},{type:it}],n.a([Object(s.F)(),n.c("design:type",E)],_t.prototype,"feature",void 0),_t=n.a([Object(s.n)({selector:"app-image-box",template:n.b(i("ay+3")).default,styles:[n.b(i("if2z")).default]}),n.c("design:paramtypes",[H,X,tt,Et.a,et,f.b,J,it])],_t);let Nt=class{constructor(t){this.formsService=t,this.checked=!1,this.checkedOpt=this.formsService.getCheckedOpt(),this.colorArray=[],this.name=new Y.b("")}ngOnInit(){this.formGroup$=this.formsService.formGroup.subscribe(t=>{this.form=t}),this.generateColors()}generateColors(){let t=this.field.options.length,e=!1;t%2==1&&(e=!0,t--),t=(t-2)/2;let i=Math.floor(255/t);255===i&&(i=Math.floor(i/2)),this.colorArray.push("#00FF00");let s,o=0;for(let n=0;n<t;n++)o+=i,s=o.toString(16),this.colorArray.push(`#${s}FF00`);e&&this.colorArray.push("#FFFF00"),o=255;for(let n=0;n<t;n++)o-=i,s=o.toString(16),2!=s.length&&(s="0"+s),this.colorArray.push(`#FF${s}00`);this.colorArray.push("#FF0000")}ngOnDestroy(){this.formGroup$.unsubscribe()}};Nt.ctorParameters=()=>[{type:et}],n.a([Object(s.F)(),n.c("design:type",Object)],Nt.prototype,"field",void 0),Nt=n.a([Object(s.n)({selector:"app-form-generator",template:n.b(i("zusP")).default,styles:[n.b(i("ld75")).default]}),n.c("design:paramtypes",[et])],Nt);let At=class{constructor(){}ngOnInit(){}};At=n.a([Object(s.n)({selector:"app-side-bar",template:n.b(i("c6cR")).default,styles:[n.b(i("IElf")).default]}),n.c("design:paramtypes",[])],At);let Rt=class{constructor(t,e,i,s,o,n){this.formsService=t,this.groupsService=e,this.geoDataService=i,this.projectsService=s,this.dialog=o,this.featureService=n,this.showSubitem=!0,this.currentIcon="fa-house-damage",this.iconList=[{id:"fa-house-damage",unicode:"&#xf6f1; house-damage"},{id:"fa-car",unicode:"&#xf1b9; car"},{id:"fa-tree",unicode:"&#xf1bb; tree"},{id:"fa-school",unicode:"&#xf549; school"},{id:"fa-archway",unicode:"&#xf557; archway"},{id:"fa-building",unicode:"&#xf1ad; building"},{id:"fa-bus",unicode:"&#xf207; bus"},{id:"fa-church",unicode:"&#xf51d; church"},{id:"fa-helicopter",unicode:"&#xf533; helicopter"},{id:"fa-hospital-alt",unicode:"&#xf47d; hospital"},{id:"fa-hotel",unicode:"&#xf594; hotel"},{id:"fa-igloo",unicode:"&#xf7ae; igloo"},{id:"fa-motorcycle",unicode:"&#xf21c; motorcycle"},{id:"fa-place-of-worship",unicode:"&#xf67f; place-of-worship"},{id:"fa-plane",unicode:"&#xf072; plane"},{id:"fa-school",unicode:"&#xf549; school"},{id:"fa-rocket",unicode:"&#xf135; rocket"},{id:"fa-ship",unicode:"&#xf21a; ship"},{id:"fa-shopping-cart",unicode:"&#xf07a; shopping-cart"},{id:"fa-shuttle-van",unicode:"&#xf5b6; shuttle-van"},{id:"fa-monument",unicode:"&#xf5a6; monument"},{id:"fa-store",unicode:"&#xf54e; store"},{id:"fa-subway",unicode:"&#xf239; subway"},{id:"fa-taxi",unicode:"&#xf1ba; taxi"},{id:"fa-train",unicode:"&#xf238; train"},{id:"fa-truck",unicode:"&#xf0d1; truck"},{id:"fa-truck-pickup",unicode:"&#xf63c; truck-pickup"},{id:"fa-university",unicode:"&#xf19c; university"},{id:"fa-warehouse",unicode:"&#xf494; warehouse"},{id:"fa-bolt",unicode:"&#xf0e7; bolt"}]}ngOnInit(){this.groupsService.tempGroup.subscribe(t=>{this.tempGroup=t}),this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t}),this.groups$=this.groupsService.groups.subscribe(t=>{this.groupList=t}),this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t})}selectGroupForm(t){this.geoDataService.getFeatures(this.selectedProject.id),this.groupsService.setActiveGroup(t),0==this.groupList.filter(t=>t.name==this.activeGroup)[0].features.length?this.groupsService.setFeatureImagesExist(!1):this.groupsService.setFeatureImagesExist(!0),this.groupsService.setActiveFeatureNum(0),this.formsService.changeGroupForm(t)}openRenameOptionModal(t){this.dialog.open(t)}deleteGroup(t){let e=this.formsService.getTags();for(;;){const i=e.findIndex(e=>e.groupName===t);if(!(i>-1))break;e.splice(i,1)}this.groupList.forEach(e=>{e.name==t&&(this.tempGroup=e.features,this.groupList=this.groupList.filter(e=>e.name!=t))});for(let i of this.tempGroup){let s=i.properties;s.group=s.group.filter(e=>e.name!=t),s.tag=e,this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(i.id),s),this.groupsService.addGroup(this.groupList)}this.groupList.length<=0?(this.showSidebar=!1,this.groupsService.setShowSidebar(this.showSidebar)):this.groupsService.setActiveGroup(this.groupList[0].name)}openRenameModal(t,e){this.selectedGroup=e,this.dialog.open(t)}openIconSelection(t,e){this.selectedGroup=e,this.groupList.forEach(t=>{t.name==this.activeGroup&&(this.choice=t.icon)}),this.dialog.open(t)}saveIcon(t){this.groupList.forEach(e=>{e.name==this.activeGroup&&(e.icon=t,this.tempGroup=e.features)}),this.groupsService.addGroup(this.groupList);for(let e of this.tempGroup){e.properties;console.log(e.id),this.groupsService.setActiveGroup(this.activeGroup),this.formsService.saveStyles("default",Number(e.id))}}isChecked(t){return this.activeGroup==t?"checked":""}renameGroup(t){this.groupList.forEach(e=>{e.name==this.activeGroup&&(e.name=t,this.tempGroup=e.features),this.dialog.closeAll()}),this.groupsService.addGroup(this.groupList);for(let i of this.tempGroup){let s=i.properties;s.group.forEach(e=>{e.name==this.selectedGroup&&(e.name=t)});try{s.tag.forEach(e=>{e.groupName==this.selectedGroup&&(e.groupName=t)})}catch(e){}this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(i.id),s)}this.groupsService.setActiveGroup(t)}expandPanel(){this.showSubitem=!this.showSubitem,this.showSubitem}ngOnDestroy(){this.groups$.unsubscribe(),this.activeGroup$.unsubscribe()}};Rt.ctorParameters=()=>[{type:et},{type:X},{type:H},{type:tt},{type:f.b},{type:it}],Rt=n.a([Object(s.n)({selector:"app-select-group",template:n.b(i("s9wi")).default,styles:[n.b(i("I57P")).default]}),n.c("design:paramtypes",[et,X,H,tt,f.b,it])],Rt);let Mt=class{constructor(t,e,i,s){this.formsService=t,this.groupsService=e,this.geoDataService=i,this.projectsService=s,this.groupList=[],this.showSubitem=!0}ngOnInit(){this.projectsService.activeProject.subscribe(t=>{this.selectedProject=t}),this.groups$=this.groupsService.groups.subscribe(t=>{this.groupList=t}),this.activeFeatureNum$=this.groupsService.activeFeatureNum.subscribe(t=>{this.activeFeatureNum=t}),this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t})}getActiveFeatures(){return this.groupList.filter(t=>t.name===this.activeGroup)[0].features}jumpToImage(t){let e=0;this.groupList.forEach(i=>{i.name==this.activeGroup&&(e=i.features.indexOf(t))}),this.geoDataService.getFeatures(this.selectedProject.id),this.groupsService.setActiveFeatureNum(e)}isActiveFeature(t){let e=0;return this.groupList.forEach(i=>{i.name==this.activeGroup&&(e=i.features.indexOf(t))}),this.activeFeatureNum==e}deleteGroup(t){this.groupList.forEach(e=>{e.name==t&&(this.tempGroup=e.features,this.groupList=this.groupList.filter(e=>e.name!=t))});for(let e of this.tempGroup){let i=e.properties;i.group=i.group.filter(e=>e.name!=t),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(e.id),i),this.groupsService.addGroup(this.groupList)}this.groupList.length<=0?(this.showSidebar=!1,this.groupsService.setShowSidebar(this.showSidebar)):this.groupsService.setActiveGroup(this.groupList[0].name)}deleteAsset(t){this.groupList.forEach(e=>{e.name===this.activeGroup&&(this.tempGroup=e.features,1==e.features.length?this.deleteGroup(e.name):e.features=e.features.filter(e=>e.id!=t))});for(let e of this.tempGroup){let i=e.properties;e.id==t&&(i.group=i.group.filter(t=>t.name!=this.activeGroup)),this.geoDataService.updateFeatureProperty(this.selectedProject.id,Number(e.id),i),this.groupsService.addGroup(this.groupList)}}getAssetDisplay(t){if(t.assets[0].display_path)return/[^/]*$/.exec(t.assets[0].display_path)[0];return/[^/]*$/.exec(t.assets[0].path)[0].slice(0,15)+"..."}ngOnDestroy(){this.groups$.unsubscribe(),this.activeFeatureNum$.unsubscribe(),this.activeGroup$.unsubscribe()}expandPanel(){this.showSubitem=!this.showSubitem,this.showSubitem}};Mt.ctorParameters=()=>[{type:et},{type:X},{type:H},{type:tt}],Mt=n.a([Object(s.n)({selector:"app-select-image",template:n.b(i("033P")).default,styles:[n.b(i("T7o7")).default]}),n.c("design:paramtypes",[et,X,H,tt])],Mt);var Ut=i("hOhj"),$t=i("W5yJ"),zt=i("AaDx"),Vt=i("8P0U");let Bt=class{constructor(){}get isValid(){return this.form.controls[this.field.name].valid}get isDirty(){return this.form.controls[this.field.name].dirty}ngOnInit(){}};n.a([Object(s.F)(),n.c("design:type",Object)],Bt.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Object)],Bt.prototype,"form",void 0),Bt=n.a([Object(s.n)({selector:"app-form-fields",template:n.b(i("T+fY")).default}),n.c("design:paramtypes",[])],Bt);let Jt=class{constructor(t,e,i){this.formsService=t,this.groupsService=e,this.featureService=i,this.isChecked=!1,this.checkedOpt=this.formsService.getCheckedOpt()}ngOnInit(){if(this.activeFeatureId$=this.groupsService.activeFeatureId.subscribe(t=>{this.activeFeatureId=t,this.activeGroup$=this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t})}),0!=this.formsService.getCheckedOpt().length){let t;this.checkedOpt.forEach(e=>{null!=e&&(t=e.findIndex(t=>t.id===this.activeFeatureId&&t.option===this.field.label&&t.group===this.activeGroup&&t.label===this.form.label),t>-1&&(this.isChecked=!0))})}}ngOnDestroy(){this.activeFeatureId$.unsubscribe()}selected(t,e){t.target.checked?(console.log("Checked"),this.featureService.updateChecked(e,this.activeFeatureId,this.activeGroup,this.form.label,"create")):(console.log("Unchecked"),this.featureService.updateChecked(e,this.activeFeatureId,this.activeGroup,this.form.label,"delete"))}};Jt.ctorParameters=()=>[{type:et},{type:X},{type:it}],n.a([Object(s.F)(),n.c("design:type",Object)],Jt.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Y.c)],Jt.prototype,"form",void 0),Jt=n.a([Object(s.n)({selector:"app-form-checkbox",template:n.b(i("yXUO")).default}),n.c("design:paramtypes",[et,X,it])],Jt);let Ht=class{constructor(t,e,i){this.formsService=t,this.groupsService=e,this.featureService=i,this.field={}}ngOnInit(){let t;this.activeFeatureId$=this.groupsService.activeFeatureId.subscribe(t=>{this.activeFeatureId=t}),this.activeGroup$=this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.formsService.getSelectedRadio().forEach(e=>{null!=e&&(t=e.findIndex(t=>t.id===this.activeFeatureId&&2===t.compID&&t.groupName===this.activeGroup&&t.label===this.form.label),t>-1&&(this.chosenTag=e[t].option))})}updateCheckedTag(){this.featureService.updateExtra(this.chosenTag,2,this.activeFeatureId,this.activeGroup,this.form.label,"dropdown")}};Ht.ctorParameters=()=>[{type:et},{type:X},{type:it}],n.a([Object(s.F)(),n.c("design:type",Object)],Ht.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Y.c)],Ht.prototype,"form",void 0),Ht=n.a([Object(s.n)({selector:"app-form-dropdown",template:n.b(i("/WLi")).default}),n.c("design:paramtypes",[et,X,it])],Ht);let Wt=class{constructor(){this.field={}}get isValid(){return this.form.controls[this.field.name].valid}get isDirty(){return this.form.controls[this.field.name].dirty}ngOnChange(){console.log(this.field.value)}};n.a([Object(s.F)(),n.c("design:type",Object)],Wt.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Y.c)],Wt.prototype,"form",void 0),Wt=n.a([Object(s.n)({selector:"app-form-file",template:n.b(i("503e")).default,styles:[n.b(i("1NWJ")).default]}),n.c("design:paramtypes",[])],Wt);let Kt=class{constructor(t,e,i){this.formsService=t,this.groupsService=e,this.featureService=i,this.field={}}ngOnInit(){let t;this.activeFeatureId$=this.groupsService.activeFeatureId.subscribe(t=>{this.activeFeatureId=t}),this.activeGroup$=this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.formsService.getSelectedRadio().forEach(e=>{null!=e&&(t=e.findIndex(t=>t.id===this.activeFeatureId&&0==t.compID&&t.groupName===this.activeGroup&&t.label===this.form.label),t>-1&&(this.chosenTag=e[t].option))})}updateCheckedTag(){this.featureService.updateExtra(this.chosenTag,0,this.activeFeatureId,this.activeGroup,this.form.label,"radio")}};Kt.ctorParameters=()=>[{type:et},{type:X},{type:it}],n.a([Object(s.F)(),n.c("design:type",Object)],Kt.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Y.c)],Kt.prototype,"form",void 0),n.a([Object(s.F)(),n.c("design:type",String)],Kt.prototype,"label",void 0),Kt=n.a([Object(s.n)({selector:"app-form-radio",template:n.b(i("fIZ9")).default}),n.c("design:paramtypes",[et,X,it])],Kt);let Zt=class{constructor(t,e,i){this.formsService=t,this.groupsService=e,this.featureService=i,this.field={},this.notes="notes"}get isValid(){return this.form.controls[this.field.name].valid}get isDirty(){return this.form.controls[this.field.name].dirty}ngOnInit(){let t;this.activeFeatureId$=this.groupsService.activeFeatureId.subscribe(t=>{this.activeFeatureId=t}),this.activeGroup$=this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.formsService.getSelectedRadio().forEach(e=>{null!=e&&(t=e.findIndex(t=>t.id===this.activeFeatureId&&3===t.compID&&t.groupName===this.activeGroup&&t.label===this.form.label),t>-1&&(this.note=e[t].option))})}updateNotes(){this.featureService.updateExtra(this.note,3,this.activeFeatureId,this.activeGroup,this.form.label,"text")}};Zt.ctorParameters=()=>[{type:et},{type:X},{type:it}],n.a([Object(s.F)(),n.c("design:type",Object)],Zt.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Y.c)],Zt.prototype,"form",void 0),Zt=n.a([Object(s.n)({selector:"app-form-textbox",template:n.b(i("dagV")).default}),n.c("design:paramtypes",[et,X,it])],Zt);let qt=class{constructor(t,e,i){this.formsService=t,this.groupsService=e,this.featureService=i,this.field={},this.chosenColor="#ffffff"}ngOnInit(){let t;this.activeFeatureId$=this.groupsService.activeFeatureId.subscribe(t=>{this.activeFeatureId=t}),this.activeGroup$=this.activeGroup$=this.groupsService.activeGroup.subscribe(t=>{this.activeGroup=t}),this.formsService.getSelectedRadio().forEach(e=>{null!=e&&(t=e.findIndex(t=>t.id===this.activeFeatureId&&1===t.compID&&t.groupName===this.activeGroup&&t.label===this.form.label),t>-1&&(this.chosenTag=e[t].option)),this.chosenColor=this.color})}updateCheckedTag(){this.formsService.saveStyles(this.chosenColor,this.activeFeatureId),this.featureService.updateExtra(this.chosenTag,1,this.activeFeatureId,this.activeGroup,this.form.label,"color")}};qt.ctorParameters=()=>[{type:et},{type:X},{type:it}],n.a([Object(s.F)(),n.c("design:type",Object)],qt.prototype,"field",void 0),n.a([Object(s.F)(),n.c("design:type",Y.c)],qt.prototype,"form",void 0),n.a([Object(s.F)(),n.c("design:type",String)],qt.prototype,"color",void 0),n.a([Object(s.F)(),n.c("design:type",String)],qt.prototype,"label",void 0),qt=n.a([Object(s.n)({selector:"app-form-color",template:n.b(i("m/u+")).default,styles:[n.b(i("FN4D")).default]}),n.c("design:paramtypes",[et,X,it])],qt);var Xt=i("igqZ");let Yt=class{};Yt=n.a([Object(s.K)({declarations:[lt,mt,I,W,It,K,wt,Ct,_t,Nt,At,Rt,Mt,st,ot,Ot,Gt,Vt.a,jt,Bt,Jt,Ht,Wt,Kt,Zt,kt,qt],imports:[k.a.forRoot({rootUrl:"https://agave.designsafe-ci.org/"}),r.a,at,l.c,a.b,p.a,u.a,F.a,j.a.forRoot(),h.d.forRoot(),d.a,m.a,g.a,f.c,b.a,v.a,y.a,w.a,S.a,x.a,h.a.forRoot(),Y.j,Y.e,O.a,h.b.forRoot(),c.b,$t.a,Ut.b,zt.a,bt.b,Xt.a],providers:[M,{provide:l.a,multi:!0,useClass:Dt},{provide:l.a,multi:!0,useClass:Tt},{provide:c.a,useValue:N.baseHref}],bootstrap:[lt],entryComponents:[wt,jt,Ot,Gt,kt]})],Yt),N.production&&Object(s.sb)(),Object(o.a)().bootstrapModule(Yt).catch(t=>console.error(t))},zXfM:function(t,e,i){"use strict";i.r(e),e.default='<div class="tag-forms">\n  <div class="subitem-title" (click)="expandPanel()">\n\t<span>\n\t  Tag Images\n\t</span>\n\t<span>\n\t  <span style="cursor: pointer"\n\t\t\t(click)="createNewTag()"\n\t\t\tmatTooltip="Add New Tag"\n\t\t\tstyle="cursor: pointer; margin-right: 10px"\n\t\t\tmatTooltipPosition="above">\n\t\t<i class="fas fa-plus"></i>\n\t  </span>\n\t</span>\n  </div> \x3c!-- subitem-title --\x3e\n\n  <div *ngIf="showSubitem" class="subitem">\n\t  <div class="subitem-scroll">\n\t\t  <div *ngFor = "let tag of tagList">\n\t\t\t<div *ngIf = "tag.groupName == activeGroup">\n\t\t\t\t<div *ngIf = "tag.feature == activeFeatureId">\n\t\t\t<div class="form-item-container">  \n\t\t\t\t<div class="name-group"> {{tag.label}} ({{tag.type}})</div>\n\t\t\t\t\n\t\t\t\t<div class="button-group">\n\t\t\t\t\t<div (click)="deleteTag(tag)">\n\t\t\t\t\t\t<i class="fas fa-minus"\n\t\t\t\t\t\t   matTooltip="Delete"\n\t\t\t\t\t\t   matTooltipPosition="above"\n\t\t\t\t\t\t   style="cursor: pointer">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t  </div> \x3c!-- delete button --\x3e\n\t\t\t\t\t\n\t\t\t\t\t<div (click)="openRenameOptionModal(renameFormItemModal)">\n\t\t\t\t\t\t<i class="fas fa-edit"\n\t\t\t\t\t\t   matTooltip="Rename"\n\t\t\t\t\t\t   matTooltipPosition="above"\n\t\t\t\t\t\t   style="cursor: pointer">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\x3c!-- <div *ngIf="tag.type != \'text\'">\n\n\t\t\t\t\t\t<div (click)="openOptionToggle(tag.label)">\n\t\t\t\t\t\t  <i class="fas fa-ellipsis-h"\n\t\t\t\t\t\t\t style="cursor: pointer"\n\t\t\t\t\t\t\t matTooltip="More Options"\n\t\t\t\t\t\t\t matTooltipPosition="above">\n\t\t\t\t\t\t  </i>\n\t\t\t\t\t\t</div>\n\t  \n\t\t\t\t\t  </div> three dots --\x3e\n\n\t\t\t\t\t<ng-template #renameFormItemModal>\n\t\t\t\t\t\t<input matInput #formItemRename\n\t\t\t\t\t\t\t[(ngModel)]="newTagValue"\n\t\t\t\t\t\t\tvalue={{tag.label}}\n\t\t\t\t\t\t\tplaceholder="Rename Form Item"\n\t\t\t\t\t\t\t(keyup.enter)="renameTag(tag)">\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t  <button matDialogClose\n\t\t\t\t\t\t\t\t  mat-raised-button\n\t\t\t\t\t\t\t\t  color="primary" (click)="renameTag(tag.label)"\n\t\t\t\t\t\t\t\t  >Rename</button>\n\t\t\t\t\t\t  <button matDialogClose\n\t\t\t\t\t\t\t\t  mat-button>Cancel</button>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t  </ng-template> \x3c!-- rename modal --\x3e\n\n\t\t\t\t</div> \x3c!-- button group --\x3e\n\t\t\t</div> \x3c!-- form-item-container --\x3e\n\n\t\t\t<div *ngIf="tag.type != \'text\' && openOption[tag.label]" class="options-container">\n\t\t\t\t<div *ngFor="let opt of tag.options" class="list-group list-suboptions">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{{opt.label}}\n\t\t\t\t\t  </div>\n\n\t\t\t\t\t  <div class="button-group">\n\t\t\t\t\t\t<div (click)="formsService.deleteOpt(activeGroup, opt, tag)">\n\t\t\t\t\t\t\t<i class="fas fa-minus"\n\t\t\t\t\t\t\t   style="cursor: pointer"\n\t\t\t\t\t\t\t   matTooltip="Delete"\n\t\t\t\t\t\t\t   matTooltipPosition="below">\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t  </div>  \x3c!-- delete opt button --\x3e\n\n\t\t\t\t\t  <div (click)="openRenameOptionModal(renameDeeperOptionModal)">\n\t\t\t\t\t\t<i class="fas fa-edit"\n\t\t\t\t\t\t   matTooltip="Rename"\n\t\t\t\t\t\t   style="cursor: pointer"\n\t\t\t\t\t\t   matTooltipPosition="below">\n\t\t\t\t\t\t</i>\n\t\t\t\t\t  </div> \x3c!-- rename opt button --\x3e\n\n\t\t\t\t\t  <ng-template #renameDeeperOptionModal>\n\t\t\t\t\t\t<input matInput #optionDeeperRename\n\t\t\t\t\t\t[(ngModel)]="opt.label"\n\t\t\t\t\t\t\t   placeholder="Rename Option">\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t  <button matDialogClose\n\t\t\t\t\t\t\t\t  mat-raised-button\n\t\t\t\t\t\t\t\t  color="primary"\n\t\t\t\t\t\t\t\t  >Rename</button>\n\t\t\t\t\t\t  <button matDialogClose\n\t\t\t\t\t\t\t\t  mat-button>Cancel</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t  </ng-template> \x3c!-- rename opt modal --\x3e\n\n\n\t\t\t\t</div> \x3c!-- opt loop--\x3e\n\t\t\t  </div> \x3c!-- opt container--\x3e\n\t\t\t  \x3c!-- <app-form-generator [field]="tagList"></app-form-generator> --\x3e\n\t\t\t  <app-form-generator [field]="tag"></app-form-generator>\n\t\t\t\t</div>\n\t\t</div>\n\t\t\n\t</div>\n\t</div> \x3c!-- subitem scroll --\x3e\n  </div> \x3c!--subitem --\x3e\n\n  <ng-template #elseBlock>\n\tNo tag presets for this Group!\n  </ng-template>\n\n</div> \x3c!-- tag-forms --\x3e\n'},zusP:function(t,e,i){"use strict";i.r(e),e.default='\x3c!-- <label for=""> --\x3e\n\x3c!--   Name: --\x3e\n\x3c!--   <\\!-- {{field.label}} -\\-> --\x3e\n\x3c!--   <input name="" [formControl]="name"/> --\x3e\n\x3c!-- </label> --\x3e\n\n\x3c!-- <div [formGroup]="form"> --\x3e\n<div>\n  \x3c!-- <label [attr.for]="field.label">{{field.label}}</label> --\x3e\n\n  <div [ngSwitch]="field.type" class="form-controls">\n\t<ng-container *ngSwitchCase="\'text\'">\n\t  \t<app-form-textbox [field]="field.options" [form]="field"></app-form-textbox>\n\t</ng-container>\n\n\t<ng-container *ngSwitchCase="\'dropdown\'">\n\t  \t<app-form-dropdown [field]="field.options" [form]="field"></app-form-dropdown>\n\t</ng-container>\n\n\t<ng-container *ngSwitchCase="\'radio\'">\n\t  <div *ngFor="let opt of field.options" [id]="field.label" class="input-group">\t\n\t  \t<app-form-radio [field]="opt" [form]="field" label={{field.label}}></app-form-radio>\n\t  </div>\n\t</ng-container>\n\n\t<ng-container *ngSwitchCase="\'checkbox\'">\n\t  <div *ngFor="let opt of field.options" [id]="field.label" class="input-group">\n\t\t<app-form-checkbox [field]="opt" [form]="field"></app-form-checkbox>\n\t  </div>\n\t</ng-container>\n\n\t<ng-container *ngSwitchCase="\'color\'">\n\t\t<div *ngFor="let opt of field.options" [id]="field.label" class="input-group">\n\t\t\t<app-form-color [field]="opt" [form]="field" label={{field.label}} [color]="colorArray[field.options.indexOf(opt)]"></app-form-color>\n\t\t</div>\n\t</ng-container>\n\n  </div>\n\n  \x3c!-- <div class="errorMessage" *ngIf="!isValid"></div> --\x3e\n</div>\n\n\n\n\n\n\n\n\x3c!-- <form (ngSubmit)="onSubmit.emit(this.form.value)" [formGroup]="form" class="form-horizontal"> --\x3e\n\x3c!--   <div *ngFor="let field of formsService.activeFormList | async"> --\x3e\n\x3c!--   <\\!-- <div *ngFor="let field of fields"> -\\-> --\x3e\n\x3c!--\t<\\!-- <app-form-fields [field]="field" [form]="form"></app-form-fields> -\\-> --\x3e\n\x3c!--   </div> --\x3e\n\x3c!-- </form> --\x3e\n'}},[[0,0,5]]]);
//# sourceMappingURL=main-es2015.30e8e47ae964581e6e3a.js.map