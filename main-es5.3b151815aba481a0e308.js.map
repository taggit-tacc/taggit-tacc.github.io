{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/environments/environmentType.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","__decorate","decorators","target","key","desc","d","c","arguments","length","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__importDefault","mod","__esModule","NotFoundComponent","_classCallCheck","this","_createClass","value","tslib_es6","a","core","n","selector","template","EnvironmentType","Group","AssetFilters","bbox","assetType","Set","has","delete","add","Project","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","asset_type","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","C","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","console","log","file","form","FormData","append","files","system","path","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_this13","_this14","data","prom","tap","proj","put","getProjects","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","groupList","featureList","tempGroupList","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","done","group","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","color","icon","err","return","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","chosenTag","userTag","options","tagData","checkedOptions","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","updateFormItem","groupObject","filter","opt","option","formObj","finalArray","gName","tag","tLabel","index","findIndex","item","splice","ind","selection","componentId","change","notebook","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","_this28","formType","formName","formLabel","formValue","formRequired","event","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","myOpts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","addForm","saveTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","tagList","getTags","_this29","activeGroup$","activeFeatureId$","formGroup$","getRawValue","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this30","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this31","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","_this32","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","tmp","date","File","lastModified","valueOf","msg","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","_this34","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","init","browse","pth","currentDirectory","getFiles","_this35","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","checkIfSelectable","addSelectedFile","Array","from","close","R","modal_download_selector_component_ModalDownloadSelectorComponent","passbackData","fileExtension","_this36","downloadSelectForm","Name","Extension","_ref3","_this37","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","p","create","modal_share_project_component_ModalShareProjectComponent","_this38","projShareForm","activeProj","projectUsers","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","_this39","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","interval","_this40","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","selectedProject","getDataForProject","hazMapperLink","setActiveFeatureNum","timerSubscription","reloadFeatures","_this42","afterClosed","importFileFromTapis","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","featProp","updateFeatureProperty","Number","addTempGroup","setUnselectAll","setShowGroup","_this44","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","content","forExport","CSVHolder","JSONHolder","projID","element","coordinates","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","export","download","url","filename","navigator","userAgent","indexOf","style","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","status","reload","message","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this47","projectsExist","imagesExist","featureListScroll","slice","groupExist","_this48","setActiveFeatureId","_this49","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this50","featurePath","_this51","v","geoData","deleteFeature","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","_this55","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","addCheckedOpt","deleteCheckedOpt","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","_this56","groups$","what","_this58","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_step6","_iterator6","_iteratorNormalCompletion6","_loop","_step7","_iterator7","_iteratorNormalCompletion7","_loop2","SelectImageComponent","_this61","activeFeatureNum$","_this62","asset","_this65","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","assetId","deleteGroup","getActiveFeatures","FormFieldsComponent","controls","valid","FormCheckBoxComponent","isChecked","_this67","FormDropDownComponent","getSelectedRadio","updateSelectedRadio","FormFileComponent","FormRadioComponent","FormTextBoxComponent","note","getNotes","updateNotes","FormColorComponent","chosenColor","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"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","file":"main-es5.3b151815aba481a0e308.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select(file)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  -webkit-transition: width 0.1s ease;\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  height: 100vh;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: -webkit-inline-box;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  -webkit-transition: all 0.4s ease;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div>\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect (click)=\\\"deleteFromGroup(color)\\\" class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea [class.is-invalid]=\\\"isDirty && !isValid\\\" [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"field.placeholder\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\n.card-buttons {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-transition: opacity 0.3s ease;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n          flex-grow: 1;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- <div *ngFor = \\\"let icon of groupIcon\\\">  -->\\r\\n\\t\\t\\t\\t<!-- <div *ngIf = \\\"icon.groupName == activeGroup\\\"> -->\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<!-- <option>------</option> -->\\r\\n\\t\\t\\t<option *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-house-damage\\\">&#xf6f1; house-damage </option>\\r\\n\\t\\t\\t<option value=\\\"fa-car\\\">&#xf1b9; car</option> -->\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-tree\\\">&#xf1bb; tree</option> -->\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<!--<button mat-menu-item (click)=saveFile(0,1)>Export to Design Safe?</button>-->\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId);\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    console.log(\"HAHAHA NOPE\")\r\n  });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    console.log(environment.apiUrl )\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.pipe(\r\n      tap(proj => {\r\n      //below code from here to next comment does nothing\r\n      // const p = new Project();\r\n      // p.name = 'test';\r\n      // p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n\r\n    }, error => {\r\n      console.log(\"HAHAHA NOPE\")\r\n    }),);\r\n    console.log(this._activeProject)\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared. \r\n  // Need to find a way to unsubscribe a project for one person without affecting the others.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  private chosenTag: Array<string> = [\"\",\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  private notebook: string; //Var for storing note tags\r\n\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService) {}\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);/*console.log(\"AYA\"); console.log(this._forms); console.log(current)*/});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: []};\r\n  tagData = []\r\n  checkedOptions = []\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tLabel);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.tagData[index].label = tag.label;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tagData.push(tag);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\ngetTags(): tags[]{\r\n\treturn this.tagData;\r\n}\r\n\r\ndeleteTag(gName: string, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n    if (index > -1) {\r\n      // delete this.exampleNote[index];\r\n      this.tagData.splice(index, 1);\r\n    }\r\n}\r\n\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.tagData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object): void {\r\n\tthis.checkedOptions.push(opt)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ndeleteCheckedOpt(opt:object): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item === opt)\r\n\tthis.checkedOptions.splice(index,1)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ngetCheckedOpt(): object[]{\r\n\treturn this.checkedOptions;\r\n}\r\n// renameTagOpt(gName:string, opt:object, tag: tags): void {\r\n// \tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tag.label);\r\n// \tif(index >-1) {\r\n// \t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n// \t\tif (ind > -1){\r\n// \t\t\tconsole.log(opt)\r\n// \t\t\tconsole.log(this.tagData[index].options[ind]);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number){ this.chosenTag[componentId] = selection; }\r\n\r\ngetSelectedRadio(componentId: number):string { return this.chosenTag[componentId]; }\r\n\r\n//Notes tag functions\r\nupdateNotes(change){this.notebook = change}\r\n\r\ngetNotes(){ return this.notebook }\r\n}\r\n\r\n\r\n\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\t  let formItem: tags = {\r\n\t\ttype: this.formType,\r\n\t\tgroupName: this.formName,\r\n\t\tlabel: this.formLabel,\r\n\t\t// value: this.formValue,\r\n\t\t// required: this.formRequired,\r\n\t\toptions: []\r\n\t  }\r\n\r\n\t  this.openOption[this.formLabel] = false;\r\n\r\n\t  if (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\tlet myOpts = [];\r\n\t\tfor (const opt of this.formOptions) {\r\n\t\t  myOpts.push({\r\n\t\t\tkey: opt[0],\r\n\t\t\tlabel: opt,\r\n\t\t  })\r\n\t\t}\r\n\r\n\t\tformItem.options = this.formOptions;\r\n\t  }\r\n\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\t  this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t// }\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\t// console.log(this.payload);\r\n\t// this.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n\t// console.log(this.form)\r\n\t// this.formsService.saveTag(this.activeGroup, this.form.value, this.payload)\r\n\tconsole.log(this.tagList)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string) {\r\n    return this.tapis.filesList({systemId: system, filePath: path});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(file: RemoteFile) {\r\n\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t  this.addSelectedFile(file);\r\n\t}\r\n\telse{\r\n\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  addSelectedFile(file: RemoteFile) {\r\n\tif (this.selectedFiles.has(file.path)) {\r\n\t  this.selectedFiles.delete(file.path);\r\n\t} else {\r\n\t  this.selectedFiles.set(file.path, file);\r\n\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6000; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\t// this.timerSubscription = this.timer.subscribe( () => {\r\n\t//   this.reloadFeatures();\r\n\t// });\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t});\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\tconsole.log(\"GOT HERE- PLS\")\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t\tconsole.log(\"loading should work?\")\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\tconsole.log(\"GOT HERE- NO PROJ FOUND\")\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t\tconsole.log(\"This didn't work\")\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false;\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t}\r\n\tthis.status = !this.status;\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\t  const geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n\r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  selected(e:any, option:object){\r\n    if(e){\r\n      console.log(\"Checked\")\r\n      console.log(option)\r\n      this.formsService.addCheckedOpt(option);\r\n      // console.log(this.checkedOpt)\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option);\r\n      // console.log(this.checkedOpt)\r\n    }\r\n  }\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t//   if (fc) {\r\n\t// \tthis.featureList = fc.features;\r\n\t//   }\r\n\t// });\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\t  console.log(this.tempGroup)\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tconsole.log(this.groupList)\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\tthis.dialog.open(template);\r\n\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: this.groupList[index].name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t}\r\n\r\n\r\n\t//   this.currentIcon = icon;\r\n\t//   this.groupList.forEach(e => {\r\n\t// \tif (e.name == this.selectedGroup) {\r\n\t// \t  e.icon = icon;\r\n\t// \t}\r\n\t//   });\r\n\t//   this.groupsService.addGroup(this.groupList);\r\n\t//   for (let feat of this.featureList) {\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tlet groupProp = this.tempGroup\r\n\t// \tconsole.log(featProp)\r\n\t// \tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: featProp.name,\r\n\t// \t\t  color: featProp.color,\r\n\t// \t\t  icon: icon\r\n\t// \t\t});\r\n\t// \t  }\r\n\t// \tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t// \tthis.groupsService.setActiveGroup(this.selectedGroup);\r\n\t// }\r\n\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: this.groupList[index].icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n\t}\r\n\t// console.log(this.selectedProject.id)\r\n\t// console.log(this.tempGroup[0])\r\n\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures().properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures().id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n\r\n    console.log(this.field)\r\n    console.log(this.form)\r\n\r\n  \r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n      console.log(\"GOT HERE\")\r\n      const index = this.formsService.getCheckedOpt().findIndex(item => item === this.field);\r\n      if (index > -1){\r\n        this.isChecked = true\r\n      }\r\n    }\r\n\r\n    console.log(\"GOT HERE\")\r\n  }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.formsService.addCheckedOpt(option);\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.chosenTag = this.formsService.getSelectedRadio(2)\r\n    console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ console.log(this.chosenTag); this.formsService.updateSelectedRadio(this.chosenTag, 2);}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  public chosenTag: string;\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n    this.chosenTag = this.formsService.getSelectedRadio(0)\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 0);}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n    this.note = this.formsService.getNotes()\r\n  }\r\n\r\n  updateNotes(){ this.formsService.updateNotes(this.note); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n    this.chosenTag = this.formsService.getSelectedRadio(1)\r\n    this.chosenColor = this.color\r\n  }\r\n\r\n  updateCheckedTag(){ console.log(this.chosenColor); this.formsService.updateSelectedRadio(this.chosenTag, 1); }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteTag(activeGroup, tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div> <!-- rename button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> <!-- three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"tag.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <!-- (click)=\\\"formsService.saveTag(activeGroup, tag, tag.label)\\\" -->\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}