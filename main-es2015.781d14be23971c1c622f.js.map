{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environmentType.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NotFoundComponent","[object Object]","tslib_es6","a","Object","core","n","selector","template","b","Group","AssetFilters","this","bbox","assetType","Set","has","delete","add","Project","AuthToken","token","expires","Date","expires_in","getTime","Feature","f","geometry","properties","type","assets","styles","project_id","length","asset_type","EnvironmentType","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","fesm2015_router","C","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","console","log","file","form","FormData","append","files","system","path","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","overlays","activeOverlay","ov","mapMouseLocation","loc","basemap","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","c","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","value","data","prom","proj","put","getProjects","tap","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","_itemsSelected","itemsSelected","groupList","featureList","tempGroupList","group","color","icon","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","tagData","checkedOptions","chosenTag","option","notebook","radioOptions","selectedProject","selectedFeatureID","selectedFeature","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","undefined","updateFormItem","selectedColor","style","currentID","checkDefault","faIcon","updateFeatureProperty","groupObject","filter","opt","formObj","finalArray","gName","tag","tLabel","index","findIndex","item","splice","ind","key","selection","componentId","compId","rOption","change","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","groups$","formType","formName","formLabel","formValue","formRequired","event","target","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","myOpts","addForm","saveTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","tagList","getTags","activeGroup$","activeFeatureId$","formGroup$","getRawValue","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","marker","featureType","ico","leaflet_src","divIcon","className","html","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","skip","addRemoveOverlay","turf_min","fitBounds","removeLayer","overlay","imageOverlay","set","getBounds","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","d","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","offset","limit","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","fileType","tmp","date","File","lastModified","valueOf","msg","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","ModalFileBrowserComponent_1","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","list","combineLatest","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","init","browse","pth","currentDirectory","getFiles","hasMoreFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","checkIfSelectable","addSelectedFile","Array","from","close","R","modal_download_selector_component_ModalDownloadSelectorComponent","ModalDownloadSelectorComponent_1","passbackData","fileExtension","downloadSelectForm","Name","Extension","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","p","create","modal_share_project_component_ModalShareProjectComponent","projShareForm","activeProj","projectUsers","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","interval","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","setUnselectAll","setItemsSelected","timerSubscription","reloadFeatures","setLiveRefresh","afterClosed","importFileFromTapis","startRefreshTimer","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","featProp","Number","addTempGroup","setShowGroup","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","i","floor","isJSON","forExport","content","CSVHolder","JSONHolder","projID","element","coordinates","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","export","download","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","err","status","reload","message","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","projectsExist","imagesExist","featureListScroll","slice","groupExist","setActiveFeatureId","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","featurePath","v","geoData","deleteFeature","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","what","saveStyles","SelectImageComponent","activeFeatureNum$","asset","assetId","deleteGroup","getActiveFeatures","FormFieldsComponent","isValid","controls","valid","isDirty","FormCheckBoxComponent","isChecked","addCheckedOpt","deleteCheckedOpt","FormDropDownComponent","getSelectedRadio","updateSelectedRadio","FormFileComponent","FormRadioComponent","FormTextBoxComponent","notes","getNotes","note","updateNotes","FormColorComponent","chosenColor","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"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7nB,YAAoB4S,EACTpD,EACA3E,EACAgC,EACAgG,GAJSlS,KAAAiS,aAAAA,EACTjS,KAAA6O,cAAAA,EACA7O,KAAAkK,eAAAA,EACAlK,KAAAkM,gBAAAA,EACAlM,KAAAkS,OAAAA,EArGXlS,KAAA8N,YAA0B,GAY1B9N,KAAAwS,aAAuB,EAEvBxS,KAAAmnB,YAAsB,kBAItBnnB,KAAAonB,SAAuB,CAAC,CAACjoB,GAAK,kBACzBkoB,QAAW,yBACX,CAACloB,GAAK,SACNkoB,QAAW,gBACX,CAACloB,GAAK,UACNkoB,QAAW,iBAEX,CAACloB,GAAK,YACNkoB,QAAW,mBACX,CAACloB,GAAK,aACNkoB,QAAW,oBACX,CAACloB,GAAK,cACNkoB,QAAW,qBACX,CAACloB,GAAK,SACNkoB,QAAW,gBACX,CAACloB,GAAK,YACNkoB,QAAW,mBAEX,CAACloB,GAAK,gBACNkoB,QAAW,uBACX,CAACloB,GAAK,kBACNkoB,QAAW,qBACX,CAACloB,GAAK,WACNkoB,QAAW,kBACX,CAACloB,GAAK,WACNkoB,QAAW,kBACX,CAACloB,GAAK,gBACNkoB,QAAW,uBACX,CAACloB,GAAK,sBACNkoB,QAAW,6BACX,CAACloB,GAAK,WACNkoB,QAAW,kBACX,CAACloB,GAAK,YACNkoB,QAAW,mBAGX,CAACloB,GAAK,YACNkoB,QAAW,mBACX,CAACloB,GAAK,UACNkoB,QAAW,iBACX,CAACloB,GAAK,mBACNkoB,QAAW,0BACX,CAACloB,GAAK,iBACNkoB,QAAW,wBACX,CAACloB,GAAK,cACNkoB,QAAW,qBACX,CAACloB,GAAK,WACNkoB,QAAW,kBAEX,CAACloB,GAAK,YACNkoB,QAAW,mBACX,CAACloB,GAAK,UACNkoB,QAAW,iBACX,CAACloB,GAAK,WACNkoB,QAAW,kBACX,CAACloB,GAAK,WACNkoB,QAAW,kBACX,CAACloB,GAAK,kBACNkoB,QAAW,yBACX,CAACloB,GAAK,gBACNkoB,QAAW,uBACX,CAACloB,GAAK,eACNkoB,QAAW,sBACX,CAACloB,GAAK,UACNkoB,QAAW,kB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","file":"main-es2015.781d14be23971c1c622f.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select(file)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\" (keyup.enter)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: flex;\\n  height: 100vh;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div *ngIf=\\\"tempGroup.length === 1\\\">\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div *ngIf=\\\"tempGroup.length > 1\\\">\\r\\n\\t\\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\" (click)=\\\"deleteFromGroup(color)\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect  class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea  [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.card-buttons {\\n  align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  transition: 0.3s ease;\\n  align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: flex;\\n  justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- <div *ngFor = \\\"let icon of groupIcon\\\">  -->\\r\\n\\t\\t\\t\\t<!-- <div *ngIf = \\\"icon.groupName == activeGroup\\\"> -->\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<!-- <option>------</option> -->\\r\\n\\t\\t\\t<option *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-house-damage\\\">&#xf6f1; house-damage </option>\\r\\n\\t\\t\\t<option value=\\\"fa-car\\\">&#xf1b9; car</option> -->\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-tree\\\">&#xf1bb; tree</option> -->\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\t\\r\\n\\t<button mat-raised-button class=\\\"button-spacing\\\" [disabled]=\\\"!itemsSelected\\\" (click)=\\\"clearAll()\\\">Clear Selected</button>\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId);\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    console.log(\"HAHAHA NOPE\")\r\n  });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      //below code from here to next comment does nothing\r\n      // const p = new Project();\r\n      // p.name = 'test';\r\n      // p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    console.log(this._activeProject)\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared. \r\n  // Need to find a way to unsubscribe a project for one person without affecting the others.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  private _itemsSelected: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public itemsSelected: Observable<boolean> = this._itemsSelected.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n\tthis._itemsSelected.next(!select);\r\n  }\r\n\r\n  setItemsSelected(select: boolean): void {\r\n\tthis._itemsSelected.next(select)\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProjectsService } from './projects.service';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  \r\n\r\n  private activeGroup\r\n  private groupList\r\n  private featureList\r\n  private selectedProject\r\n  private selectedFeatureID\r\n  private selectedFeature\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService) {\r\n\r\n\t\t\t\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t\t\t\t\tthis.activeGroup = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.groups.subscribe((next) => {\r\n\t\t\t\t\tthis.groupList = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\t\t\t\tthis.selectedProject = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.activeFeatureId.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeatureID = next\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.groupsService.activeFeature.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeature = next\r\n\t\t\t\t})\r\n\t\t\t  }\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);/*console.log(\"AYA\"); console.log(this._forms); console.log(current)*/});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  checkDefault(selectedColor:string){\r\n\tif(selectedColor === \"default\") {\r\n\t\ttry {\r\n\t\t\tselectedColor = this.selectedFeature.properties.style.color\r\n\t\t} catch (error) {\r\n\t\t\tselectedColor = \"#00C8FF\"\r\n\t\t}\r\n\t}\r\n\treturn selectedColor\r\n  }\r\n\r\n  //Inputs:\r\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\r\n  //This method accesses group services to retrive the current group's icon as well\r\n  saveStyles(selectedColor:string, currentID:number){\r\n\tlet icon:string\r\n\tlet payload\r\n\r\n\t//A check to see if the color isn't supposed to be changed\r\n\tselectedColor = this.checkDefault(selectedColor)\r\n\r\n\t//Cycles through each group until it finds one that matches the active group\r\n\tthis.groupList.forEach(group => {\r\n\t\tif ((group.name === this.activeGroup)) {\r\n\t\t\ticon = group.icon\r\n\r\n\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\tlet tempGroup = [{\r\n\t\t\t\tname: group.name,\r\n\t\t\t\tcolor: group.color,\r\n\t\t\t\ticon: group.icon\r\n\t\t\t}]\r\n\t\t\t\r\n\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\tpayload = {\r\n\t\t\t\tgroup: tempGroup,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\tcolor: selectedColor\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t//Finally, sends the payload and projectID to GeoAPI to update the feature\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, currentID ,payload)\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\"};\r\n  tagData = []\r\n  checkedOptions = []\r\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  notebook = []; //Var for storing note tags\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.tagData[index].label = tag.label;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tagData.push(tag);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\ngetTags(): tags[]{\r\n\treturn this.tagData;\r\n}\r\n\r\ndeleteTag(gName: string, tLabel: string): void{\r\n    for (let tag in this.tagData){\r\n\t\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n\t\t// if(tag['groupName'] === gName && tag['label'] === tLabel)\r\n\t\tconsole.log(tag)\r\n\t\tif (index > -1) {\r\n\t\t// delete this.exampleNote[index];\r\n\t\tthis.tagData.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n\t\t// if(tag['groupName'] === gName && tag['label'] === tLabel)\r\n\t\tif (index > -1) {\r\n\t\t// delete this.exampleNote[index];\r\n\t\tthis.tagData.splice(index, 1);\r\n\t\t}\r\n}\r\n\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.tagData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object, id: number): void {\r\n\tlet option = { key: opt['key'], label: opt['label'], id: id }\r\n\tthis.checkedOptions.push(option)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ndeleteCheckedOpt(opt:object, id:number): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id)\r\n\tthis.checkedOptions.splice(index,1)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ngetCheckedOpt(): any[]{\r\n\treturn this.checkedOptions;\r\n}\r\n// renameTagOpt(gName:string, opt:object, tag: tags): void {\r\n// \tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tag.label);\r\n// \tif(index >-1) {\r\n// \t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n// \t\tif (ind > -1){\r\n// \t\t\tconsole.log(opt)\r\n// \t\t\tconsole.log(this.tagData[index].options[ind]);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nradioOptions = []\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number, feature: number){ \r\n\tconst index = this.radioOptions.findIndex(item => item['id'] === feature && item['compId'] === componentId);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.radioOptions[index]['option'] = selection;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\tlet rOption = {option: selection, id: feature, compId: componentId} \r\n\t\tthis.radioOptions.push(rOption);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n\t// this.chosenTag[componentId] = {option: selection, id:id}; \r\n}\r\n\r\ngetSelectedRadio(): any[] { return this.radioOptions; }\r\n\r\n//Notes tag functions\r\nupdateNotes(change, feature: number){\r\n\tconst index = this.radioOptions.findIndex(item => item['id'] === feature);\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.notebook[index]['option'] = change\r\n\t}\r\n\telse {\r\n\t\tlet rOption = {option: change, id: feature} \r\n\t\tthis.notebook.push(rOption);\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\n\r\ngetNotes(): any[]{ return this.notebook }\r\n}\r\n\r\n\r\n\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>,\r\n\tfeature: string | number\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature } from 'src/app/models/models';\r\nimport { feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n  groupList: Array<any>;\r\n  groups$: Subscription;\r\n  tempGroup: Array<Feature>;\r\n\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t  });\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t\t  \r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: this.formType,\r\n\t\t\t\tgroupName: this.formName,\r\n\t\t\t\tlabel: this.formLabel,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: [],\r\n\t\t\t\tfeature: feat.id\r\n\t\t\t}\r\n\t\t\tthis.openOption[this.formLabel] = false;\r\n\r\n\t\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\t\t\tlet myOpts = [];\r\n\t\t\t\tfor (const opt of this.formOptions) {\r\n\t\t\t\t  myOpts.push({\r\n\t\t\t\t\tkey: opt[0],\r\n\t\t\t\t\tlabel: opt,\r\n\t\t\t\t\t// image:\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tformItem.options = this.formOptions;\r\n\t\t\t  }\r\n\t\t\t  console.log(formItem)\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\t  this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t}\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t// }\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\tconsole.log(this.tagList)\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\t// console.log(this.payload);\r\n\t// this.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n\t// console.log(this.form)\r\n\t// this.formsService.saveTag(this.activeGroup, this.form.value, this.payload)\r\n\tconsole.log(this.tagList)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\n//import { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string, offset: number, limit: number) {\r\n    return this.tapis.filesList({systemId: system, filePath: path, offset, limit});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  private offset:number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalFileBrowserComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalFileBrowserComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(file: RemoteFile) {\r\n\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t  this.addSelectedFile(file);\r\n\t}\r\n\telse{\r\n\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  addSelectedFile(file: RemoteFile) {\r\n\tif (this.selectedFiles.has(file.path)) {\r\n\t  this.selectedFiles.delete(file.path);\r\n\t} else {\r\n\t  this.selectedFiles.set(file.path, file);\r\n\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n\t\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n  private offset:number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalDownloadSelectorComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalDownloadSelectorComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n  itemsSelected:boolean = false;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.itemsSelected.subscribe((next) => {\r\n\t\tthis.itemsSelected = next;\r\n\t  })\r\n\r\n\t  //this.setLiveRefresh(true)\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\t// this.timerSubscription = this.timer.subscribe( () => {\r\n\t//   this.reloadFeatures();\r\n\t// });\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  clearAll(){\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.groupsService.setItemsSelected(false);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  //Similar to setLiveRefresh, but it runs the time out once and then unsubscribes from the timer\r\n  startRefreshTimer(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); this.setLiveRefresh(false)}) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files); this.startRefreshTimer(true)}\r\n\t});\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\t//console.log(\"GOT HERE- PLS\")\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t\t//console.log(\"loading should work?\")\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\t//console.log(\"GOT HERE- NO PROJ FOUND\")\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\r\n\t//I think doing a more natural refresh in here will cause a dynamic reload\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t\t//console.log(\"This didn't work\")\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormsService, tags } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false; //Controls the whether or not an image box is selected or not\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private formsService: FormsService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t  this.tempGroup = []\r\n\t}\r\n\tthis.status = !this.status;\r\n\tif(this.status) {\r\n\t\tthis.groupsService.setItemsSelected(this.status)\r\n\t}\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\t  const geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\t  console.log(this.feature)\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\tconsole.log(this.tagList)\r\n\t\r\n\tfor (let tag of this.tagList){\r\n\t\tif (tag.feature === this.tempGroup[0].id && tag.groupName === name){\r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: tag.type,\r\n\t\t\t\tgroupName: name,\r\n\t\t\t\tlabel: tag.label,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: tag.options,\r\n\t\t\t\tfeature: this.feature.id\r\n\t\t\t}\r\n\t\t\tthis.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(name)\r\n\tconsole.log(featProp)\r\n\tconsole.log(this.tempGroup[0].id)\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n \r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t//   if (fc) {\r\n\t// \tthis.featureList = fc.features;\r\n\t//   }\r\n\t// });\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\t  console.log(this.tempGroup)\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tconsole.log(this.groupList)\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\tthis.dialog.open(template);\r\n\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tlet index = 0\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t console.log(feat.id)/*\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tindex = this.groupList.findIndex(item => item.features[index].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: this.groupList[index].name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );*/\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t\tthis.formsService.saveStyles(\"default\", Number(feat.id))\r\n\t}\r\n\r\n\r\n\t//   this.currentIcon = icon;\r\n\t//   this.groupList.forEach(e => {\r\n\t// \tif (e.name == this.selectedGroup) {\r\n\t// \t  e.icon = icon;\r\n\t// \t}\r\n\t//   });\r\n\t//   this.groupsService.addGroup(this.groupList);\r\n\t//   for (let feat of this.featureList) {\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tlet groupProp = this.tempGroup\r\n\t// \tconsole.log(featProp)\r\n\t// \tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: featProp.name,\r\n\t// \t\t  color: featProp.color,\r\n\t// \t\t  icon: icon\r\n\t// \t\t});\r\n\t// \t  }\r\n\t// \tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t// \tthis.groupsService.setActiveGroup(this.selectedGroup);\r\n\t// }\r\n\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: this.groupList[index].icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n\t}\r\n\t// console.log(this.selectedProject.id)\r\n\t// console.log(this.tempGroup[0])\r\n\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures();\r\n\tfeatProp.group = featProp.filter(e => e.properties.group.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures()[0].id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n    // console.log(this.field)\r\n    // console.log(this.form)\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n      const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\r\n      if (index > -1){\r\n        this.isChecked = true\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeFeatureId$.unsubscribe();\r\n    }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.formsService.addCheckedOpt(option, this.activeFeatureId);\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option, this.activeFeatureId);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n    \r\n    console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ console.log(this.chosenTag); this.formsService.updateSelectedRadio(this.chosenTag, 2, this.activeFeatureId);}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  public chosenTag: string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    console.log(this.formsService.getSelectedRadio() )\r\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\r\n    console.log(index)\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n  // }\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 0, this.activeFeatureId);}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n  notes:string = \"notes\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\r\n    if (index > -1){\r\n      this.note = this.formsService.getNotes()[index]['option']\r\n    }\r\n  }\r\n\r\n  updateNotes(){ this.formsService.updateNotes(this.note, this.activeFeatureId); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 1);\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n    this.chosenColor = this.color  \r\n  }\r\n\r\n  updateCheckedTag(){ \r\n    this.formsService.saveStyles(this.chosenColor, this.activeFeatureId)\r\n    this.formsService.updateSelectedRadio(this.chosenTag, 1, this.activeFeatureId); }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteTag(activeGroup, tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div> <!-- rename button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> <!-- three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"tag.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <!-- (click)=\\\"formsService.saveTag(activeGroup, tag, tag.label)\\\" -->\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}