{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/environments/environmentType.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/scroll.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/services/feature.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NotFoundComponent","_classCallCheck","this","_createClass","key","value","tslib_es6","a","Object","core","n","selector","template","EnvironmentType","Group","AssetFilters","bbox","assetType","Set","has","add","Project","ProjectRequest","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","length","asset_type","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","C","providedIn","notifications_service_NotificationsService","toastr","authService","TIMEOUT","_notifications","notifications","isLoggedIn","interval","getRecent","_this3","baseUrl","now","toISOString","notes","forEach","note","status","showSuccessToast","message","showErrorToast","success","error","ngx_toastr","ScrollService","scrollRestored","scrollPosition","change","document","documentElement","scrollTop","scroll","top","geo_data_service_GeoDataService","notificationsService","scrollService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","_this4","query","arguments","undefined","restoreScroll","qstring","querystring","toJson","fc","map","feat","setScrollRestored","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","featureId","groupData","pc","console","log","file","form","FormData","append","files","tmp","system","path","fileList","showImportErrorToast","remoteFile","system_id","response","importImage","downloadLink","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","bsModalService","ngx_foundation","c","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","groups_service_GroupsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","_itemsSelected","itemsSelected","groupList","featureList","tempGroupList","group","_step2","_iterator2","_createForOfIteratorHelper","s","done","color","icon","findIndex","item","err","_iterator","_step","_loop","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_deletingProjects","deletingProjects","_this17","_this18","myProjs","p","find","dp","_this19","updateProjectsList","data","prom","proj","setActiveProject","put","project","assign","deleting","filter","getProjects","deletingFailed","tap","users","uname","getProjectUsers","forms_service_FormsService","groupsService","projectsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","extra","tagData","checkedOptions","chosenTag","option","notebook","tempData","newTag","optData","newOpt","selectedProject","selectedFeatureID","selectedFeature","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","updateFormItem","selectedColor","currentID","style","checkDefault","faIcon","updateFeatureProperty","updateFeatureStyle","groupObject","opt","formObj","finalArray","gName","tag","tLabel","index","_this35","_step3","_iterator3","splice","ind","choice","tGroup","_iterator4","_step4","Number","_iterator5","_step5","_this38","_step6","_iterator6","selection","componentId","_iterator7","_step7","compId","rOption","_this40","_step8","_iterator8","componentID","_iterator9","_step9","compID","feature_service_FeatureService","formsService","_tags","tags$","featureCollection","tagList","getTags","featListfeat","deleteFeature","delFeats","featListFeature","featProp","saveFeature","customList","saveFeatures","tempTags","listTag","saveTags","newName","oldName","listFeature","delTag","nOption","check","TagGeneratorComponent","dialog","featureService","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","newGroup","_this47","groups$","formType","formName","formLabel","formValue","formRequired","event","target","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","_step10","myOpts","_iterator10","createTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","newTagValue","_this48","activeGroup$","activeFeatureId$","formGroup$","tags","_step11","_iterator11","deleteTag","renameTag","closeAll","getRawValue","unsubscribe","Activate","authSvc","state","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this49","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this50","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","d","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","_systems","systems","_this51","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","offset","limit","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","date","File","lastModified","valueOf","msg","sysStr","lastSystem","fileStr","lastFile","noPreviousSelections","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","_ModalFileBrowserComponent_","ModalFileBrowserComponent_1","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","retrievalError","selectedFiles","onClose","Subject","_this53","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","currentDirectory","init","browse","pth","selectedPath","getFiles","_this54","hasMoreFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","shiftKey","selectFilesShiftClick","checkIfSelectable","addSelectedFile","selectShift","firstFileIndex","saveState","Array","from","close","_step12","count","_iterator12","clear","addRangeFiles","lastFileIndex","again","maxIndex","max","i","min","R","modal_download_selector_component_ModalDownloadSelectorComponent","_ModalDownloadSelectorComponent_","ModalDownloadSelectorComponent_1","passbackData","fileExtension","_this55","downloadSelectForm","Name","Extension","_ref3","_this56","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","projRqst","create","modal_share_project_component_ModalShareProjectComponent","_this57","projShareForm","activeProj","projectUsers","onlyOne","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","_this58","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","foundFilePaths","_this59","getState","setGroupProperties","hasSuccessNotification","some","hasFailureNotification","substring","uploadNewFeature","createBlankFeature","lastProj","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","setUnselectAll","setItemsSelected","timerSubscription","reloadFeatures","setLiveRefresh","_this62","afterClosed","importFileFromTapis","coordinates","saveFile","_this64","height","width","afterAllClosed","openSidebar","setActiveGroup","myRandColor","getRandomColor","addGroup","_step13","_iterator13","addTempGroup","setShowGroup","_this66","setScrollPosition","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","content","forExport","CSVHolder","JSONHolder","projID","tagsPresent","headerComplete","headerTagOptions","element","featureSource","_a","_b","_c","tempTagOptionNum","compileJSON","tempCSV","download","featureID","transferJSON","compiledJSON","longitude","latitude","src","groupColor","icon color","tag name","tag type","tag selection","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","reload","statusText","throwError","app_interceptors_TokenInterceptor","clone","setHeaders","Authorization","X-JWT-Assertion-designsafe","jwt","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this70","projectsExist","imagesExist","featureListScroll","slice","groupExist","_this71","setActiveFeatureId","_this72","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this73","featurePath","_this74","v","_this75","imageSelectTrue","_iterator14","_step14","saveTag","selectGroupForm","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","_this80","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","_this81","what","_iterator15","_step15","_iterator16","_step16","saveStyles","_iterator17","_step17","SelectImageComponent","_this87","activeFeatureNum$","_this88","asset","_iterator18","_step18","assetId","deleteGroup","_iterator19","_step19","FormFieldsComponent","controls","valid","FormCheckBoxComponent","isChecked","_this93","updateChecked","FormDropDownComponent","_this94","getSelectedRadio","updateExtra","FormFileComponent","FormRadioComponent","_this95","String","FormTextBoxComponent","_this96","FormColorComponent","chosenColor","_this97","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule"],"mappings":"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","file":"main-es5.30e8e47ae964581e6e3a.js","sourcesContent":["export default \"<div>\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\n  </select>\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\n\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\n\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\n\\n\\t  <div class=\\\"name-group\\\">\\n\\t\\t{{ getAssetDisplay(asset) }}\\n\\t  </div>\\n\\n\\t  <div class=\\\"button-group\\\">\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\n\\t\\t  </i>\\n\\t\\t</div>\\n\\t  </div>\\n\\t</div>\\n  </div>\\n</div>\\n\"","export default \"<h4> Select Files </h4>\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\n<hr>\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\n\\t<optgroup label=\\\"My Projects\\\">\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\n\\t</optgroup>\\n</select>\\n\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\" (dblclick)=\\\"toRoot()\\\">\\n\\t\\t<i class=\\\"fas fa-folder\\\"></i>\\n\\t\\t<span > Home </span>\\n\\t</div>\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\">\\n\\t\\t<i class=\\\"fas fa-folder-open\\\"></i>\\n\\t\\t<span class=\\\"lineBreak\\\"> {{selectedPath}} </span>\\n\\t</div>\\n\\t<div *ngIf=\\\"retrievalError\\\" class=\\\"grid-x file-row\\\" class=\\\"error\\\">\\n\\t\\tError retrieving files\\n\\t</div>\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList; let fileIndex = index\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select($event, file, fileIndex)\\\"  (dblclick)=\\\"browse(file)\\\">\\n\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\n\\t\\t\\t<span > {{ file.name }} </span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"size\\\">\\n\\t\\t\\t{{file.length | filesize }}\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\n\\t\\t<div class=\\\"cell medium-12\\\">\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\n\\t\\t</div>\\n\\t  </div>\\n</div>\\n\\n<div class=\\\"button-group\\\">\\n\\t<button mat-raised-button color=\\\"basic\\\" (click)=\\\"selectAll()\\\">Select all</button>\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\n</div>\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\n    <p class=\\\"m-0\\\">\\n      Drag a file here or\\n      <label class=\\\"upload-button\\\">\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\n      </label>\\n      to upload.\\n    </p>\\n  </div>\\n  <div *ngIf=\\\"field.value\\\">\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\n    <div class=\\\"card\\\">\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\n<hr>\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\n\\t<optgroup label=\\\"My Galleries\\\">\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\n\\t</optgroup>\\n</select>\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\n\\t\\t\\t<span > {{ file.name }} </span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"size\\\">\\n\\t\\t\\t{{file.length | filesize }}\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\n\\t\\t<div class=\\\"cell medium-12\\\">\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\n\\t\\t</div>\\n\\t  </div>\\n\\n</div>\\n\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\n    <div>\\n        <small><em> If no filename is specified, it will default to the Gallery ID number. </em></small>\\n    </div>\\n\\n    <mat-form-field>\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\n    </mat-form-field>\\n</form>\\n<span class=\\\"radio-box\\\">\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\n</mat-radio-group>\\n</span>\\n\\n<div class=\\\"button-group\\\">\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\n</div>\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\n\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\n\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\n<!--\\t</div> -->\\n\\n\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\n<!--\\t</div> -->\\n\\n<!--   </div> -->\\n\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\n<!--   <\\\\!-- </div> -\\\\-> -->\\n<!-- </div> -->\\n\\n<app-control-bar></app-control-bar>\\n<!-- NOTE Router Outlet was here -->\\n<app-image-gallery></app-image-gallery>\\n\\n<!-- NOTE Leaflet was here -->\\n\"","export default \"<p>\\n  notfound works!\\n</p>\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  overflow: hidden;\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\n\\t<span>\\n\\t  Create Tag\\n\\t</span>\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\n\\t<!-- </span> -->\\n  </div> <!-- subitem-title -->\\n\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\n\\t<form class=\\\"form-type-form\\\">\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\n\\t  </div> <!-- form-type-form -->\\n\\t</form>\\n\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\n\\t  <div class=\\\"form-name\\\">\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\n\\t\\t  <mat-label>Label</mat-label>\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\n\\t\\t</mat-form-field>\\n\\t  </div> <!--form-name -->\\n\\t</div> <!-- formtype -->\\n\\n\\t<ng-template #optionForms>\\n\\t  <div class=\\\"form-name\\\">\\n\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\n\\t\\t  <mat-label>Label</mat-label>\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\n\\t\\t</mat-form-field>\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\n\\t\\t  <mat-label>Options</mat-label>\\n\\t\\t  <div class=\\\"input-group\\\">\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\" (keyup.enter)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\n\\t\\t  </div> <!-- input-group -->\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<div class=\\\"input-group-button\\\">\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\n\\t\\t  </button>\\n\\t\\t</div> <!-- input-group-button -->\\n\\n\\t\\t<ul class=\\\"form-option-container\\\">\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\n\\t\\t\\t  {{opt.label}}\\n\\t\\t\\t</div> <!-- showopt -->\\n\\t\\t\\t<div class=\\\"button-group\\\">\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\n\\t\\t\\t\\t</i>\\n\\t\\t\\t  </div> <!-- delete opt -->\\n\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\n\\t\\t\\t\\t</i>\\n\\t\\t\\t  </div>\\n\\n\\t\\t\\t  <ng-template #renameOptionModal>\\n\\t\\t\\t\\t<input matInput #optionRename\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\n\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\n\\t\\t\\t\\t  <button matDialogClose\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\n\\t\\t\\t\\t  <button matDialogClose\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t  </ng-template>\\n\\n\\t\\t\\t</div> <!-- button group -->\\n\\n\\t\\t  </li>\\n\\t\\t</ul>\\n\\t  </div> <!-- form name -->\\n\\t</ng-template> <!-- form options -->\\n\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\n\\n  </div> <!-- subitem -->\\n</div> <!-- create-group -->\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: flex;\\n  height: 100vh;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\n\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\n    <mat-form-field>\\n        <mat-label>Username:</mat-label>\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\n    </mat-form-field>\\n\\n<div class=\\\"button-group small\\\">\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\n</div>\\n\\n<br>\\n<h5>Current Users</h5>\\n<div *ngFor=\\\"let user of projectUsers\\\">\\n    <br>\\n    <mat-card class=\\\"card-container\\\">\\n        <span class=\\\"card-item\\\">\\n            {{user.username}}\\n        </span>\\n        <span class=\\\"card-buttons\\\">\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" [disabled]=\\\"onlyOne\\\" (click)=\\\"delete(user.username)\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n            </button>\\n        </span>\\n    </mat-card>\\n</div>\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\n\\t\\t   infiniteScroll\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\n\\t\\t   class=\\\"img-list-container\\\"\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\n\\t\\t<app-image-box\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\n\\t\\t  [feature]=\\\"feat\\\">\\n\\t\\t</app-image-box>\\n\\t  </div>\\n\\n\\t  <ngx-spinner\\n\\t\\tbdOpacity = 0.9\\n\\t\\tbdColor = \\\"\\\"\\n\\t\\tsize = \\\"default\\\"\\n\\t\\tcolor = \\\"#3ADB76\\\"\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\n\\t\\tid = \\\"img-spin\\\"\\n\\t\\t[fullScreen] = \\\"false\\\">\\n\\t  </ngx-spinner>\\n\\t  <ng-template #elseBlock>\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\n\\t\\t  <div class=\\\"imager\\\">\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\n\\t\\t  </div>\\n\\t\\t</div>\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\n\\n\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\n\\n\\t\\t<!-- <app-image-list> -->\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\n\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\n\\n\\t  </ng-template>\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\n\\t\\t<app-side-bar></app-side-bar>\\n\\t  </div>\\n\\t</div>\\n\\t<ng-template #noImgWarn>\\n\\t  <div id=\\\"no-img\\\">\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\n\\t  </div>\\n\\t</ng-template>\\n  </div>\\n\\n  <ng-template #noProjWarn>\\n\\t<div id=\\\"no-proj\\\">\\n\\t  No project has been created!<br>Please create a project through the menu.\\n\\t</div>\\n  </ng-template>\\n\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\n\\t\\t<!--\\t  <app-image-box -->\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\n\\t\\t  <!--\\t  </app-image-box> -->\\n\\t\\t<!--\\t</div> -->\\n\\n\\t  <!--\\t<ng-template #elseBlock> -->\\n\\t\\t<!--\\t  <app-image-list> -->\\n\\t\\t  <!--\\t  </app-image-list> -->\\n\\t\\t<!--\\t</ng-template> -->\\n\\n\\t  <!--   </div> -->\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\n\\t  <!--   </div> -->\\n\\t<!-- </div> -->\\n\\n</div>\\n\\n<ng-template #loader>\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\n\\tLoading...\\n  </div>\\n\\n  <ng-template #createProj> \\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\n\\t\\tStart a new project\\n\\t</div>\\n</ng-template>\\n\\n\\n  <!-- <ngx-spinner\\n\\tbdOpacity = 0.9\\n\\tbdColor = \\\"\\\"\\n\\tsize = \\\"default\\\"\\n\\tcolor = \\\"#3ADB76\\\"\\n\\ttype = \\\"line-scale-pulse-out\\\"\\n\\tid = \\\"load-spin\\\"\\n\\t[fullScreen] = \\\"false\\\">\\n  </ngx-spinner> -->\\n</ng-template>\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\n\\t{{field.label}}\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\n  </label>\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\n  </div>\\n</div>\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  overflow: hidden;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","export default \"<div id=\\\"callback\\\">\\n    <div>\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"img-container\\\">\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\n\\t   [src]=\\\"featureSource\\\"\\n\\t   (click)=\\\"imageSelect()\\\"\\n\\t   class=\\\"img-responsive img-target\\\"\\n\\t   title={{featurePath}}>\\n  <div class=\\\"top-overlay\\\">\\n\\t<div class=\\\"image-option\\\"\\n\\t\\t matTooltip=\\\"Zoom\\\"\\n\\t\\t matTooltipPosition=\\\"below\\\"\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\n\\t</div>\\n\\n\\t<ng-template #diffSizes>\\n\\t  <div class=\\\"zoom-content\\\">\\n\\t\\t<div class=\\\"img-container\\\">\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"img-details\\\">\\n\\t\\t  <div class=\\\"detail-container\\\">\\n\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t  Coordinates\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\n\\t\\t\\t\\t{{coordinates[0]}},\\n\\t\\t\\t  </div>\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\n\\t\\t\\t\\t{{coordinates[1]}}\\n\\t\\t\\t  </div>\\n\\t\\t\\t</div>\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"detail-container\\\">\\n\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t  Image Source\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\n\\t\\t\\t\\t{{featurePath}}\\n\\t\\t\\t  </div>\\n\\t\\t\\t</div>\\n\\t\\t  </div>\\n\\t\\t</div>\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t</button>\\n\\t  </div>\\n\\t</ng-template>\\n\\n\\t<div class=\\\"image-option\\\"\\n\\t\\t matTooltip=\\\"Remove\\\"\\n\\t\\t matTooltipPosition=\\\"below\\\"\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\n\\t</div>\\n\\n\\t<ng-template #deleteImage>\\n\\t  <div *ngIf=\\\"tempGroup.length === 1\\\">\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\n\\t  </div>\\n\\n\\t  <div *ngIf=\\\"tempGroup.length > 1\\\">\\n\\t\\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\\n\\t\\t</div>\\n\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\n\\t  <button mat-button matDialogClose>Cancel</button>\\n\\t</ng-template>\\n\\n\\t<div class=\\\"image-option\\\"\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\n\\t\\t matTooltipPosition=\\\"below\\\"\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\n\\t</div>\\n\\n\\t<ng-template #addMoreToGroup>\\n\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\n\\t\\t<mat-label>Groups</mat-label>\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\n\\t\\t  <mat-option>\\n\\t\\t\\tNone\\n\\t\\t  </mat-option>\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\n\\t\\t\\t{{ group.name }}\\n\\t\\t  </mat-option>\\n\\t\\t</mat-select>\\n\\t  </mat-form-field>\\n\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\n\\t  <!--\\t  {{ group.name }} -->\\n\\t  <!--\\t</option> -->\\n\\t  <!-- </select> -->\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\n\\t  <p>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"addGroups(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\n\\t  </p>\\n\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\n\\t  <!-- </button> -->\\n\\t</ng-template>\\n  </div>\\n\\n  <div class=\\\"bottom-overlay\\\">\\n\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\n\\t  <!-- TODO This should be an iff relationship -->\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\n\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\n\\t\\t\\t   class=\\\"center\\\"\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\n\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\" (click)=\\\"deleteFromGroup(color)\\\">\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\n\\t\\t\\t  <rect  class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\n\\t\\t\\t</svg>\\n\\t\\t  </div>\\n\\t\\t</div>\\n\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\n\\t\\t  <div class=\\\"image-option\\\"\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\n\\t\\t  </div>\\n\\t\\t</ng-template>\\n\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\n\\t\\t<ng-template #moreGroupsModal>\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\n\\t\\t\\t  </svg>\\n\\t\\t\\t</div>\\n\\t\\t  </div>\\n\\t\\t</ng-template>\\n\\n\\t  </div>\\n\\t<!-- </div> -->\\n\\n  </div>\\n\\n</div>\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\n<!-- <app-preset-generator></app-preset-generator> -->\\n<!-- <app-tagger></app-tagger> -->\\n<app-select-group></app-select-group>\\n<app-select-image></app-select-image>\\n<router-outlet></router-outlet>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\n</div>\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\n<div>\\n  <textarea  [id]=\\\"field.name\\\"\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (keyup)=\\\"updateNotes()\\\"></textarea>\\n</div>\\n\"","export default \":host #share-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.card-buttons {\\n  align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\n  <label class=\\\"form-check-label\\\">\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" name={{label}} value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\n          {{field.label}}\\n      </label>\\n</div>\"","export default \":host #create-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  transition: opacity 0.3s ease;\\n  backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  transition: 0.3s ease;\\n  align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\n  <label class=\\\"form-check-label\\\">\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" name={{label}} value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\n          {{field.label}}\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\n  </label>\\n</div>\"","export default \"<h4> Current Gallery </h4>\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\n  <mat-form-field>\\n\\t<mat-label>Name:</mat-label>\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\n\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Description</mat-label>\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\n  </mat-form-field>\\n\\n  <div class=\\\"button-group small\\\">\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\n    <button *ngIf=\\\"activeProject.deletable\\\" mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\n  </div>\\n</form>\\n\"","export default \"<h4> Create a new Gallery </h4>\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\n  <mat-form-field>\\n\\t<mat-label>Name:</mat-label>\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n\\t<mat-label>Description</mat-label>\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\n  </mat-form-field>\\n\\n  <div class=\\\"button-group small\\\">\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\n  </div>\\n</form>\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: flex;\\n  justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\n\\t<!-- TODO redundant functionality radio is just for style -->\\n\\t<form class=\\\"boxed\\\">\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\n\\t\\t  <div class=\\\"name-group\\\">\\n\\t\\t\\t{{group.name}}\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\n\\t\\t\\t</svg>\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"button-group\\\">\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\n\\t\\t\\t  </i>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\n\\t\\t\\t  </i>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\n\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\n\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\n\\t\\t\\t\\t</div>\\n\\t\\t  \\t</div>\\n\\t\\t</label>\\n\\t  </div>\\n\\t</form>\\n\\n\\t<ng-template #renameModal>\\n\\t  <input matInput #groupRename\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\n\\t  <br/>\\n\\t  <br/>\\n\\t  <div class=\\\"button-group\\\">\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\n\\t  </div>\\n\\t</ng-template>\\n\\n\\t<ng-template #iconModal>\\n\\t\\t<div class=\\\"iconDropdown\\\">\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\n\\t\\t\\t<option class=\\\"fa\\\" *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\n\\t\\t</select>\\n\\t\\t<br/>\\n\\t  \\t<br/>\\n\\t\\t<div class=\\\"button-group\\\">\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\n\\t\\t  </div>\\n\\t</div>\\n\\t</ng-template>\\n\\n  </div> <!-- subitem -->\\n</div> <!-- select-group -->\\n\"","export default \":host #current-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n.error {\\n  background-color: red;\\n  color: white;\\n}\\n.lineBreak {\\n  max-width: 350px;\\n  word-break: break-word;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\n  <span style=\\\"color: white\\\">Taggit</span>\\n\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\n\\t<mat-icon>menu</mat-icon>\\n  </button>\\n\\n\\n  <mat-menu #project=\\\"matMenu\\\">\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\n\\t  Current Gallery : {{selectedProject.name}}\\n\\t</span>\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Gallery</button>\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Gallery</button>\\n\\t<!-- <button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Gallery</button> -->\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\n  </mat-menu>\\n\\n  <mat-menu #projectList=\\\"matMenu\\\">\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\n\\t  {{ p.name }}\\n\\t</button>\\n  </mat-menu>\\n\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\n  </mat-menu>\\n\\n  <span class=\\\"example-spacer\\\"></span>\\n\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\n\\t  {{imageName}}\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\n\\t  </div>\\n\\t</div>\\n  </div>\\n\\n  <ng-template #doThat>\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\n\\t<!--\\t   name=\\\"\\\" -->\\n\\t<!--\\t   type=\\\"text\\\" -->\\n\\t<!--\\t   value=\\\"\\\" -->\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\n\\n\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\n\\t<!-- </mat-form-field> -->\\n\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\n\\t<!-- </mat-form-field> -->\\n  </ng-template>\\n\\n  <span class=\\\"example-spacer\\\"></span>\\n\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\n  <div class=\\\"group-bar grid-x align-right\\\">\\n\\t\\n\\t<button mat-raised-button class=\\\"button-spacing\\\" [disabled]=\\\"!itemsSelected\\\" (click)=\\\"clearAll()\\\">Clear Selected</button>\\n\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your gallery in HazMapper\\\" target=\\\"_blank\\\">\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\n\\t</a>\\n\\n\\t<button mat-raised-button\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\" *ngIf=\\\"itemsSelected && !showSidebar\\\">Add Group</button>\\n\\n\\t<ng-template #addGroupModal>\\n\\t  <mat-form-field>\\n\\t\\t<mat-label>Group Name</mat-label>\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" (keyup.enter)=\\\"addToGroupService(groupInput.value)\\\" #groupInput>\\n\\t  </mat-form-field>\\n\\t  <br/>\\n\\t  <br/>\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\n\\t</ng-template>\\n  </div>\\n\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\n  <!--\\t\\t  mat-button -->\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\n\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\n  <!--\\t\\t  mat-button -->\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\n\\n\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\n\\t\\t  mat-raised-button\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\n\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\n\\t\\t  mat-raised-button\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\n\\n\\n</mat-toolbar>\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\n    <label class=\\\"form-check-label\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\n            {{field.label}}\\n        </label>\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export enum EnvironmentType {\n  Production = 'production',\n  Staging = 'staging',\n  Local = 'local',\n}","import {Feature as GeoJSONFeature,\n  GeoJsonProperties,\n  Geometry,\n  FeatureCollection as IFeatureCollection } from 'geojson';\n\n\n// TODO: break these out into their own files\n\nexport interface IPointCloud {\n  id: number;\n  description: string;\n  conversion_parameters: string;\n  feature_id?: number;\n  task_id?: string;\n  project_id: number;\n}\n\n// export interface Group {\n//   groupName: Array<string>;\n//   formList: Array<any>;\n//   // type: any;\n// }\n\n// export interface Group {\n//   groupName: Array<string>;\n//   formList: Array<any>;\n//   // type: any;\n// }\n\nexport interface Group {\n  groupName: string;\n  formList: Array<any>;\n  color: string;\n  // type: any;\n}\n\nexport class Group implements Group {\n\n}\n\n\nexport class AssetFilters {\n\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\n  bbox: Array<number> = [];\n  assetType: Set<string> = new Set<string>();\n\n  updateAssetTypes(assetType: string) {\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\n  }\n\n  updateBBox(bbox: Array<number>): void {\n\tthis.bbox = bbox;\n  }\n\n  toJson() {\n\treturn {\n\t  assetType: [...this.assetType],\n\t  bbox: this.bbox\n\t};\n  }\n\n}\n\n\nexport interface Project {\n  description: string;\n  id?: number;\n  name: string;\n  ds_id?: string;\n  title?: string;\n  uuid?: string;\n  public?: boolean;\n  system_file?: string;\n  system_id?: string;\n  system_path?: string;\n  deletable?: boolean;\n  deleting?: boolean;\n  deletingFailed?: boolean;\n}\n\nexport class Project implements Project {\n\n}\n\nexport interface ProjectRequest {\n  project: Project;\n  observable?: boolean;\n  watch_content?: boolean;\n}\n\nexport class ProjectRequest implements ProjectRequest {\n\n}\n\nexport class AuthToken {\n  token: string;\n  expires: Date;\n  /**\n   *\n   * @param token : String\n   * @param expires: Date\n   */\n  constructor(token: string, expires: Date) {\n\tthis.token = token;\n\tthis.expires = new Date(expires);\n  }\n\n  static fromExpiresIn(token: string, expires_in: number) {\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\n\treturn new AuthToken(token, expires);\n  }\n\n  /**\n   * Checks if the token is expired or not\n   */\n  public isExpired(): boolean {\n\treturn new Date().getTime() > this.expires.getTime();\n  }\n}\n\n\nexport interface IFeatureAsset {\n  id: number;\n  path: string;\n  uuid: string;\n  feature_id: number;\n  asset_type: string;\n  display_path: string;\n}\n\nexport class FeatureAsset implements IFeatureAsset {\n  id: number;\n  path: string;\n  uuid: string;\n  feature_id: number;\n  asset_type: string;\n  display_path: string;\n\n  // TODO: Implenent this\n  get assetPath(): string {\n\treturn '';\n  }\n\n}\n\n\ninterface FeatureStyles {\n  [key: string]: string | number;\n}\n\n\nexport interface Overlay {\n  id: number;\n  path: string;\n  uuid: string;\n  minLon: number;\n  minLat: number;\n  maxLon: number;\n  maxLat: number;\n  project_id: number;\n  label: string;\n}\n\ninterface AppGeoJSONFeature extends GeoJSONFeature {\n  assets?: Array<IFeatureAsset>;\n  styles?: FeatureStyles;\n  project_id?: number;\n  // featureType?(): String\n}\n\nexport class FeatureCollection implements IFeatureCollection {\n  features: Feature[];\n  type: any;\n}\n\n\nexport class Feature implements AppGeoJSONFeature {\n  geometry: Geometry;\n  properties: GeoJsonProperties;\n  id?: string | number;\n  type: any;\n  assets?: Array<IFeatureAsset>;\n  styles?: FeatureStyles;\n  project_id?: number;\n\n  constructor(f: AppGeoJSONFeature) {\n\tthis.geometry = f.geometry;\n\tthis.properties = f.properties;\n\tthis.id = f.id;\n\tthis.type = f.type;\n\tthis.assets = f.assets;\n\tthis.styles = f.styles;\n\tthis.project_id = f.project_id;\n  }\n\n  featureType?(): string {\n\tif (this.assets &&\n\tthis.assets.length === 1) {\n\t  return this.assets[0].asset_type;\n\t}\n\n\tif (this.assets &&\n\tthis.assets.length > 1) {\n\t  return 'collection';\n\t}\n\n\tif (!this.assets.length) {\n\t  return this.geometry.type;\n\t}\n\n\n\n  }\n}\n\nexport interface IProjectUser {\n  id: number;\n  username: string;\n}\n","import { EnvironmentType } from \"./environmentType\";\n\nexport interface AppEnvironment {\n  production: boolean;\n  apiUrl: string;\n  jwt?: string;\n  clientId: string;\n  baseHref: string;\n  backend: EnvironmentType;\n}\n\nexport const environment: AppEnvironment = {\n  production: true,\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\n  baseHref: '/',\n  backend: EnvironmentType.Production\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthToken } from '../models/models';\nimport {environment} from '../../environments/environment';\nimport {Observable, ReplaySubject} from 'rxjs';\nimport {Router} from '@angular/router';\n\nexport class AuthenticatedUser {\n  public readonly username: string;\n  public readonly email: string;\n  private _token: AuthToken;\n\n  constructor(username: string, email: string) {\n    this.username = username;\n    this.email = email;\n  }\n\n}\n\ninterface OpenIDUser {\n  name: string;\n  email: string;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthService {\n\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\n  userToken: AuthToken;\n  private LS_TOKEN_KEY = 'hazmapperToken';\n  private LS_USER_KEY = 'hazmapperUser';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public login() {\n    // First, check if the user has a token in localStorage\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\n    if (!tokenStr) {\n      this.redirectToauthenticaor();\n    } else {\n      const token = JSON.parse(tokenStr);\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\n      if (!this.userToken || this.userToken.isExpired()) {\n        this.logout();\n        this.redirectToauthenticaor();\n      }\n      this.getUserInfo();\n    }\n  }\n\n  private redirectToauthenticaor() {\n    const client_id = environment.clientId;\n    const callback = location.origin + environment.baseHref + 'callback';\n    const state = Math.random().toString(36);\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\n    window.location.href = AUTH_URL;\n  }\n\n\n  /**\n   * Checks to make sure that the user has a token and the token is not expired;\n   */\n  public isLoggedIn(): boolean {\n    return this.userToken && !this.userToken.isExpired();\n  }\n\n  public logout(): void {\n    this.userToken = null;\n    localStorage.removeItem(this.LS_TOKEN_KEY);\n    localStorage.removeItem(this.LS_USER_KEY);\n  }\n\n  public setToken(token: string, expires: number): void {\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\n    // hit the wso2 api to retrieve the username etc\n    this.router.navigate(['/']);\n  }\n\n  public getUserInfo() {\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\n    const user = JSON.parse(userStr);\n    if (user !== null) {\n      this._currentUser.next(\n        new AuthenticatedUser(user.username, user.email)\n      );\n    } else {\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\n        const u = new AuthenticatedUser(resp.name, resp.email);\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\n        this._currentUser.next(u);\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpClient } from '@angular/common/http';\nimport { INotification } from '../models/notification';\nimport { interval, Observable, ReplaySubject } from 'rxjs';\nimport { AuthService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n  // Interval time to get notifications in millisecs\n  private TIMEOUT = 5000;\n  private _notifications: ReplaySubject<Array<INotification>> = new ReplaySubject<Array<INotification>>(1);\n  public readonly  notifications: Observable<Array<INotification>> = this._notifications.asObservable();\n\n  constructor(private toastr: ToastrService,\n    private http: HttpClient,\n    private authService: AuthService ) {\n      if (this.authService.isLoggedIn()) {\n      const timer = interval(this.TIMEOUT);\n      timer.subscribe((next) => {\n        this.getRecent();\n      });\n    }\n  }\n\n  //Sends a request to GeoAPI to retrieve recent notifications\n  getRecent(): void {\n    let baseUrl = environment.apiUrl + 'notifications/';\n    let now = new Date();\n    let then = new Date(now.getTime() - this.TIMEOUT);\n\n    this.http.get<Array<INotification>>(baseUrl + `?startDate=${then.toISOString()}`)\n      .subscribe( (notes) => {\n        this._notifications.next(notes);\n        notes.forEach( (note) => {\n          switch (note.status) {\n            case 'success':\n              this.showSuccessToast(note.message);\n              break;\n            case 'error':\n              this.showErrorToast(note.message);\n              break;\n            default:\n              break;\n          }\n        });\n      });\n  }\n\n  showSuccessToast(message: string): void {\n    this.toastr.success(message);\n  }\n\n  showImportErrorToast(message: string): void {\n    this.toastr.error(message + \", trying alternate method\")\n  }\n\n  showErrorToast(message:string): void {\n    this.toastr.error(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollService {\n\n  constructor() { }\n\n  public scrollRestored:boolean = true //if true, the scroll was restored to the proper place\n  public scrollPosition:number = 0\n\n  setScrollRestored(change:boolean) { this.scrollRestored = change; }\n\n  setScrollPosition() { this.scrollPosition = document.documentElement.scrollTop;}\n\n  scroll() {\n    //Attempts to scroll to the specified location\n\t\tdocument.documentElement.scroll({top: this.scrollPosition})\n\t\t//if it reaches there, marks the check as complete\n\t\tif(document.documentElement.scrollTop == this.scrollPosition){\n\t\t\tthis.scrollRestored = false\n\t\t}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\nimport {LatLng} from 'leaflet';\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\nimport { Feature, FeatureCollection} from '../models/models';\nimport { environment } from '../../environments/environment';\nimport {Form} from '@angular/forms';\nimport {take} from 'rxjs/operators';\nimport * as querystring from 'querystring';\nimport {RemoteFile} from 'ng-tapis';\nimport { NotificationsService } from './notifications.service';\nimport { ScrollService } from './scroll.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeoDataService {\n\n\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\n  //TODO: Go over this and remove all unused functions, a lot of this was copy/pasted over from Hazmapper without a second thought\n  private _features: BehaviorSubject<FeatureCollection>;\n  private features$: Observable<FeatureCollection>;\n  private _activeFeature: BehaviorSubject<any>;\n  private _mapMouseLocation: BehaviorSubject<any>;\n  private _basemap: BehaviorSubject<any>;\n  private _overlays: BehaviorSubject<any>;\n  private _activeOverlay: BehaviorSubject<any>;\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\n  private fileList: Array<RemoteFile>\n\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public loaded: Observable<boolean> = this._loaded.asObservable();\n\n  constructor(private http: HttpClient,\n\tprivate notificationsService: NotificationsService,\n\tprivate scrollService: ScrollService) {\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\n\tthis.features$ = this._features.asObservable();\n\tthis._activeFeature = new BehaviorSubject<any>(null);\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\n\n\t// For the style of the basemap, defaults to OpenStreetmap\n\tthis._basemap = new BehaviorSubject<any>('roads');\n\n\t// Holds all of the overlays on a project\n\tthis._overlays = new BehaviorSubject<any>(null);\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\n  }\n\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters(), restoreScroll = false): void {\n\tconst qstring: string = querystring.stringify(query.toJson());\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\n\t  .subscribe( (fc: FeatureCollection) => {\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\n\t\tthis._features.next(fc);\n\t\t// this._loaded.next(false);\n\t\tthis._loaded.next(true);\n\n\t\tif ( restoreScroll ) {\n\t\t\tthis.scrollService.setScrollRestored(true)\n\t\t}\n\t  });\n  }\n\n  deleteFeature(feature: Feature) {\n\tthis.http.delete(environment.apiUrl + `projects/${feature.project_id}/features/${feature.id}/`)\n\t  .subscribe( (resp) => {\n\t\tthis.getFeatures(feature.project_id, new AssetFilters(), true);\n\t  });\n  }\n\n  getPointClouds(projectId: number) {\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\n\t  .subscribe( (resp ) => {\n\t// console.log(resp);\n\tthis._pointClouds.next(resp);\n\t  });\n  }\n\n  addFeature(feat: Feature): void {\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\n\t  current.features.push(feat);\n\t  this._features.next(current);\n\t});\n  }\n\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\n\tconst payload = {\n\t  description: title,\n\t  conversion_parameters: conversionParams\n\t};\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\n\t  .subscribe( (resp) => {\n\tthis.getPointClouds(projectId);\n\t  }, error => {\n\t// TODO: notification\n\t  });\n  }\n\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/properties/`, groupData)\n\t  .subscribe( (resp) => {\n\t  }, error => {\n\t  });\n  }\n\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\n\t  .subscribe( (resp) => {\n\t  }, error => {\n\t  });\n  }\n\n  deletePointCloud(pc: IPointCloud): void {\n\tconsole.log(pc);\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\n\t  .subscribe( (resp) => {\n\tthis.getPointClouds(pc.project_id);\n\t  });\n  }\n\n  addFileToPointCloud(pc: IPointCloud, file: File) {\n\tconst form = new FormData();\n\tform.append('file', file);\n\tconsole.log(pc);\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\n\t  .subscribe( (resp) => {\n\tconsole.log(resp);\n\t  });\n  }\n\n  //This function updates the underlying observable, so changes naturally flow to feature service\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\n\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\n\tconst payload = {\n\t  files: tmp\n\t};\n\tthis.fileList = tmp\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/files/import/`, payload)\n\t  .subscribe( (resp) => {\n\t\tthis.notificationsService.showSuccessToast('Import started!');\n\t  }, error => {\n\t\tthis.notificationsService.showImportErrorToast('Import failed! Try again?');\n\t  });\n  }\n\n  //An alternate function for importing images with no GPS data. A feature is created elsewhere, and the image is added to the feature\n  //Inputs:\n  //projectId: Id number of current project\n  //features: A pre-created feature with user-defined or zeroed out gps data\n  //file: A Tapis Remote File containing the image to be imported\n  importImage(projectId: number, feature: Feature, path: string): void {\n\tlet featureId = feature.id\n\tlet file\n\tthis.fileList.forEach(remoteFile =>{\n\t\tif (remoteFile.path == path) {\n\t\t\tfile = remoteFile\n\t\t}\n\t});\n\tlet payload = {system_id: file.system, path: file.path};\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/assets/`, payload)\n\t.subscribe( (resp) => {\n\t\tthis.notificationsService.showSuccessToast('Import started!');\n\t\t//this.getFeatures(projectId)\n\t});\n  }\n\n  //Creates a new feature from an uploaded locally created feature\n  uploadNewFeature(projectId: number, feature:Feature, path: string): void {\n\tlet payload = feature;\n\tlet response\n\t//Calls the addFeatureAsset route in GeoAPI, resp is a list of features\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/`, payload)\n\t.subscribe( (resp) => {\n\t\t//this.getFeatures(projectId)\n\t\tresponse = new Feature(resp[0])\n\t\tthis.importImage(projectId, response, path)\n\t});\n  }\n\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\n\tconst qstring: string = querystring.stringify(query.toJson());\n\tconst downloadLink = document.createElement('a');\n\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\n\t  .subscribe( (resp) => {\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\n\tdownloadLink.href = URL.createObjectURL(blob);\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\n\tdocument.body.appendChild(downloadLink);\n\tdownloadLink.click();\n\tdocument.body.removeChild(downloadLink);\n\t  });\n  }\n\n  uploadFile(projectId: number, file: File): void {\n\tconst form: FormData = new FormData();\n\tform.append('file', file, file.name);\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\n\t  .subscribe( (feats) => {\n\tfeats.forEach( (feat) => {\n\t  this.addFeature(new Feature(feat));\n\t});\n\t  }, error => {\n\t// TODO: Add notification\n\t  });\n  }\n\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\n\tconst form: FormData = new FormData();\n\tform.append('file', file, file.name);\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\n\t.subscribe( (feature) => {\n\t  // TODO workaround to update activeFeature\n\t  let f = this._activeFeature.getValue();\n\t  if(f && f.id === featureId){\n\t\tthis.activeFeature = new Feature(feature);\n\t\tthis.getFeatures(projectId);\n\t  }\n\t}, error => {\n\t  // TODO: Add notification\n\t});\n  }\n\n  getOverlays(projectId: number): void {\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\n\t  this._overlays.next(ovs);\n\t});\n  }\n\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\n\tconst payload = new FormData();\n\tpayload.append('file', file);\n\tpayload.append('label', label);\n\tpayload.append('minLat', minLat.toFixed(6));\n\tpayload.append('maxLat', maxLat.toFixed(6));\n\tpayload.append('minLon', minLon.toFixed(6));\n\tpayload.append('maxLon', maxLon.toFixed(6));\n\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\n\t  .subscribe((resp) => {\n\tthis.getOverlays(projectId);\n\t  });\n  }\n\n  public get overlays(): Observable<Array<Overlay>> {\n\treturn this._overlays.asObservable();\n  }\n\n  public get features(): Observable<FeatureCollection> {\n\treturn this._features.asObservable();\n  }\n\n  public get activeFeature() {\n\treturn this._activeFeature.asObservable();\n  }\n\n  // TODO: This is heinous\n  public set activeFeature(f: any) {\n\tif (f) {\n\t  if (f === this._activeFeature.getValue()) {\n\tthis._activeFeature.next(null);\n\t  } else {\n\tthis._activeFeature.next(f);\n\t  }\n\t} else {\n\t  this._activeFeature.next(null);\n\t}\n\n  }\n\n  public get activeOverlay(): Observable<Overlay> {\n\treturn this._activeOverlay.asObservable();\n  }\n\n  public set activeOverlay(ov) {\n\tthis._activeOverlay.next(ov);\n  }\n\n\n  public get mapMouseLocation(): Observable<LatLng> {\n\treturn this._mapMouseLocation.asObservable();\n  }\n\n  public set mapMouseLocation(loc) {\n\tthis._mapMouseLocation.next(loc);\n  }\n\n  public set basemap(bmap) {\n\tthis._basemap.next(bmap);\n  }\n\n  public get basemap(): any {\n\treturn this._basemap.asObservable();\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {GeoDataService} from '../../services/geo-data.service';\nimport {Feature} from '../../models/models';\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\nimport {Observable} from 'rxjs';\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\nimport {RemoteFile} from 'ng-tapis';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  // public activeFeature: Feature;\n  // public currentUser: AuthenticatedUser;\n\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\n\n  ngOnInit() {\n\t// this.geoDataService.activeFeature.subscribe( next => {\n\t//   this.activeFeature = next;\n\t// });\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\n  }\n\n\n\n}\n","import {Component, NgZone, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router, Route} from '@angular/router';\nimport {AuthService} from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.scss']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\n\n  ngOnInit() {\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\n\tconst frag = this.route.snapshot.fragment;\n\tconst params = new URLSearchParams(frag);\n\tconst token = params.get('access_token');\n\tconst expires_in = +params.get('expires_in');\n\tthis.auth.setToken(token, expires_in);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\nimport { ProjectsService } from './projects.service';\nimport { Feature } from '../models/models';\n\n// Will inject Projects and GeoData Service to get properties of Feature\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsService {\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\n  public groups: Observable<any> = this._groups.asObservable();\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\n  public forms: Observable<any> = this._forms.asObservable();\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\n\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\n\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\n\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\n\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\n\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\n\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\n\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  public activePane: Observable<string> = this._activePane.asObservable();\n\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\n\n  private _itemsSelected: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public itemsSelected: Observable<boolean> = this._itemsSelected.asObservable();\n\n  constructor() {\n  }\n\n  // Loop through projects to get a list of Groups\n  addGroup(groupList: any): void {\n\tthis._groups.next(groupList);\n  }\n\n  setGroupProperties(featureList: any): void {\n\t// let tempGroupList = {};\n\tlet tempGroupList = {};\n\tlet tempFeatList = {};\n\tfor (let feat of featureList) {\n\t  // Parses if group exists at all in server\n\t  if (feat.properties.group) {\n\t\t// Loops through all the groups\n\t\tfor (let group of feat.properties.group) {\n\t\t  // Adds new feature to group\n\t\t  // if (!tempFeatList[group.name]) {\n\t\t  //\ttempFeatList[group.name] = [];\n\t\t  // }\n\n\t\t  // if (!tempGroupList[group.name]) {\n\t\t  //\ttempGroupList[group.name] = [];\n\t\t  // }\n\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\n\n\t\t  //if it exist\n\t\t  if (!tempGroupList[group.name]) {\n\n\t\t\ttempGroupList[group.name] = {\n\t\t\t  name: group.name,\n\t\t\t  features: [],\n\t\t\t  color: group.color,\n\t\t\t  icon: group.icon\n\t\t\t}\n\t\t  }\n\t\t//   console.log(tempGroupList[group.name].features)\n\t\t  let index = tempGroupList[group.name].features.findIndex(item => (item == feat))\n\t\t  if(index == -1){\n\t\t  tempGroupList[group.name].features.push(feat);\n\t\t  }\n\n\n\t\t}\n\t  }\n\t}\n\n\t// console.log(tempGroupList);\n\tthis._groups.next(Object.values(tempGroupList));\n\t// console.log(Object.values(tempGroupList))\n\t// this._groups.next(tempGroupList);\n  }\n\n  addForm(formList: any): void {\n\tthis._forms.next(formList);\n  }\n\n  addTempGroup(tempGroup: any): void {\n\tthis._tempGroup.next(tempGroup);\n  }\n\n  setShowGroup(show: boolean): void {\n\tthis._showGroup.next(show);\n  }\n\n  setFeatureImagesExist(feature: boolean): void {\n\tthis._featureImagesExist.next(feature);\n  }\n\n  setShowSidebar(show: boolean): void {\n\tthis._showSidebar.next(show);\n  }\n\n  setUnselectAll(select: boolean): void {\n\tthis._unselectAll.next(select);\n\tthis._itemsSelected.next(!select);\n  }\n\n  setItemsSelected(select: boolean): void {\n\tthis._itemsSelected.next(select)\n  }\n\n  // TODO Replace this with geo-data.service\n  setActiveProject(feat: any): void {\n\tthis._activeFeature.next(feat);\n  }\n\n  setActiveGroup(groupName: string): void {\n\t// console.log(feat.assets[0].path);\n\tthis._activeGroup.next(groupName);\n  }\n\n  setActivePane(pane: string): void {\n\t// console.log(feat.assets[0].path);\n\tthis._activePane.next(pane);\n  }\n\n  setActiveFeatureNum(num: number): void {\n\tthis._activeFeatureNum.next(num);\n  }\n\n  setActiveFeatureId(id: number): void {\n\tthis._activeFeatureId.next(id);\n  }\n\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\n\tlet groupFeature : string = groupName + featureId;\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\n\n\tif (tagFeatureGroupValue == null) {\n\t  tagFeatureGroupValue = {};\n\t} else {\n\t  tagFeatureGroupValue[groupFeature] = payload;\n\t}\n\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {Project, IProjectUser, ProjectRequest} from '../models/models';\nimport { environment } from '../../environments/environment';\nimport {AuthService} from './authentication.service';\nimport { validateBBox } from '@turf/helpers';\nimport { NotificationsService } from './notifications.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\n\n  private _deletingProjects: BehaviorSubject<Project[]> = new BehaviorSubject<Project[]>([]);\n  public deletingProjects: Observable<Project[]> = this._deletingProjects.asObservable();\n\n  constructor(private http: HttpClient,\n    private authService: AuthService,\n    private notificationsService: NotificationsService) { }\n\n    testGeoApi():void {\n      const data = {\n        \"name\": \"Awesome Project\",\n      \"description\": \"Cool project\"\n      }\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\n        this._projects.next([...this._projects.value, resp]);\n      // Set the active project to the one just created?\n      this._activeProject.next(resp);\n      });\n\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\n        this._projects.next(resp);\n        //DEBUG: outputs results of query\n        //console.log(this._projects.getValue())\n      });\n    }\n\n    updateProjectsList(resp: Project[] = []) {\n      const myProjs = resp.length !== 0\n        ? resp\n        : this._projects.value;\n  \n      this._deletingProjects.value.length !== 0\n        ? this._projects.next(myProjs.map(p => {\n          const deletingProj = this._deletingProjects.value.find(dp => dp.id === p.id);\n          return deletingProj\n            ? deletingProj\n            : p;\n        }))\n        : this._projects.next(myProjs);\n    }\n\n  //Queries database for all user projects.\n  getProjects(): void {\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\n     console.log(resp)\n     this.updateProjectsList(resp);\n     //DEBUG: outputs results of query\n     //console.log(this._projects.getValue())\n   }, error => {\n    this.notificationsService.showErrorToast(\"Error importing files Design Safe, GeoAPI might be down\")\n  });\n  }\n\n  create(data: ProjectRequest): Observable<Project> {\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\n    prom.subscribe(proj => {\n      // Spread operator, just pushes the new project into the array\n      //console.log(data)\n      this._projects.next([...this._projects.value, proj]);\n      \n      //Awkward as hell, but this ensures we actually transition to the newly created project\n\t    //Without this, the screen flickers briefly to the new project, but ends up stuck on the old project\n      this.setActiveProject(proj);\n      this.setActiveProject(proj);\n    });\n    return prom;\n  }\n\n  setActiveProject(proj: Project): void {\n    //saves change as last visited project\n    window.localStorage.setItem(\"lastProj\", JSON.stringify(proj))\n    try {\n      this._activeProject.next(proj);\n    } catch (error) {\n      return error\n    }\n  }\n\n  \n  update(data: ProjectRequest): void{\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.project.id}/`, data).subscribe(\n      (resp) => {\n        this._activeProject.next(resp);\n      }\n    );\n  }\n\n  //Note: This will delete the project for everyone, if the project is shared.\n  delete(data: Project):void{\n    console.log(\"We are in the function...\")\n    this._deletingProjects.next([...this._deletingProjects.value, {...data, deleting: true}]);\n    this.updateProjectsList();\n\n    this.http.delete(environment.apiUrl  + `projects/${data.id}/`)\n      .subscribe( (resp) => {\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\n\n        this._deletingProjects.next(this._deletingProjects.value.filter(p => p.id !== data.id));\n        //These next two lines might be causing problems. Adding getProjects causes duplicates during project creation,\n        //So I'm thinking that calling these here might be the root of my delete woes, as they're restoring the project I just\n        //deleted...\n        this.updateProjectsList();\n        this.getProjects();\n        //As elegant as a brick to the face, but this solves the delete issues...\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\n        // this._projects.next([...this._projects.value]);\n        // console.log(this._projects.value[0])\n        // this._activeProject.next(this._projects.value[0]);\n      }, error => {\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\n        \n        this._deletingProjects.next(this._deletingProjects.value.map(p => {\n          return p.id === data.id\n            ? {...p, deleting: false, deletingFailed: true}\n            : p;\n        }));\n        this.updateProjectsList();\n\n        this.getProjects();\n\n        this.notificationsService.showErrorToast('Could not delete project!');\n        console.error(error);\n      }); // end of error\n  }\n\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\n      tap(users => {\n        this._projectUsers.next(users);\n      }));\n  }\n\n  addUserToProject(proj: Project, uname: string): void {\n    const payload = {\n      username: uname\n    };\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\n      .subscribe( (resp) => {\n        this.getProjectUsers(proj).subscribe();\n      });\n  }\n\n  deleteUserFromProject(proj:Project, user:string): void {\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\n    .subscribe((resp)=>{\n      this.getProjectUsers(proj).subscribe();\n    },error =>{\n      //TODO: Create popup for an error message.\n      console.log(error)\n    })\n  }\n}\n","import { Component, Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\nimport {Group} from '../models/models';\nimport { map, first } from 'rxjs/operators';\nimport { GroupsService } from './groups.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProjectsService } from './projects.service';\nimport { GeoDataService } from './geo-data.service';\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\nimport { fadeInItems } from '@angular/material';\nimport { Feature, FeatureCollection } from 'geojson';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormsService {\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\n  public forms: Observable<Group[]> = this._forms.asObservable();\n\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\n\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\n\n  \n\n  private activeGroup\n  private groupList\n  private featureList: Array<any> = [];\n  features: FeatureCollection;\n  private selectedProject\n  private selectedFeatureID\n  private selectedFeature\n  tempGroup: Array<Feature>;\n\n  constructor(private groupsService: GroupsService,\n\t\t\t  private projectsService: ProjectsService,\n\t\t\t  private geoDataService: GeoDataService) {\n\n\t\t\t\tthis.groupsService.activeGroup.subscribe((next) => {\n\t\t\t\t\tthis.activeGroup = next;\n\t\t\t\t});\n\t\t\t\n\t\t\t\tthis.groupsService.groups.subscribe((next) => {\n\t\t\t\t\tthis.groupList = next;\n\t\t\t\t});\n\t\t\t\n\t\t\t\tthis.projectsService.activeProject.subscribe(next => {\n\t\t\t\t\tthis.selectedProject = next;\n\t\t\t\t});\n\t\t\t\n\t\t\t\tthis.groupsService.activeFeatureId.subscribe(next => {\n\t\t\t\t\tthis.selectedFeatureID = next\n\t\t\t\t})\n\n\t\t\t\tthis.groupsService.activeFeature.subscribe(next => {\n\t\t\t\t\tthis.selectedFeature = next\n\t\t\t\t});\n\t\t\t\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\n\t\t\t\t\tthis.features = fc;\n\t\t\t  \n\t\t\t\t\tif (this.features != undefined) {\n\t\t\t\t\t  this.featureList = this.features.features;\n\t\t\t\t\t}\n\t\t\t\t  });\n\t\t\t  }\n  // TODO This should be stored in projects api later on (or not)\t//I think it's good here, but this might be good to fully pull out later -Ben\n  addForm(groupName: string, formItem: any): void {\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => {\n\t\treturn groupList.map(groupObj => {\n\t\t  if (groupObj.groupName == groupName) {\n\t\t\tgroupObj.formList.push(formItem);\n\t\t  }\n\t\t  return groupObj;\n\t\t});\n\t  })).subscribe(current => {this._forms.next(current);});\n\n\n\tthis.changeGroupForm(groupName);\n  }\n\n  updateFormItem() {\n\tlet group: any = {};\n\n\tif (this._activeFormList.value) {\n\t  this._activeFormList.value.forEach(e =>\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\n\t\t: new FormControl(e.value || '')\n\t\t\t\t\t\t\t\t\t\t);\n\n\t  this._formGroup.next(new FormGroup(group));\n\t}\n  }\n\n  changeGroupForm(groupName: string) {\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  return groupObj.formList;\n\t\t}\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\n\n\tthis.updateFormItem();\n  }\n\n  checkDefault(selectedColor:string){\n\tif(selectedColor === \"default\") {\n\t\ttry {\n\t\t\tselectedColor = this.selectedFeature.styles.color\n\t\t} catch (error) {\n\t\t\tselectedColor = \"#00C8FF\"\n\t\t}\n\t}\n\treturn selectedColor\n  }\n\n  //Inputs:\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\n  //This method accesses group services to retrive the current group's icon as well\n  saveStyles(selectedColor:string, currentID:number){\n\tlet icon:string\n\tlet payload\n\tlet style\n\n\t//A check to see if the color isn't supposed to be changed\n\tselectedColor = this.checkDefault(selectedColor)\n\n\t//Cycles through each group until it finds one that matches the active group\n\tthis.groupList.forEach(group => {\n\t\tif ((group.name === this.activeGroup)) {\n\t\t\ticon = group.icon\n\n\t\t\t//Creates a temporary group with a copy of the current groups info\n\t\t\tlet tempGroup = [{\n\t\t\t\tname: group.name,\n\t\t\t\tcolor: group.color,\n\t\t\t\ticon: group.icon\n\t\t\t}]\n\t\t\t\n\t\t\t//And adds the temp group to a payload along with the necessary style infromation\n\t\t\tpayload = {\n\t\t\t\tgroup: tempGroup,\n\t\t\t\tstyle: {\n\t\t\t\t\tfaIcon: icon,\n\t\t\t\t\tcolor: selectedColor\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstyle = {\n\t\t\t\tfaIcon: icon,\n\t\t\t\tcolor: selectedColor\n\t\t\t}\n\t\t}\n\t});\n\n\t//Finally, sends the payload and projectID to GeoAPI to update the feature\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, currentID, payload)\n\tthis.geoDataService.updateFeatureStyle(this.selectedProject.id, currentID, style)\n  }\n\n  addGroup(groupName: string) {\n\tlet groupObject = new Group();\n\tgroupObject.formList = [];\n\n\tgroupObject.groupName = groupName;\n\n\tthis.forms.pipe(\n\t  first()\n\t).subscribe(current => {\n\t\tcurrent.push(groupObject);\n\t\tthis._forms.next(current);\n\t});\n  }\n\n  deleteForm(groupName: string, form: any) {\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\n\t\t}\n\t\treturn groupObj\n\t  }))).subscribe(current => this._forms.next(current));\n\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\n\t\t}\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\n\n\tthis.changeGroupForm(groupName);\n  };\n\n  renameForm(groupName: string, form: any, label: string) {\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList.forEach(formItem => {\n\t\t\tif (formItem.label == form.label) {\n\t\t\t  formItem.label = label;\n\t\t\t}\n\t\t  });\n\t\t}\n\t\treturn groupObj\n\t  }))).subscribe(current => {this._forms.next(current);});\n\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList.forEach(formItem => {\n\t\t\tif (formItem.label == form.label) {\n\t\t\t  formItem.label = label;\n\t\t\t}\n\t\t  });\n\t\t}\n\t\treturn groupObj.formList;\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\n\n\tthis.changeGroupForm(groupName);\n  }\n\n  renameOption(groupName: string, opt: any, form: any, label: string) {\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList.forEach(formItem => {\n\t\t\tif (formItem.label == form.label) {\n\t\t\t  formItem.options.forEach(option => {\n\t\t\t\tif (option.label == opt.label) {\n\t\t\t\t  option.label = label;\n\t\t\t\t}\n\t\t\t  });\n\t\t\t}\n\t\t  });\n\t\t}\n\t\treturn groupObj;\n\t  }))).subscribe(current => this._forms.next(current));\n\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList.forEach(formItem => {\n\t\t\tif (formItem.label == form.label) {\n\t\t\t  formItem.options.forEach(option => {\n\t\t\t\tif (option.label == opt.label) {\n\t\t\t\t  option.label = label;\n\t\t\t\t}\n\t\t\t  });\n\t\t\t}\n\t\t  });\n\t\t}\n\t\treturn groupObj.formList;\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\n\n\tthis.changeGroupForm(groupName);\n  }\n\n  deleteOption(groupName: string, opt: any, form: any) {\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList.forEach(formItem => {\n\t\t\tif (formItem.label == form.label) {\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\n\t\t\t}\n\t\t  });\n\t\t}\n\t\treturn groupObj;\n\t  }))).subscribe(current => {this._forms.next(current)});\n\n\tthis.forms.pipe(\n\t  first(),\n\t  map(groupList => groupList.map(groupObj => {\n\t\tif (groupObj.groupName == groupName) {\n\t\t  groupObj.formList.forEach(formItem => {\n\t\t\tif (formItem.label == form.label) {\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\n\t\t\t}\n\t\t  });\n\t\t}\n\t\treturn groupObj.formList;\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\n\n\tthis.changeGroupForm(groupName);\n  }\n\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\n\tlet finalArray = [];\n\n\tif (groupObj[0] != undefined) {\n\t  finalArray = groupObj[0].formList;\n\t}\n\n\treturn finalArray;\n  }\n\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\", extra: []};\n  tagData = []\n  checkedOptions = []\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\n  notebook = []; //Var for storing note tags\n\n\n  saveTag(gName: string, tag: tags, tLabel: string): void{\n\tconst index = this.tempData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\n\n\tif (index > -1) {\n\t\tthis.tempData[index].label = tag.label;\n\t}\n\telse {\n\t\ttag.groupName = gName;\n\t\tthis.tempData.push(tag);\n\t}\n}\n\ntempData = [];\ngetTags(): tags[]{\n\tthis.tempData = [];\n\tthis.tempData = this.tagData\n\n\tfor (let feat of this.featureList){\n\t\t  if(feat.properties.tag != undefined){\n\t\t\t  feat.properties.tag.forEach(tag => {\n\t\t\t\tconst index = this.tempData.findIndex(item => item.groupName === tag.groupName  && item.label === tag.label && item.feature === tag.feature);\n\t\t\t\tif(index == -1){\n\t\t\t\t\tthis.tempData.push(tag)\n\t\t\t\t}\n\t\t\t  });\n\t\t  }\n\t  }\n\n\treturn this.tempData;\n}\n\nnewTag: object[] = [];\ndeleteTag(gName: string, tag: tags): void{\n\n\tlet data = this.tempData;\n\twhile(true){\n\t\tconst index = data.findIndex(item => item.groupName === gName && item.label === tag.label && item.type === tag.type);\n\t\t// delete this.exampleNote[index];\n\t\tif (index > -1) {\n\t\tdata.splice(index, 1);\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\tthis.tempData = data;\n\tconsole.log(this.tempData)\n}\n\n\noptData = []\ndeleteOpt(gName:string, opt:object, tag: tags): void {\n\tconst index = this.optData.findIndex(item => item.groupName === gName && item.label === tag.label);\n\tif (index > -1) {\n\t\tconst ind = this.optData[index].options.findIndex(item => item === opt)\n\t\tif (ind > -1){\n\t\t\tthis.optData[index].options.splice(ind,1);\n\t\t}\n\t}\n\n}\n\naddCheckedOpt(opt:object, id: number, group: string, label:string): void {\n\tlet option = { key: opt['key'], label: opt['label'], choice: opt['key'], id: id , group: group, title: label}\n\tthis.checkedOptions.push(option)\n\tlet icon:string\n\tlet payload\n\tthis.groupList.forEach(tGroup => {\n\t\tif (tGroup.name == group) {\n\t\t\tthis.tempGroup = tGroup.features;\n\t\t\t\ticon = tGroup.icon\n\t\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\n\t\t\t\tlet tempGroup = [{\n\t\t\t\t\tname: tGroup.name,\n\t\t\t\t\tcolor: tGroup.color,\n\t\t\t\t\ticon: tGroup.icon\n\t\t\t\t}]\n\t\t\t\t\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\n\t\t\t\tpayload = {\n\t\t\t\t\tgroup: tempGroup,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfaIcon: icon,\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\n\t\t\t\t\t},\n\t\t\t\t\ttag:[]\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfor (let feat of this.tempGroup) {\n\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\n\t\t\t\tfeat.properties.group.forEach(group => {\n\t\t\t\t\tif(group.name != this.activeGroup){\n\t\t\t\t\t\tlet tempGroup = {\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tcolor: group.color,\n\t\t\t\t\t\t\ticon: group.icon\n\t\t\t\t\t\t}\n\t\t\t\t\tpayload.group.push(tempGroup)}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t  // code from here is a mess\n\t\t\t  if(feat.properties.tag != undefined){\n\t\t\t\tthis.tempData.forEach(tag => {\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\n\t\t\t\t\t\ttag.extra.push(option)\n\t\t\t\t\t}\n\t\t\t\t  payload.tag.push(tag)\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\n\t\t\t// Clear out the tag section\n\t\t\tpayload.tag = []\n\t}\n}\n\ndeleteCheckedOpt(opt:object, id:number, group: string, label: string): void{\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\n\tthis.checkedOptions.splice(index,1)\n\n\tlet icon:string\n\tlet payload\n\tthis.groupList.forEach(tGroup => {\n\t\tif (tGroup.name == group) {\n\t\t\tthis.tempGroup = tGroup.features;\n\t\t\t\ticon = tGroup.icon\n\t\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\n\t\t\t\tlet tempGroup = [{\n\t\t\t\t\tname: tGroup.name,\n\t\t\t\t\tcolor: tGroup.color,\n\t\t\t\t\ticon: tGroup.icon\n\t\t\t\t}]\n\t\t\t\t\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\n\t\t\t\tpayload = {\n\t\t\t\t\tgroup: tempGroup,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfaIcon: icon,\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\n\t\t\t\t\t},\n\t\t\t\t\ttag:[]\n\t\t\t\t}\n\t\t}\n\t\t});\n\t\tfor (let feat of this.tempGroup) {\n\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\n\t\t\t\tfeat.properties.group.forEach(group => {\n\t\t\t\t\tif(group.name != this.activeGroup){\n\t\t\t\t\t\tlet tempGroup = {\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tcolor: group.color,\n\t\t\t\t\t\t\ticon: group.icon\n\t\t\t\t\t\t}\n\t\t\t\t\tpayload.group.push(tempGroup)}\n\t\t\t\t});\n\t\t\t}\n\t\t\t  \n\n\t\t\t  // code from here is a mess\n\t\t\t  if(feat.properties.tag != undefined){\n\t\t\t\tthis.tempData.forEach(tag => {\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\n\t\t\t\t\t\ttag.extra.splice(index,1)\n\t\t\t\t\t}\n\t\t\t\t  payload.tag.push(tag)\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\n\t\t\t// Clear out the tag section\n\t\t\tpayload.tag = []\n\t}\n}\n\nnewOpt: object[] = [];\ngetCheckedOpt(): any[]{\n\tthis.newOpt = []\n\tfor (let feat of this.featureList){\n\t\t  if(feat.properties.tag != undefined){\n\t\t\t  feat.properties.tag.forEach(tag => {\n\t\t\t\tthis.newOpt.push(tag.extra)\n\t\t\t  });\n\t\t  }\n\t  }\n\treturn this.newOpt;\n}\n\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\nupdateSelectedRadio(selection:string, componentId: number, feature: number, group: string, label: string){ \n\n\tlet icon:string\n\tlet payload\n\tthis.groupList.forEach(tGroup => {\n\t\tif (tGroup.name == group) {\n\t\t\tthis.tempGroup = tGroup.features;\n\t\t\t\ticon = tGroup.icon\n\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\n\t\t\t\tlet tempGroup = [{\n\t\t\t\t\tname: tGroup.name,\n\t\t\t\t\tcolor: tGroup.color,\n\t\t\t\t\ticon: tGroup.icon\n\t\t\t\t}]\n\t\t\t\t\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\n\t\t\t\tpayload = {\n\t\t\t\t\tgroup: tempGroup,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfaIcon: icon,\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\n\t\t\t\t\t},\n\t\t\t\t\ttag:[]\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfor (let feat of this.tempGroup) {\n\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\n\t\t\t\tfeat.properties.group.forEach(group => {\n\t\t\t\t\tif(group.name != this.activeGroup){\n\t\t\t\t\t\tlet tempGroup = {\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tcolor: group.color,\n\t\t\t\t\t\t\ticon: group.icon\n\t\t\t\t\t\t}\n\t\t\t\t\tpayload.group.push(tempGroup)}\n\t\t\t\t});\n\t\t\t}\n\t\t\t  \n\t\t\t  // code from here is a mess\n\t\t\t  //Which means my problem is probably somewhere in here\n\t\t\t  if(feat.properties.tag != undefined){\n\t\t\t\tthis.tagData.forEach(tag => {\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group){\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compId'] === componentId && item['groupName'] === group && item['label'] === label);\n\n\t\t\t\t\t\tif(index > -1){\n\t\t\t\t\t\t\ttag.extra[index]['option'] = selection\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tlet rOption = {option: selection, id: feature, compId: componentId, groupName: group, label: label}\n\t\t\t\t\t\t\ttag.extra.push(rOption)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t  payload.tag.push(tag)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\n\t\t\t// Clear out the tag section\n\t\t\tpayload.tag = []\n\t}\n}\n\n//TODO: Rename this function, it's called getSelectedRadio, but it's used as the getter for every tag type\ngetSelectedRadio(): any[] {\n\tthis.newOpt = []\n\tfor (let feat of this.featureList){\n\t\t  if(feat.properties.tag != undefined){\n\t\t\t  feat.properties.tag.forEach(tag => {\n\t\t\t\tthis.newOpt.push(tag.extra)\n\t\t\t  });\n\t\t  }\n\t  }\n\treturn this.newOpt;\n }\n\n//Notes tag functions\nupdateNotes(change, componentID: number, feature: number, group:string, label:string){\n\tlet icon:string\n\tlet payload\n\tthis.groupList.forEach(tGroup => {\n\t\tif (tGroup.name == group) {\n\t\t\tthis.tempGroup = tGroup.features;\n\t\t\t\ticon = tGroup.icon\n\t\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\n\t\t\t\tlet tempGroup = [{\n\t\t\t\t\tname: tGroup.name,\n\t\t\t\t\tcolor: tGroup.color,\n\t\t\t\t\ticon: tGroup.icon\n\t\t\t\t}]\n\t\t\t\t\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\n\t\t\t\tpayload = {\n\t\t\t\t\tgroup: tempGroup,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfaIcon: icon,\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\n\t\t\t\t\t},\n\t\t\t\t\ttag:[]\n\t\t\t\t}\n\t\t}\n\t\t});\n\n\t\tfor (let feat of this.tempGroup) {\n\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\n\t\t\t\tfeat.properties.group.forEach(group => {\n\t\t\t\t\tif(group.name != this.activeGroup){\n\t\t\t\t\t\tlet tempGroup = {\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tcolor: group.color,\n\t\t\t\t\t\t\ticon: group.icon\n\t\t\t\t\t\t}\n\t\t\t\t\tpayload.group.push(tempGroup)}\n\t\t\t\t});\n\t\t\t}\n\t\t\t  \n\n\t\t\t  // code from here is a mess\n\t\t\t  if(feat.properties.tag != undefined){\n\t\t\t\tthis.tagData.forEach(tag => {\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group && tag.type === \"text\"){\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compID'] === componentID && item['groupName'] === group  && item['label'] === label);\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\n\n\t\t\t\t\t\tif(index > -1){\n\t\t\t\t\t\t\t// console.log(tag.extra)\n\t\t\t\t\t\t\t// console.log(tag.extra[index])\n\t\t\t\t\t\t\ttag.extra[index]['option'] = change\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tlet rOption = {option: change, id: feature, groupName: group, compID: componentID, label:label} \n\t\t\t\t\t\t\t// console.log(rOption)\n\t\t\t\t\t\t\ttag.extra.push(rOption);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t  if(tag.feature == feature){payload.tag.push(tag)}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// console.log(typeof(payload.tag))\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\n\t\t\t// Clear out the tag section\n\t\t\tpayload.tag = []\n\t\t}\n\t// if (index > -1) {\n\t// \t// console.log(\"IT WORKED\")\n\t// \tthis.notebook[index]['option'] = change\n\t// }\n\t// else {\n\t// \tlet rOption = {option: change, id: feature, groupName: group} \n\t// \tthis.notebook.push(rOption);\n\t// \t// console.log(this.tagData)\n\t// }\n}\n\ngetNotes(): any[]{ return this.notebook }\n\n}\n\n\n//Todo: put this in models so we can reference it like we do the Features type\nexport interface tags {\n\ttype: string,\n\tgroupName: string,\n\tlabel: string,\n\toptions: Array<Group>,\n\tfeature: string | number,\n\textra: Array<Group>\n}","import { Injectable } from '@angular/core';\nimport { Feature, FeatureCollection} from '../models/models';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GeoDataService } from './geo-data.service';\nimport { FormsService, tags } from './forms.service';\nimport { feature } from '@turf/turf';\nimport { AbstractEmitterVisitor } from '@angular/compiler/src/output/abstract_emitter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureService {\n  private featureCollection: FeatureCollection;\n  private _features: BehaviorSubject<FeatureCollection>;\n  public features$: Observable<FeatureCollection>;\n  private _tags: BehaviorSubject<tags[]>;\n  public tags$: Observable<tags[]>;\n  private tagList: tags[];\n\n  constructor(private geoDataService: GeoDataService,\n              private formsService: FormsService) {\n    this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\n    this.features$ = this._features.asObservable(); \n\n    this._tags = new BehaviorSubject<tags[]>( [] );\n    this.tags$ = this._tags.asObservable();\n\n    this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\n      this._features.next(fc)\n      this.featureCollection = fc\n      // console.log(this.featureCollection)\n\n      //Update the tag list alongside the features\n      try {\n        if( this.tagList == undefined ) { //Only update if tagList is empty, after retrieval, the only way to edit tags will be to edit this list\n            this.tagList = this.formsService.getTags()\n            this._tags.next( this.tagList )\n        }\n      } catch (error) {}\n      });\n  }\n\n  //Takes the feature to be deleted, and filters it out of the feature list\n  deleteFeature(feat:Feature): void {\n    this.featureCollection.features = this.featureCollection.features.filter(featListfeat => featListfeat.id != feat.id)\n    this._features.next(this.featureCollection)  //Update the observable\n    this.geoDataService.deleteFeature(feat)\n  }\n\n  //Takes a list of features, and deletes them from the observable in a more efficient manner\n  bulkFeatureDelete(delFeats:Array<Feature>): void {\n    delFeats.forEach(feat => {\n      //Filter out every feature in delFeats from the master list\n      this.featureCollection.features = this.featureCollection.features.filter(featListFeature => featListFeature.id != feat.id)\n      this.geoDataService.deleteFeature(feat)\n    })\n    this._features.next(this.featureCollection)  //Update the observable with the filtered list\n  }\n\n  //saveFeatures takes a feature list and passes it to GeoAPI to save\n  //With this scheme, you can just update a feature's property\n  saveFeatures(features:FeatureCollection): void {\n    this._features.next(features)  //Update the observable\n    features.features.forEach(feat => {\n      this.geoDataService.updateFeatureProperty(feat.project_id, Number(feat.id), feat.properties)\n    })\n    this.geoDataService.getFeatures(features.features[0].project_id)\n  }\n\n  //This might be a little short to consider a function, but it saves me from writing it every time...\n  //Assumes that the feature passed in has had it's properties updated or changed before being passed in\n  saveFeature(feat:Feature): void {\n    this.geoDataService.updateFeatureProperty(feat.project_id, Number(feat.id), feat.properties)\n  }\n\n  //Takes a feature, and optionally an updated property section\n  //If featprop is null, it assumes the passed in feature was already updated with the new properties\n  updateFeatureProperties(feature:Feature, featProp=null): void {\n    //If featprop has a value, update the feature's properties to the new section\n    if( featProp != null) {\n      feature.properties = featProp\n    }\n    //Update and save the list\n    this.featureCollection.features.forEach(feat => {\n      if(feat.id == feature.id){\n        feat = feature\n      }\n    })\n    this.saveFeature(feature)\n  }\n  \n  //Update Styles takes an object defining new style options and the feature they should be connected with\n  updateStyle(feature:Feature, style): void {\n    //Update and save the list\n    this.featureCollection.features.forEach(feat => {\n      if(feat.id == feature.id){\n        feat.styles = style\n      }\n    })\n    this.geoDataService.updateFeatureStyle(feature.project_id, Number(feature.id), feature.properties)\n  }\n\n  //Save tags has 2 purposes, first it updates every feature's tag list to reflect the change, then it sends the features to GeoAPI to be saved\n  saveTags(tagList): void {\n    this._tags.next(tagList) //Update the observable\n    let customList = []\n    //Update each feature's tag list\n    this.featureCollection.features.forEach(feat => {\n      \n      tagList.forEach(tag => {\n        if (feat.id == tag.feature){\n          customList.push(tag)\n        }}) //end of for each tag\n\n      feat.properties.tag = customList\n      customList = []\n    });\n    this.saveFeatures(this.featureCollection) //Save updated features to backend\n  }\n\n  //Takes the entire tag that should be deleted and filters the list from it\n  //NOTE: This does sucessfully delete multiple tags at a time, just not if you delete multiple and immediately reload...\n  deleteTag(tag:tags): void {\n    //If groupname and label of the passed in tag match, remove from list\n    let tempTags = []\n    this.tagList.forEach( (listTag) => {\n      if( !((listTag.groupName == tag.groupName) && (listTag.label == tag.label) && (listTag.type == tag.type) ) ){\n        tempTags.push(listTag)\n      }\n    })\n    this.tagList = tempTags\n    this.saveTags(this.tagList) //saves tags to backend\n  }\n\n  renameTag(tag:tags, newName:string): void {\n    let oldName = tag.label //The passed in tag has the old tag's name\n\n    this.tagList.forEach( listTag => {\n      if( (listTag.label == oldName) && (listTag.type == tag.type) ) {\n        listTag.label = newName\n      }\n    })\n\n    this.saveTags(this.tagList) //saves tags to backend\n  }\n\n  createTag(newTag:tags, activeGroup:string, groupList: Array<any>): void {\n\n    this.featureCollection.features.forEach( listFeature => { //Loop through every feature in the project\n      if(listFeature.properties.group) {\n        listFeature.properties.group.forEach( group => { //Loop through every group attached to the feature\n          //NOTE: While it is tempting to just edit the passed in tag, this causes a strange glitch\n          if( group.name == activeGroup ) {\n            let tag:tags = {\n              extra:newTag.extra,\n              feature: listFeature.id,\n              groupName: newTag.groupName,\n              label: newTag.label,\n              options: newTag.options,\n              type: newTag.type\n            }\n            this.tagList.push(tag)\n          } // end of if statement\n        }) // end of for each group \n      } // end of if prop group\n    }) // end of for each listFeature\n\n    this.saveTags(this.tagList)\n  } // end of creatTag function\n\n  bulkTagDelete(tagList: Array<any>): void {\n    tagList.forEach( delTag => {\n      //Filter out each tag from the tag list\n      this.tagList = this.tagList.filter(listTag => listTag != delTag)\n    })\n    this.saveTags(this.tagList) //saves tags to backend\n  }\n\n  updateExtra(change:any, componentID: number, feature: number, groupName:string, label:string, type:string): void{\n    let nOption\n    this.tagList.forEach( tag => {\n      // updating notes\n      if(tag.feature === feature && tag.groupName === groupName && tag.type === type){\n        const index = tag.extra.findIndex(item => item['id'] === feature && item['compID'] === componentID && item['groupName'] === groupName  && item['label'] === label);\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\n\n\t\t\t\t\t\tif(index > -1){\n\t\t\t\t\t\t\t// console.log(tag.extra)\n\t\t\t\t\t\t\t// console.log(tag.extra[index])\n\t\t\t\t\t\t\ttag.extra[index]['option'] = change\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n              \n\t\t\t\t\t\t\tnOption = {option: change, id: feature, groupName: groupName, compID: componentID, label:label} \n\t\t\t\t\t\t\t// console.log(rOption)\n\t\t\t\t\t\t\ttag.extra.push(nOption);\n\t\t\t\t\t\t}\n      } // end of updating notes\n\n\n\n    }) // end of for each tag\n    this.saveTags(this.tagList)\n  } // end of updateExtra function\n\n  updateChecked(opt:object, id: number, group: string, label:string, check:string): void{\n    let nOption \n    this.tagList.forEach( tag => {\n      if(check == \"create\"){\n        if(tag != undefined){\n            if(tag.feature === id && tag.groupName === group){\n              nOption = { option: opt['key'], id: id , group: group, label: label}\n              console.log(nOption)\n              tag.extra.push(nOption)\n            }\n        }\n      } // end of create\n      else{\n        if(tag.feature === id && tag.groupName === group){\n          const index = tag.extra.findIndex(item => item['option'] === opt['key'] && item['id'] === id &&  item['group'] === group && item['label'] === label)\n          // item.label === opt['label'] && item.id === id && item.group === group && item.title === label\n          tag.extra.splice(index,1)\n        }\n      } // end of else\n    }) // end of for each tag\n    this.saveTags(this.tagList)\n  } // end of updateChecked function\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { FormsService, tags } from '../../../services/forms.service';\nimport { GroupsService } from '../../../services/groups.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Feature, Project } from 'src/app/models/models';\nimport { GeoDataService } from 'src/app/services/geo-data.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { FeatureService } from 'src/app/services/feature.service';\n\n\n@Component({\n  selector: 'app-tag-generator',\n  templateUrl: './tag-generator.component.html',\n  styleUrls: ['./tag-generator.component.scss']\n})\nexport class TagGeneratorComponent implements OnInit {\n  formLabel: string;\n  formOptions: Array<any> = [];\n  selectedGroup: string;\n  showOpt: string;\n  formType: string;\n  changed: boolean = false;\n  labelFilter: string;\n  formItemList: Array<any> = [];\n  activeGroup: string;\n  optionFilter: string;\n  formName: string;\n  formValue: string;\n  formRequired: boolean;\n  openOption: any = {};\n  enabledControls: Array<string> = [];\n  showSubitem: boolean = true;\n  activeFormList: Array<any>;\n  groupList: Array<any>;\n  groups$: Subscription;\n  tempGroup: Array<Feature>;\n  private selectedProject;\n  newTag: object[] = [];\n  newGroup:object[] = [];\n\n  constructor(\n\tprivate formsService: FormsService,\n\tprivate groupsService: GroupsService,\n\tprivate dialog: MatDialog,\n\tprivate router: Router,\n\tprivate geoDataService: GeoDataService,\n\tprivate projectsService: ProjectsService,\n\tprivate featureService: FeatureService) { }\n\n  ngOnInit() {\n\tthis.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n\n\tthis.formsService.activeFormList.subscribe((next) => {\n\t  this.activeFormList = next;\n\t});\n\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\n\t\tthis.groupList = next;\n\t  });\n\n\tthis.projectsService.activeProject.subscribe(next => {\n\t\tthis.selectedProject = next;\n\t});\n\n\n\tthis.formOptions = [];\n\tthis.formItemList = [];\n\tthis.formType = 'text';\n\tthis.formName = '';\n\tthis.formLabel = '';\n\tthis.formValue = '';\n\tthis.formRequired = false;\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\n  }\n\n  inputFormLabel (event: any) {\n\tthis.formLabel = event.target.value;\n  }\n\n  addOptionItem(value: string) {\n\tif (value) {\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\n\t  if (formWithValue.length == 0 && value.length != 0) {\n\t\tthis.formOptions.push({\n\t\t  key: value[0],\n\t\t  label: value,\n\t\t});\n\t  }\n\t}\n  }\n\n  deleteOption(opt: any) {\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\n  }\n\n  openRenameModal(template: TemplateRef<any>, name: string) {\n\tthis.selectedGroup = name;\n\tthis.dialog.open(template);\n  }\n\n  openRenameOptionModal(template: TemplateRef<any>) {\n\tthis.dialog.open(template);\n  }\n\n\n  renameOption(opt: any, label: string) {\n\tif (this.showOpt == \"show-option\") {\n\t  this.showOpt = \"no-show-option\";\n\t} else {\n\t  this.showOpt = \"show-option\";\n\t}\n\n\tlabel = label.toLowerCase();\n\tthis.formOptions.forEach(e => {\n\t  if (e.label == opt.label) {\n\t\te.label = label;\n\t  }\n\t});\n  }\n\n  selectInputForm (name: string) {\n\tthis.formType = name;\n\tthis.formLabel = '';\n\tthis.formOptions = [];\n  }\n\n  clearOption() {\n\tthis.optionFilter = '';\n  }\n\n  clearLabel() {\n\tthis.labelFilter = '';\n  }\n\n  addFormItem() {\n\t\t//Assemble the new tag\n\t\tlet formItem: tags = {\n\t\t\ttype: this.formType,\n\t\t\tgroupName: this.activeGroup,\n\t\t\tlabel: this.formLabel,\n\t\t\toptions: [],\n\t\t\tfeature: 0,\n\t\t\textra: []\n\t\t}\n\t\tthis.openOption[this.formLabel] = false;\n\t\t//Adds the options for drop down, checklist, and radio buttons\n\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\n\t\t\tlet myOpts = [];\n\t\t\tfor (const opt of this.formOptions) {\n\t\t\t  myOpts.push({\n\t\t\t\tkey: opt[0],\n\t\t\t\tlabel: opt,\n\t\t\t  })\n\t\t\t}\n\t\t\tformItem.options = this.formOptions;\n\t\t  }\n\t//Pass it to feature and form service to propogate to all features in a group\n\tthis.featureService.createTag(formItem, this.activeGroup, this.groupList)\n\t// this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\n\n\t//Reset user-defined fields to blank options\n\tthis.formLabel = '';\n\tthis.formOptions = [];\n\tthis.labelFilter = '';\n\tthis.changed = true;\n\t//Navigate back to the display panel\n\tthis.groupsService.setActivePane(\"tagger\");\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\n   }\n\n  cancelCreate() {\n\tthis.groupsService.setActivePane(\"tagger\");\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\n  }\n\n  expandPanel() {\n\tthis.showSubitem = !this.showSubitem;\n\tif (this.showSubitem) {\n\n\t} else {\n\t}\n  }\n}\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\nimport { GroupsService } from '../../../services/groups.service';\nimport { FormsService, tags } from '../../../services/forms.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GeoDataService } from 'src/app/services/geo-data.service';\nimport { Feature, FeatureCollection } from 'geojson';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { FeatureService } from 'src/app/services/feature.service';\n\n@Component({\n  selector: 'app-tag-images',\n  templateUrl: './tag-images.component.html',\n  styleUrls: ['./tag-images.component.scss']\n})\nexport class TagImagesComponent implements OnInit {\n  activeGroup: string;\n  payload: any;\n  selectedGroup: string;\n  openOption: any = {};\n  activeFeatureId: number;\n  private formGroup$: Subscription;\n  private activeGroup$: Subscription;\n  private activeFeatureId$: Subscription;\n  private groupList;\n  private selectedProject\n  form: FormGroup;\n  showSubitem: boolean = true;\n  tagList: tags[] = [];\n  newTag: tags[] = [];\n  newTagValue = \"\"\n  featureList: Array<any> = [];\n  tempGroup: Array<Feature>;\n\n  constructor(\n\tprivate groupsService: GroupsService,\n\tprivate formsService: FormsService,\n\tprivate dialog: MatDialog,\n\tprivate router: Router,\n\tprivate projectsService: ProjectsService,\n\tprivate geoDataService: GeoDataService,\n\tprivate featureService: FeatureService) { }\n\n  ngOnInit() {\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\n\t  this.activeFeatureId = next;\n\t});\n\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\n\t  this.form = next;\n\t});\n\n\tthis.groupsService.groups.subscribe((next) => {\n\t\tthis.groupList = next;\n\t});\n\tthis.projectsService.activeProject.subscribe(next => {\n\t\tthis.selectedProject = next;\n\t});\n\n\tthis.featureService.features$.subscribe( (fc: FeatureCollection) => {\n\t\tthis.featureList = fc.features;\n\t  });\n\t\n\tthis.featureService.tags$.subscribe( tags => {\n\t\tthis.tagList = tags\n\t})\n\n\t  // this is to get the list of tags so far\n\t  for (let feat of this.featureList){\n\t\t  if(feat.properties.tag != undefined){\n\t\t\t  feat.properties.tag.forEach(tag => {\n\t\t\t\t  const index = this.newTag.findIndex(item => item.groupName === tag.groupName  && item.label === tag.label && item.feature === tag.feature);\n\t\t\t\t\tif(index == -1){\n\t\t\t\t\t\tthis.newTag.push(tag)\n\t\t\t\t\t}\n\t\t\t  });\n\t\t  }\n\t  }\n  }\n\n  openRenameModal(template: TemplateRef<any>, name: string) {\n\tthis.selectedGroup = name;\n\tthis.dialog.open(template);\n  }\n\n  openRenameOptionModal(template: TemplateRef<any>) {\n\tthis.dialog.open(template);\n  }\n  \n  //Takes the name of the tag's group, and the tag itself to delete\n   deleteTag(tag: tags){\n\tthis.featureService.deleteTag(tag)  \n   }\n\n  //submits a tag's name change to geoAPI\n  renameTag(tag) {\n\t  this.featureService.renameTag(tag, this.newTagValue)\n\t  //Reset newTagValue for the next rename\n\t  this.newTagValue = ''\n\t  this.dialog.closeAll() //Ensures the window closes when using enter-submission\n\t}\n\n  openOptionToggle(label: string) {\n\tif (this.openOption[label]) {\n\t  this.openOption[label] = false;\n\t} else {\n\t  this.openOption[label] = true;\n\t}\n  }\n\n  createNewTag() {\n\tthis.groupsService.setActivePane(\"preset\");\n\tthis.router.navigateByUrl('/preset', {skipLocationChange: true});\n  }\n\n  onSubmit() {\n\tthis.payload = this.form.getRawValue();\n  }\n\n  ngOnDestroy() {\n\tthis.formGroup$.unsubscribe();\n\tthis.activeFeatureId$.unsubscribe();\n\tthis.activeGroup$.unsubscribe();\n  }\n\n  expandPanel() {\n\tthis.showSubitem = !this.showSubitem;\n\tif (this.showSubitem) {\n\n\t} else {\n\t}\n  }\n}\n","import {Injectable, NgModule} from '@angular/core';\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { NotFoundComponent} from './components/notfound/notfound.component';\nimport {AuthService} from './services/authentication.service';\nimport {MainComponent} from './components/main/main.component';\nimport { CallbackComponent } from './components/callback/callback.component';\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\n// import { TaggerComponent } from './components/tagger/tagger.component';\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\n\n@Injectable()\nexport class Activate implements CanActivate {\n  constructor(private authSvc: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\n\t if (this.authSvc.isLoggedIn()) {\n\t   return true;\n\t }\n\t this.authSvc.login();\n  }\n}\n\n\nconst routes: Routes = [\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\n\t// TODO IAN cache value on parent route\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\n\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\n  ]},\n\n  {path: 'callback', component: CallbackComponent},\n  {path: '404', component: NotFoundComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule],\n  providers: [Activate]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'viewer';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n\tthis.authService.login();\n  }\n}\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\nimport {Feature} from \"../models/models\";\n\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\n  let options = {\n    radius: 8,\n    fillColor: \"#d3d3d3\",\n    color: \"black\",\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  };\n  return circleMarker( latlng, options );\n}\n\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\n  return marker(latlng, {icon: ico});\n}\n\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\n  return marker(latlng, {icon: ico});\n}\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\n  return marker(latlng, {icon: ico});\n}\n\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\n  let marker;\n  if (feature.featureType() == 'image') {\n    marker = createImageMarker(feature, latlng);\n  } else if (feature.featureType() == 'collection'){\n    marker =  createCollectionMarker(feature, latlng);\n  } else if (feature.featureType() == 'video') {\n    marker = createVideoMarker(feature, latlng)\n  }\n  else {\n    marker = createCircleMarker(feature, latlng)\n  }\n  return marker;\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\n\nimport { GeoDataService} from '../../services/geo-data.service';\nimport { createMarker } from '../../utils/leafletUtils';\nimport {Feature} from 'geojson';\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\nimport * as turf from '@turf/turf';\nimport { AllGeoJSON } from '@turf/helpers';\nimport {filter, skip} from 'rxjs/operators';\nimport {Overlay} from '../../models/models';\nimport {AppEnvironment, environment} from '../../../environments/environment';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  map: L.Map;\n  mapType = 'normal';\n  activeFeature: Feature;\n  activeOverlay: Overlay;\n  features: FeatureGroup = new FeatureGroup();\n  overlays: Map<number, ImageOverlay>;\n  environment: AppEnvironment;\n\n  constructor(private GeoDataService: GeoDataService,\n\t\t\t  private route: ActivatedRoute,\n\t\t\t  ) {\n\n\t// Have to bind these to keep this being this\n\tthis.featureClickHandler.bind(this);\n\tthis.mouseEventHandler.bind(this);\n  }\n\n  ngOnInit() {\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\n\tthis.environment = environment;\n\tthis.overlays = new Map();\n\tthis.map = new L.Map('map', {\n\t center: [40, -80],\n\t zoom: 9\n\t});\n\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n\t  maxZoom: 19,\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n\t});\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n\t});\n\t// default to streetmap view;\n\tthis.map.addLayer(baseOSM);\n\n\tthis.loadFeatures();\n\n\t// Publish the mouse location on the mapMouseLocation stream\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\n\t  this.addRemoveOverlay(next);\n\t});\n\n\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\n\t  this.activeFeature = next;\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\n\t});\n\n\t// Listen for changes to the basemap\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\n\t  if (next == 'sat') {\n\t\tthis.map.removeLayer(baseOSM);\n\t\tthis.map.addLayer(satellite);\n\t  }\n\t  if (next == 'roads') {\n\t\tthis.map.removeLayer(satellite);\n\t\tthis.map.addLayer(baseOSM);\n\t  }\n\t});\n  }\n\n  addRemoveOverlay(ov: Overlay): void {\n\tif (this.overlays.has(ov.id)) {\n\t  this.features.removeLayer(this.overlays.get(ov.id));\n\t  this.overlays.delete(ov.id);\n\t} else {\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\n\t  this.overlays.set(ov.id, overlay);\n\t  this.features.addLayer(overlay);\n\t}\n\tthis.map.fitBounds(this.features.getBounds());\n  }\n\n\n  mouseEventHandler(ev: any): void {\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\n  }\n\n\n  /**\n   * Load Features for a project.\n   */\n  loadFeatures() {\n\tconst geojsonOptions = {\n\t  pointToLayer: createMarker\n\t};\n\tthis.GeoDataService.features.subscribe(collection => {\n\t  this.features.clearLayers();\n\t  const markers = L.markerClusterGroup({\n\t\ticonCreateFunction: (cluster) => {\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\n\t\t}\n\t  });\n\t  collection.features.forEach( d => {\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\n\n\t\tif (d.geometry.type == 'Point') {\n\t\t  markers.addLayer(feat);\n\t\t} else {\n\t\t  this.features.addLayer(feat);\n\t\t}\n\t  });\n\t  this.features.addLayer(markers);\n\t  this.map.addLayer(this.features);\n\t  try {\n\t\tthis.map.fitBounds(this.features.getBounds());\n\t  } catch (e) {}\n\t});\n\n  }\n\n  /**\n   *\n   * @param ev\n   */\n  featureClickHandler(ev: any): void {\n\tconst f = ev.layer.feature;\n\tthis.GeoDataService.activeFeature = f;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SystemSummary} from 'ng-tapis';\nimport { ApiService } from 'ng-tapis';\nimport {Observable, ReplaySubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgaveSystemsService {\n\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\n  private systemsList: SystemSummary[];\n\n  constructor(private tapis: ApiService) { }\n\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\n  list() {\n    this.tapis.systemsList({type: 'STORAGE'})\n      .subscribe(resp => {\n        this._systems.next(resp.result);\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\n      }, error => {\n        this._systems.next(null);\n        this._projects.next(null);\n      });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\nimport {RemoteFile} from 'ng-tapis';\nimport {Project} from '../models/models';\nimport {share} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport {AuthService} from './authentication.service';\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\nimport { SystemSummary} from 'ng-tapis';\n//import { verify } from 'ts-mockito';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TapisFilesService {\n\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\n  public currentListing: Array<RemoteFile>;\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\n  public lastSystem:SystemSummary //The last filesystem the user was browsing\n  public lastFile:RemoteFile; //The last directory the user was browsing\n  public noPreviousSelections:boolean\n\n  constructor(private tapis: ApiService,\n              private http: HttpClient,\n              private authService: AuthService,\n              private popup: MatSnackBar) { }\n\n  checkIfSelectable(file: RemoteFile): boolean {\n    if (file.type === 'dir') {return false; }\n    const ext = this.getFileExtension(file);\n    return this.IMPORTABLE_TYPES.includes(ext);\n  }\n\n  private getFileExtension(file: RemoteFile): string {\n    return file.name.split('.').pop().toLowerCase();\n  }\n\n  listFiles(system: string, path: string, offset: number, limit: number) {\n    return this.tapis.filesList({systemId: system, filePath: path, offset, limit});\n  }\n\n  public getParentPath(path: string): string {\n    const cleaned = path.replace('//', '/');\n    const arr = cleaned.split('/');\n    arr.pop();\n    const parentPath = arr.join('/');\n    return parentPath;\n  }\n\n  //saves project to a specified format in Design Safe's my Data section\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\n    //Constructs an object that configures the success/error pop-up\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\n    //construct the full URL that points to where the data will be stored\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\n\n    //construct a file to submit\n    let fileType = \"plain/text\";\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\n    let tmp = new Blob([data], {type: fileType})\n    let date = new Date()\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\n\n    //Creates a form data object which holds the file to be uploaded\n    let form:FormData = new FormData\n    form.append(\"fileToUpload\", file)\n\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\n    this.http.post(fullURL, form).subscribe(resp => {\n      console.log(resp)\n      let msg = \"Successfully saved file to \" + systemID + path\n      this.popup.open(msg, '', snackbarConfig)\n    }, error => {\n      console.log(error)\n      let msg = \"Faled to save file to \" + systemID + path\n      this.popup.open(msg, '', snackbarConfig)\n    })\n  }\n\n  //Saves the current file directory and file system to Local Storage\n  saveState() {\n    let sysStr = JSON.stringify(this.lastSystem)\n    let fileStr = JSON.stringify(this.lastFile)\n    window.localStorage.setItem(\"system\", sysStr)\n    window.localStorage.setItem(\"file\", fileStr)\n  }\n\n  //Attempts to retrieve the last used state\n  getState() {\n    try {\n      this.lastSystem = JSON.parse(window.localStorage.getItem(\"system\"));\n      this.lastFile = JSON.parse(window.localStorage.getItem(\"file\"));\n      this.noPreviousSelections = this.lastFile == null;\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\nimport { SystemSummary} from 'ng-tapis';\nimport { TapisFilesService } from '../../services/tapis-files.service';\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\nimport { Subject, combineLatest} from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-modal-file-browser',\n  templateUrl: './modal-file-browser.component.html',\n  styleUrls: ['./modal-file-browser.component.scss'],\n})\nexport class ModalFileBrowserComponent implements OnInit {\n\n  static limit = 200; //Limits maximum amount of files displayed\n\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\n\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\n \n  private currentUser: AuthenticatedUser;\n  public selectedPath;\n  public filesList: Array<RemoteFile> = [];\n  public inProgress= true;\n  public retrievalError = false;\n  public selectedFiles: Map<string, RemoteFile> = new Map();\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\n  public projects: Array<SystemSummary>;\n  private selectedSystem: SystemSummary;\n  public myDataSystem: SystemSummary;\n  public communityDataSystem: SystemSummary;\n  public publishedDataSystem: SystemSummary;\n  public currentDirectory: RemoteFile;\n  private offset:number;\n  public firstFileIndex: number;\n\n  constructor(private tapisFilesService: TapisFilesService,\n\t\t  // private modalRef: BsModalRef,\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\n\t\t  private dialog: MatDialog,\n\t\t  private authService: AuthService,\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\n\n  ngOnInit() {\n\t//retrive state data\n\t//this.tapisFilesService.getState()\n\n\t// This finds all the projects, and file systems found from a user \n\tthis.agaveSystemsService.list();\n\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\n\t// wait on the currentUser and systems to resolve\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\n\t\n\t// This little thing helped me fix the problem on calling ngOnInit several times\n\t.pipe(\n        take(1)\n      )\n\t  .subscribe( ([user, systems, projects]) => {\n\t\n\t\t// Uses systems to find the different directories that has the files in\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\n\t\n\t// This is where they choose which one they start with\n\tthis.selectedSystem = this.tapisFilesService.lastSystem\n\n\tif (this.selectedSystem == null) {\n\t\tthis.selectedSystem = this.myDataSystem\n\t\tthis.tapisFilesService.lastSystem = this.myDataSystem\n\t}\n\n\t//If the user has already navigated to a folder, restore those options\n\tthis.currentDirectory = this.tapisFilesService.lastFile\n\n\tthis.projects = projects;\n\tthis.currentUser = user;\n\tconst init = <RemoteFile> {\t\n\t\tsystem: this.myDataSystem.id,\n\t\ttype: 'dir',\n\t\tpath: this.currentUser.username\n\t};\n\t//If the user hasn't yet opened the file browser, set the last file to an init file.\n\tif ( this.tapisFilesService.noPreviousSelections) {\n\t\tthis.selectedSystem = this.myDataSystem;\n\t\tthis.tapisFilesService.lastFile = init\n\t\tthis.tapisFilesService.noPreviousSelections = false\n\t}\n\tthis.browse(this.tapisFilesService.lastFile);\n\t  });\n\n  }\n\n  selectSystem(system: SystemSummary): void {\n\tlet pth;\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\n\tconst init = <RemoteFile> {\n\t  system: system.id,\n\t  type: 'dir',\n\t  path: pth\n\t};\n\tthis.selectedSystem = system\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\n\tthis.browse(init);\n  }\n\n\n  browse(file: RemoteFile) {\n\tthis.selectedPath = file.path\n\tthis.selectedSystem = this.selectedSystem //Self-assignment keeps the system name from disappearing while browsing subfolders\n\tif (file.type !== 'dir') { return; }\n\tthis.currentDirectory = file;\n\tthis.tapisFilesService.lastFile = file //Updates the last directory visted\n\t// this.selectedFiles.clear();\n\tthis.filesList = [];\n\tthis.offset = 0\n\tthis.inProgress = false;\n\tthis.getFiles();\n  }\n\n  toRoot() {\n\tlet pth;\n\tthis.selectedSystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\n\tconst init = <RemoteFile> {\n\t  system: this.selectedSystem.id,\n\t  type: 'dir',\n\t  path: pth\n\t};\n\tthis.browse(init)\n  }\n\n  getFiles() {\n\tlet hasMoreFiles = (this.offset % ModalFileBrowserComponent.limit) === 0\n\n\tif (this.inProgress || !hasMoreFiles){\n\t\treturn;\n\t}\n\n\tthis.inProgress = true;\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalFileBrowserComponent.limit)\n\t.subscribe(listing => {\n\t\tconst files = listing.result;\n\n\t\tif (files.length && files[0].name === '.') {\n\t\t\t// This removes the first item in the listing, which in Agave\n\t\t\t// is always a reference to self '.' and replaces with '..'\n\t\t\tconst current = files.shift();\n\t\t\tthis.currentPath.next(current.path);\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\n\t\t\tcurrent.name = '..';\n\t\t\tfiles.unshift(current);\n\t\t  }\n\t\t  const newFile = [];\n\t\t  const allowedExt = this.allowedExtensions\n\t\t  files.forEach(function (value, index) {\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\n            newFile.push(value);\n          }})\n\n\t\t  this.inProgress = false;\n\t\t  this.retrievalError = false;\n\t\t  this.filesList = this.filesList.concat(newFile);\n\t\t  this.offset = this.offset + files.length\n\t},\n\terror => {\n\t\t//If retrieving the files from DesignSafe bugs out due to the site being down, this is where it ends up\n\t\tthis.retrievalError = true;\n\t\tthis.inProgress = false;\n\t});\n  }\n\n  // TODO: Ian: Error message on incorrect file type?\n  select(event: any, file: RemoteFile, index: number) {\n\tif (event.shiftKey) {\n\t\tthis.selectFilesShiftClick(index, file);\n\t  }\n\telse {\n\t\tif (this.tapisFilesService.checkIfSelectable(file)) {\n\t\t\tthis.addSelectedFile(file, index);\n\t\t}\n\t\telse{\n\t\t\t// console.log(\"not selectable\")\n\t}\n\t}\n\t// here?\n\t// else {\n\t//   Signal Error!\n\t// }\n  }\n\n  selectFilesShiftClick(index: number, file: RemoteFile) {\n    // this.selectedFiles.clear();\n    this.selectShift(index, file);\n  }\n\n\n  addSelectedFile(file: RemoteFile, index: number) {\n\tif (index != -1) {\n\t\tthis.firstFileIndex = index;\n\t  }\n\n\tif(this.tapisFilesService.checkIfSelectable(file)){\n\t\tif (this.selectedFiles.has(file.path)) {\n\t\t\tthis.selectedFiles.delete(file.path);\n\t\t} else {\n\t\t\tthis.selectedFiles.set(file.path, file);\n\t\t//   console.log(this.selectedFiles + \"GOT HERE\");\n\t\t}\n\t}\n  }\n\n  chooseFiles() {\n\tthis.tapisFilesService.saveState()\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\n\tconst tmp = Array.from(this.selectedFiles.values());\n\tthis.dialogRef.close(tmp)\n  }\n\n  cancel() {\n\tthis.tapisFilesService.saveState()\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\n\tthis.dialogRef.close()\n  }\n\n  selectAll(){\n\t  let indexTmp = -1\n\t  let count = 0\n\t  for(let file of this.filesList){\n\t\tif (! this.selectedFiles.has(file.path)) {\n\t\t\tthis.select(\"\",file,indexTmp)\n\t\t\tcount += 1\n\t\t}\n\t  }\n\t  if (count == 1){\n\t\tthis.selectedFiles.clear();\n\t  }\n  }\n\n  selectShift(index: number, file: RemoteFile) {\n    if (this.firstFileIndex != undefined && this.firstFileIndex != index) {\n      this.addRangeFiles(this.firstFileIndex, index, true);\n    } else {\n      this.addSelectedFile(file, index);\n    }\n  }\n\n  addRangeFiles(firstFileIndex: number, lastFileIndex: number, again: boolean) {\n    let maxIndex = Math.max(firstFileIndex, lastFileIndex);\n    let minIndex = Math.min(firstFileIndex, lastFileIndex);\n\n    for (let i = minIndex; i < maxIndex + 1; ++i) {\n      this.addSelectedFile(this.filesList[i], -1);\n    }\n\n    if (again) {\n      this.addSelectedFile(this.filesList[firstFileIndex], -1);\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\nimport { SystemSummary} from 'ng-tapis';\nimport { TapisFilesService } from '../../services/tapis-files.service';\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\nimport { Subject, combineLatest} from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-modal-download-selector',\n  templateUrl: './modal-download-selector.component.html',\n  styleUrls: ['./modal-download-selector.component.scss']\n})\nexport class ModalDownloadSelectorComponent implements OnInit {\n\t\n  static limit = 200; //Limits maximum amount of files displayed\n\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\n\n  private downloadSelectForm: FormGroup;\n  private currentUser: AuthenticatedUser;\n  public filesList: Array<RemoteFile> = [];\n  public inProgress= true;\n  public selectedFiles: Map<string, RemoteFile> = new Map();\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\n  public projects: Array<SystemSummary>;\n  private selectedSystem: SystemSummary;\n  public myDataSystem: SystemSummary;\n  public communityDataSystem: SystemSummary;\n  public publishedDataSystem: SystemSummary;\n  public currentDirectory: RemoteFile;\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\n  public fileName:string = \"Custom File Name\"\n  public fileExtension:string =\".csv\"\n  private offset:number;\n\n  constructor(private tapisFilesService: TapisFilesService,\n\t\t  // private modalRef: BsModalRef,\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\n\t\t  private dialog: MatDialog,\n\t\t  private authService: AuthService,\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\n\n  ngOnInit() {\n\n  this.downloadSelectForm = new FormGroup( {\n    Name: new FormControl(this.fileName),\n    Extension: new FormControl(this.fileExtension)\n  });\n\n\t  // This finds all the projects, and file systems found from a user \n\tthis.agaveSystemsService.list();\n\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\n\t// wait on the currentUser and systems to resolve\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\n\t\n\t// This little thing helped me fix the problem on calling ngOnInit several times\n\t.pipe(\n        take(1)\n      )\n\t  .subscribe( ([user, systems, projects]) => {\n\t\n\t\t// Uses systems to find the different directories that has the files in\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\n\t\n\t// This is where they choose which one they start with\n\tthis.selectedSystem = this.myDataSystem;\n\n\tthis.projects = projects;\n\tthis.currentUser = user;\n\tconst init = <RemoteFile> {\t\n\t\tsystem: this.myDataSystem.id,\n\t\ttype: 'dir',\n\t\tpath: this.currentUser.username\n\t};\n\tthis.browse(init);\n\t  });\n\n  }\n\n  selectSystem(system: SystemSummary): void {\n\tlet pth;\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\n\tconst init = <RemoteFile> {\n\t  system: system.id,\n\t  type: 'dir',\n\t  path: pth\n\t};\n\tthis.browse(init);\n  }\n\n\n  browse(file: RemoteFile) {\n\tif (file.type !== 'dir') { return; }\n\tthis.currentDirectory = file;\n\t// this.selectedFiles.clear();\n\tthis.filesList = [];\n\tthis.offset = 0\n\tthis.inProgress = false;\n\tthis.getFiles();\n  }\n\n  getFiles() {\n\tlet hasMoreFiles = (this.offset % ModalDownloadSelectorComponent.limit) === 0\n\n\tif (this.inProgress || !hasMoreFiles){\n\t\treturn;\n\t}\n\n\tthis.inProgress = true;\n\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalDownloadSelectorComponent.limit)\n\t.subscribe(listing => {\n\t\tconst files = listing.result;\n\n\t\tif (files.length && files[0].name === '.') {\n\t\t\t// This removes the first item in the listing, which in Agave\n\t\t\t// is always a reference to self '.' and replaces with '..'\n\t\t\tconst current = files.shift();\n\t\t\tthis.currentPath.next(current.path);\n      this.passbackData[1] = current.path;\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\n\t\t\tcurrent.name = '..';\n\t\t\tfiles.unshift(current);\n\t\t  }\n\t\t  const newFile = [];\n\t\t  files.forEach(function (value, index) {\n          if (value.type == 'file' || value.type == 'dir'){\n            newFile.push(value);\n          }})\n\n\t\t  this.inProgress = false;\n\t\t  this.filesList = this.filesList.concat(newFile);\n\t\t  this.offset = this.offset + files.length\n\t},\n\terror => {\n\t\tthis.inProgress = false;\n\t});\n  }\n\n  chooseFiles() {\n  this.passbackData[0] = this.selectedSystem.id\n \n  //checks to see if the input was left unchanged\n  if( this.downloadSelectForm.dirty ) {\n    //if changed, enter name as specified\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\n  } else {\n    //if unchanged, enter filename as empty string\n    this.passbackData[2] = \"\"\n  }\n  this.passbackData[3] = this.fileExtension\n\tthis.dialogRef.close(this.passbackData)\n  }\n\n  cancel() {\n\tthis.dialogRef.close()\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Project, ProjectRequest } from '../../models/models';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-modal-create-project',\n  templateUrl: './modal-create-project.component.html',\n  styleUrls: ['./modal-create-project.component.scss']\n})\nexport class ModalCreateProjectComponent implements OnInit {\n\n  public readonly onClose: Subject<any> = new Subject<any>();\n\n  projCreateForm: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\n\t\t\t  private dialog: MatDialog,\n\t\t\t  private projectsService: ProjectsService) { }\n\n  ngOnInit() {\n\tthis.projCreateForm = new FormGroup( {\n\t  name: new FormControl(''),\n\t  description: new FormControl('')\n\t});\n  }\n\n  close(project: Project) {\n\tthis.dialogRef.close();\n  }\n\n  submit() {\n\t//Watch content we can set to false, for our project, we don't need this yet.\n\t//Watch content refers to syncing files created in a folder with a hazmapper map\n\t//Set observable to true, Hazmapper doesn't let users define that value for some reason.\n\tconst proj = new Project();\n\tconst projRqst = new ProjectRequest();\n\n\t//Retrieve project name and description\n\tproj.description = this.projCreateForm.get('description').value;\n\tproj.name = this.projCreateForm.get('name').value;\n\n\tprojRqst.project = proj\n\n\tthis.projectsService.create(projRqst)\n\tthis.dialogRef.close();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Project } from '../../models/models';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-modal-share-project',\n  templateUrl: './modal-share-project.component.html',\n  styleUrls: ['./modal-share-project.component.scss']\n})\nexport class ModalShareProjectComponent implements OnInit {\n\n  projShareForm: FormGroup;\n  activeProj: Project;\n  projectUsers;\n  onlyOne:boolean; //if only one user is present == TRUE \n\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\n              private dialog: MatDialog,\n              private projectsService: ProjectsService) { }\n\n  ngOnInit() {\n    //creates new form control group to access input value\n    this.projShareForm = new FormGroup({\n      name: new FormControl(''),\n    });\n\n    //retrieves active project, needed to add users to the project\n    this.projectsService.activeProject.subscribe((proj) =>{\n      this.activeProj = proj;\n    });\n\n    //retrieves all users currently registered to the active project\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\n      this.projectUsers = next;\n      this.onlyOne = (this.projectUsers.length == 1)\n      console.log(this.onlyOne)\n    });\n  }\n\n  //closes modal without submitting anything\n  close() {\n    this.dialogRef.close();\n    }\n\n  //shares project with specified user\n  submit(){\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\n    this.dialogRef.close()\n  }\n\n  //deletes user from project\n  delete(user){\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\n    this.dialogRef.close()\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Project, ProjectRequest } from '../../models/models';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-current-project',\n  templateUrl: './modal-current-project.component.html',\n  styleUrls: ['./modal-current-project.component.scss']\n})\nexport class ModalCurrentProjectComponent implements OnInit\n{\n  projCreateForm: FormGroup;\n  activeProject: Project;\n\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\n\t\t\t  private dialog: MatDialog,\n\t\t\t  private projectsService: ProjectsService,\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\n\n  ngOnInit() {\n\n    \n    this.projectsService.activeProject.subscribe( (next) => {\n      this.activeProject = next;\n    });\n\n    this.projCreateForm = new FormGroup( {\n      name: new FormControl(this.activeProject.name),\n      description: new FormControl(this.activeProject.description)\n    });\n\n  }\n\n  close() {\n\tthis.dialogRef.close();\n  }\n\n  delete(){\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\n      this.projectsService.delete(this.activeProject);\n    }\n    this.dialogRef.close();\n  }\n  \n  update() {\n    //The project is being properly assembled, but the problem is that the returned project isn't updating.\n    //Do I need more data in my projects?\n    /*\n      export interface Project {\n      description: string;\n      id?: number;\n      name: string;\n      ds_id?: string;\n      title?: string;\n      uuid?: string;\n      public?: boolean;\n      system_file?: string;\n      system_id?: string;\n      system_path?: string;\n      deleting?: boolean;\n      deletingFailed?: boolean;\n    }\n     */\n    const p = new Project();\n    const projRqst = new ProjectRequest();\n\n    p.description = this.projCreateForm.get('description').value;\n    p.name = this.projCreateForm.get('name').value;\n    p.id = this.activeProject.id;\n    p.uuid = this.activeProject.uuid;\n    \n    projRqst.project = p\n\n    this.projectsService.update(projRqst);\n    this.dialogRef.close();\n  }\n\n}\n","import { Component, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Feature, Project } from '../../models/models';\nimport {FeatureCollection} from 'geojson';\nimport { GeoDataService } from '../../services/geo-data.service';\nimport {LatLng} from 'leaflet';\nimport {skip, startWith} from 'rxjs/operators';\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\nimport {interval, Observable, Subscription} from 'rxjs';\nimport {RemoteFile} from 'ng-tapis';\nimport {GroupsService} from \"../../services/groups.service\";\nimport {FormsService} from \"../../services/forms.service\";\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\nimport {AppEnvironment, environment} from '../../../environments/environment';\nimport { feature } from '@turf/helpers';\nimport { TapisFilesService } from '../../services/tapis-files.service'\nimport { element } from 'protractor';\nimport { consoleTestResultHandler } from 'tslint/lib/test';\nimport { ScrollService } from 'src/app/services/scroll.service';\nimport { NotificationsService } from 'src/app/services/notifications.service';\nimport { FeatureService } from 'src/app/services/feature.service';\n\n@Component({\n  selector: 'app-control-bar',\n  templateUrl: './control-bar.component.html',\n  styleUrls: ['./control-bar.component.scss']\n})\nexport class ControlBarComponent implements OnInit {\n\n  public activeFeature: Feature;\n  features: FeatureCollection;\n  featureList: Array<any> = [];\n  activeFeatureNum: number;\n\n  public currentUser: AuthenticatedUser;\n  private REFRESHTIME = 6; // 60 secs per reload default, right now it's an hour (6000 sec) //This is in seconds, and somehow got set to 6\n  public projects: Project[];\n  public selectedProject: Project;\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\n  public liveRefresh = true;\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\n  private timerSubscription: Subscription;\n  groupList: Array<any>;\n  showGroup: boolean;\n  imageName: string;\n  showSidebar: boolean;\n  groupsExist: boolean;\n  groupName: string;\n  tempGroup: Array<Feature>;\n  modalRef: BsModalRef;\n  activeGroup: string;\n  activePane: string;\n  hazMapperLink: string;\n  itemsSelected:boolean = false;\n  foundFilePaths = []\n\n  constructor(private projectsService: ProjectsService,\n\t\t\t  private geoDataService: GeoDataService,\n\t\t\t  private bsModalService: BsModalService,\n\t\t\t  private groupsService: GroupsService,\n\t\t\t  private formsService: FormsService,\n\t\t\t  private authService: AuthService,\n\t\t\t  private filesService: TapisFilesService,\n\t\t\t  private router: Router,\n\t\t\t  private dialog: MatDialog,\n\t\t\t  private scrollService: ScrollService,\n\t\t\t  private notificationsService: NotificationsService,\n\t\t\t  private featureService: FeatureService) {}\n\n  ngOnInit() {\n\t  this.filesService.getState()\n\n\tthis.featureService.features$.subscribe( (fc: FeatureCollection) => {\n\t\tthis.features = fc\n\t\t\n\t\tif (this.features != undefined) {\n\t\t\tthis.featureList = this.features.features;\n\t\t\tthis.groupsService.setActiveProject(this.featureList[0]);\n\t\n\t\t\t// TODO This should activate persistence by looping through all features and creating new groups and\n\t\t\t//Not sure about the above note, if anything needs to be done here, it seems like we have achieved persistance\n\t\t\tthis.groupsService.setGroupProperties(this.featureList);\n\t\t}\n\t})\n\n\tthis.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n\n\tthis.groupsService.activePane.subscribe((next) => {\n\t  this.activePane = next;\n\t});\n\n\tthis.geoDataService.activeFeature.subscribe((next) => {\n\t  this.activeFeature = next;\n\t  if (this.activeFeature)\n\t\tconsole.log(this.activeFeature.assets[0].path);\n\t});\n\n\t(this.notificationsService.notifications.subscribe(next => {\n\t\tlet hasSuccessNotification = next.some(note => note.status === 'success');\n\t\tlet hasFailureNotification = next.some(note => note.status === 'error');\n\t\tif (hasSuccessNotification) {\n\t\t  this.geoDataService.getFeatures(this.selectedProject.id);\n\t\t  console.log(\"Features Got\")\n\t\t}\n\t\tif (hasFailureNotification) {\n\t\t\tnext.forEach(item => {\n\t\t\t\t//Compiles a list of all necessary files to import via the alt method\n\t\t\t\t//The substring from 0 to 16 contains the phrase \"Error importing\", everything after this is the file path\n\t\t\t\tif( (item.message.substring(0,16) == \"Error importing \") && !( this.foundFilePaths.some(filePath => filePath === item.message.substring(16)) ) ) {\n\t\t\t\t\tlet path = item.message.substring(16)\n\t\t\t\t\tthis.geoDataService.uploadNewFeature(this.selectedProject.id, this.createBlankFeature(), path)\n\t\t\t\t\tthis.foundFilePaths.push(path)\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.geoDataService.getFeatures(this.selectedProject.id);\n\t\t}\n\t}));\n\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\n\n\tthis.projectsService.getProjects();\n\tthis.projectsService.projects.subscribe( (projects) => {\n\t  this.projects = projects;\n\n\t  if (this.projects.length) {\n\t\tlet lastProj\n\t\ttry {\n\t\t\t//restores view to the last visited project from local storage\n\t\t\tlastProj = JSON.parse(window.localStorage.getItem(\"lastProj\"))\n\t\t\tconsole.log(lastProj)\n\t\t} catch (error) {\n\t\t\tlastProj = this.projectsService.setActiveProject(this.projects[0]);\n\t\t}\n\n\t\t//If lastProj is null, then there is no project saved, or can be found, default to the first project in the list\n\t\tif(lastProj == \"none\" || lastProj == null) {\n\t\t\tlastProj = this.projects[0];\n\t\t}\n\n\t\tthis.projectsService.setActiveProject(lastProj);\n\t  }\n\n\t  this.groupsService.groups.subscribe((next) => {\n\t\tthis.groupList = next;\n\n\t\tif (this.groupList.length > 0) {\n\t\t  this.groupsExist = true;\n\t\t} else {\n\t\t  this.groupsExist = false;\n\t\t}\n\t  });\n\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\n\t\tthis.activeFeatureNum = next;\n\n\t\tthis.groupList.forEach(e => {\n\t\t  if (e.name == this.activeGroup) {\n\t\t\tif (e.features[next]) {\n\t\t\t  if (e.features[next].assets[0].display_path) {\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\n\t\t\t  } else {\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t});\n\t  });\n\n\t  this.groupsService.tempGroup.subscribe((next) => {\n\t\tthis.tempGroup = next;\n\t  });\n\n\t  this.groupsService.showGroup.subscribe((next) => {\n\t\tthis.showGroup = next;\n\t  });\n\n\t  this.groupsService.showSidebar.subscribe((next) => {\n\t\tthis.showSidebar = next;\n\t  });\n\n\t  this.groupsService.tempGroup.subscribe((next) => {\n\t\tthis.tempGroup = next;\n\t  });\n\n\t  this.groupsService.itemsSelected.subscribe((next) => {\n\t\tthis.itemsSelected = next;\n\t  })\n\t});\n\n\tthis.projectsService.activeProject.subscribe(next => {\n\t  this.selectedProject = next;\n\t  this.getDataForProject(this.selectedProject);\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\n\t});\n\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\n\t  this.mapMouseLocation = next;\n\t});\n\n\t// FIXME Maybe redundant //My advice, F*** around and find out -Ben\n\tthis.groupsService.setActiveFeatureNum(0);\n  }\n\n  clearAll(){\n\t  this.groupsService.setUnselectAll(true);\n\t  this.groupsService.setItemsSelected(false);\n  }\n\n  reloadFeatures() {\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\n  }\n\n  setLiveRefresh(option: boolean) {\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\n  }\n\n  //Similar to setLiveRefresh, but it runs the time out once and then unsubscribes from the timer\n  startRefreshTimer(option: boolean) {\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); this.setLiveRefresh(false)}) : this.timerSubscription.unsubscribe();\n  }\n\n  selectProject(p: Project): void {\n\tthis.projectsService.setActiveProject(p);\n\tthis.getDataForProject(p);\n  }\n\n  getDataForProject(p: Project): void {\n\tthis.geoDataService.getFeatures(p.id);\n\tthis.geoDataService.getOverlays(p.id);\n\tthis.geoDataService.getPointClouds(p.id);\n  }\n\n  openFilePicker() {\n\t//Refreshes the list of found paths used in importing images without Geo tagging\n\tthis.foundFilePaths = []\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\n\t});\n}\n\n  //Creates a feature with a long/lat value of 0,0 and no associated image. Used in alternate image inport\n  //I think if we want a placeholder image, we can add it here.\n  createBlankFeature() {\n\tlet blankFeature:Feature = {\n\t\t\"type\": \"Feature\",\n\t\t\"geometry\": {\n\t\t  \"type\": \"Point\",\n\t\t  \"coordinates\": [0, 0]\n\t\t},\n\t\t\"properties\": {\n\t\t}\n\t  }\n\treturn blankFeature\n  }\n\n  openDownloadSelector(fileName:string){\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\n\tlet path: Array<string>\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\n\t\tconsole.log(passbackData)\n\t\tpath = passbackData\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\n\t});\n  }\n\n  openCreateProjectModal() {\n\tthis.dialog.open(ModalCreateProjectComponent, {\n\t  height: '400px',\n\t  width: '600px',\n\t});\n\tthis.dialog.afterAllClosed.subscribe((resp) =>{\n\t\t//Close the sidebar and return to the gallery screen if the sidebar's open\n\t\tif(this.showSidebar){\n\t\t\tthis.openSidebar()\n\t\t}\n\t})\n  }\n\n  openShareProjectModal(){\n\t  this.dialog.open(ModalShareProjectComponent, {\n\t\t  height: '400px',\n\t\t  width: '600px',\n\t  })\n  }\n\n  openProjectModal(project) {\n\tlet modal = this.dialog.open(ModalCurrentProjectComponent, {\n\t  height: '400px',\n\t  width: '600px',\n\t  data: {\n\t\tid: project.id,\n\t\tname: project.name,\n\t\tdescription: project.description,\n\t\tuuid: project.uuid\n\t  }\n\t});\n\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\n\t\tthis.projectsService.setActiveProject(this.projects[0])\n\t});\n}\n\n  //Old function, aside from rewriting it for quality, most concerns here have been addressed. Also, it's not exactly broken... -Ben\n  addToGroupService(name: string) {\n\tthis.groupName = name;\n\tthis.groupsService.setActiveGroup(name);\n\n\tif (this.groupList.length != 1000) {\n\t  // TODO Make this better\n\t  if (!name || 0 === name.length) {\n\t\tconsole.log(\"Invalid Name\");\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\n\t\tconsole.log(\"Existing Name\");\n\t  } else {\n\t\tlet myRandColor: string = this.getRandomColor();\n\t\tthis.groupList.push({\n\t\t  name: name,\n\t\t  features: this.tempGroup,\n\t\t  color: myRandColor,\n\t\t  icon: \"fa-house-damage\"\n\t\t});\n\t\tthis.groupsService.addGroup(this.groupList);\n\t\tthis.formsService.addGroup(this.groupName);\n\n\t\tconsole.log(this.groupList)\n\t\tconsole.log(this.tempGroup)\n\n\t\t// TODO make this work for persistence //We do currently have persistance, so make of this what you will -Ben\n\t\tfor (let feat of this.tempGroup) {\n\t\t  let featProp = feat.properties;\n\t\t  console.log(feat.properties)\n\n\t\t  if (featProp.group) {\n\t\t\tconsole.log(\"nope\");\n\t\t\tfeatProp.group.push({\n\t\t\t  name: name,\n\t\t\t  color: myRandColor,\n\t\t\t  icon: \"fa-house-damage\"\n\t\t\t});\n\t\t  } else {\n\t\t\tconsole.log(\"This is actually happening\");\n\t\t\tlet featPropList = featProp.group = [];\n\t\t\tfeatPropList.push({\n\t\t\t  name: name,\n\t\t\t  color: myRandColor,\n\t\t\t  icon: \"fa-house-damage\"\n\t\t\t});\n\t\t  }\n\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\n\t\t  console.log(\"In control-bar\");\n\t\t  console.log(\"Current feat: \" + feat.id);\n\t\t  console.log(\"featProp: what gets sent to server\");\n\t\t  console.log(featProp);\n\t\t  console.log(\"groupList: internal listing\");\n\t\t}\n\t  }\n\t}\n\n\tthis.tempGroup = [];\n\tthis.groupsService.addTempGroup(this.tempGroup);\n\tthis.groupsService.setUnselectAll(true);\n\tthis.groupsService.setShowGroup(false);\n\tthis.dialog.closeAll()\n  }\n\n  openAddGroupModal(template: TemplateRef<any>) {\n\tthis.dialog.open(template);\n  }\n\n  openSidebar() {\n\tif( !this.showSidebar) {\n\t\tthis.scrollService.setScrollPosition()\n\t} else {\n\t\tthis.scrollService.setScrollRestored(true)\n\t}\n\tlet showSidebar = !this.showSidebar;\n\tlet showGroup = false;\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\n\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\n\n\n\tif (activeGroup[0].features.length == 0) {\n\t  this.groupsService.setFeatureImagesExist(false);\n\t} else {\n\t  this.groupsService.setFeatureImagesExist(true);\n\t}\n\t\n\tthis.reloadFeatures();\n\tthis.groupsService.setActiveFeatureNum(0);\n\tthis.groupsService.setShowSidebar(showSidebar);\n\tthis.groupsService.setShowGroup(showGroup);\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\n\n\tthis.tempGroup = [];\n\tthis.groupsService.addTempGroup(this.tempGroup);\n\tthis.groupsService.setUnselectAll(true);\n\tthis.groupsService.setActivePane('tagger');\n  }\n\n  // TODO Make it prettier\n  otherPath(dir: boolean) {\t//Don't even ask, I don't know what we use this for... -Ben\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\n\n\t// right\n\tif (dir) {\n\t  this.activeFeatureNum += 1;\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\n\t} else {\n\t  if (this.activeFeatureNum == 0) {\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\n\t  }\n\t  this.activeFeatureNum -= 1;\n\t}\n\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\n  }\n\n  getRandomColor() {\n\tvar letters = '0123456789ABCDEF';\n\tvar color = '#';\n\tfor (var i = 0; i < 6; i++) {\n\t  color += letters[Math.floor(Math.random() * 16)];\n\t}\n\treturn color;\n  }\n\n  // TODO\n  //This is unused, but the paths are valid routes, mostly seen in the sidebar components.\n  //Tagger is the basic sidebar that appears when you oppen the taggit screen, Preset is for tag generation\n  goToRoute() {\n\tif (this.activePane == \"preset\") {\n\t  this.groupsService.setActivePane(\"tagger\");\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\n\t} else {\n\t  this.groupsService.setActivePane(\"preset\");\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\n\t}\n\tthis.groupsService.setActiveGroup(this.activeGroup);\n  }\n\n  // TODO\n  //What there is TODO with this, I don't know. Probably nothing at all...\n  clearAndUnselect() {\n\n  }\n\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\n  //I apologize in advance for this mess of a function -Ben\n  //This really needs to be split into something like 3 separate functions\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\n\t  let CSVHolder = \"FeatureID,longitude,latitude,src\"\n\t  let JSONHolder:String = \"\"\n\t  let projID = \"\"\n\t  let tagsPresent = true\n\t  let headerComplete = false //If true, then the full csv header info has been compiled\n\t  let headerTagOptions = 0 //Controls how many tagOption columns are in the final CSV\n\n\t  this.featureList.forEach(element => {\n\t\t\t//Retrieves project ID for building a filename\n\t\t\tprojID = element.project_id\n\n\t\t  \t//retrieves longitude and latitude values as an array\n\t\t\tlet coordinates = element.geometry['coordinates']\n\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\n\n\t\t\t//Grabs group data\n\t\t\t//Group data can be accessed from the feature, through the properties element\n\t\t\t//If the image doesn't have a group, a placeholder is given\n\t\t\t//NOTE: future group properties can be accessed in the same way\n\t\t\tlet group, styles, tag\n\t\t\ttry {\n\t\t\t\ttry {\n\t\t\t\t\tgroup = element.properties['group']\n\t\t\t\t} catch {\n\t\t\t\t\tgroup = [{\n\t\t\t\t\t\t\"color\": \"#000000\",\n\t\t\t\t\t\t\"name\": \"N/A\",\n\t\t\t\t\t\t\"icon\": \"fa-house-damage\"\n\t\t\t\t\t}]\n\t\t\t\t}\n\n\t\t\t\ttry{\n\t\t\t\t\tstyles = element.properties['style']\n\t\t\t\t} catch{\n\t\t\t\t\tstyles = []\n\t\t\t\t}\n\n\t\t\t\ttry{\n\t\t\t\t\ttag = element.properties['tag']\n\t\t\t\t} catch{\n\t\t\t\t\ttag = []\n\t\t\t\t}\n\n\t\t\t\t//If groups are present on the data, add header data\n\t\t\t\tif( group.length > 0 && !headerComplete){\n\t\t\t\t\tCSVHolder += \",groupName,groupColor,groupIcon\"\n\t\t\t\t}\n\n\t\t\t\t//Check if the tag var has any data, if so, add new lines to the header\n\t\t\t\tif ( tag != undefined && tagsPresent && !headerComplete) {\n\t\t\t\t\t//Add a few more lines to the holder to accomodate tags\n\t\t\t\t\tCSVHolder += \",Icon,Color,tagType,tagSelection\"\n\t\t\t\t\ttag.forEach(tag => {\n\t\t\t\t\t\tlet tempTagOptionNum = 0\n\t\t\t\t\t\ttag.options.forEach(option => {\n\t\t\t\t\t\t\ttempTagOptionNum++\n\t\t\t\t\t\t\tif (tempTagOptionNum > headerTagOptions) {\n\t\t\t\t\t\t\t\tCSVHolder += \",tagOption\"\n\t\t\t\t\t\t\t\theaderTagOptions = tempTagOptionNum\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tif (!headerComplete) {\n\t\t\t\t\t\tCSVHolder += \"\\r\\n\"\n\t\t\t\t\t\ttagsPresent = false\n\t\t\t\t\t\theaderComplete = true\n\t\t\t\t\t}\n\t\t\t\t} else if(!headerComplete) {\n\t\t\t\t\t//If not, indent the last line.\n\t\t\t\t\tCSVHolder +=\"\\r\\n\"\n\t\t\t\t\theaderComplete = true\n\t\t\t\t}\n\n\t\t\t} catch (error) {}\n\n\t\t\tif (isJSON) {\n\t\t\t\t//Compile the data it into a JSON\n\t\t\t\tJSONHolder += this.compileJSON(coordinates, element.id, featureSource, group, tag, styles) + \", \\n\"\n\t\t\t} else {\n\t\t\t\t//Compiles the attributes into a CSV format\t\t\t\t\n\t\t\t\t//If there is no groups for the feature, output without group info\n\t\t\t\tif( group == undefined ){\n\t\t\t\t\t//Indents CSV header.\n\t\t\t\t\tCSVHolder +=\"\\r\\n\"\n\t\t\t\t\t//Compiles data to a line of a CSV, and adds it to a growing full CSV file\n\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\n\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \"\\r\\n\"\n\t\t\t\t\tCSVHolder += tempCSV\n\t\t\t\t} else {\n\t\t\t\t\tgroup.forEach(group => {\n\t\t\t\t\t\tconsole.log(group)\n\t\t\t\t\t\t//If tags exist, try to add each tag to the CSV\n\t\t\t\t\t\tif ( tag != undefined) {\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\ttag.forEach(tag => {\n\t\t\t\t\t\t\t\t//If the tag is in the group, compile a row\n\t\t\t\t\t\t\t\t//TODO: If a group doesn't have a tag, it doesn't get printed at all\n\t\t\t\t\t\t\t\tif(true){//(tag.groupName === group.name) {\n\t\t\t\t\t\t\t\t\tconsole.log(tag);\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\n\t\t\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\t\t   Icon\t\t\t\t\t Color\n\t\t\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \",\" + styles.faIcon + \",\" + styles.color + \",\"\n\t\t\t\t\t\t\t\t\t// tagType\t\t\ttagOption(This is repeated a lot)\n\t\t\t\t\t\t\t\t\t+ tag.type + \",\" + tag.extra[0].option\n\t\t\t\t\t\t\t\t\ttag.options.forEach(option => {\n\t\t\t\t\t\t\t\t\t\t//Save each option in the tag to the CSV\n\t\t\t\t\t\t\t\t\t\t//Adds just the label to the CSV, we can reconstruct the key from that.\n\t\t\t\t\t\t\t\t\t\ttempCSV += \",\" + option.label\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\ttempCSV += \"\\r\\n\"\n\t\t\t\t\t\t\t\t\t//And adds it to a growing full CSV file\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch{\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t//If the above fails, attempt to construct a line with group data\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\n\t\t\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\n\t\t\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \"\\r\\n\"\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t//If all else fails, It writes no data on an error, so output the groupless data\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \"\\r\\n\"\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Compiles data to a line of a CSV\n\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\n\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\n\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\n\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \"\\r\\n\"\n\t\t\t\t\t\t\t//And adds it to a growing full CSV file\n\t\t\t\t\t\t\tCSVHolder += tempCSV\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t  });\n\t  let content\n\t  let extension\n\t  //determine whether the file is wanted as a JSON or a CSV\n\t\tif (isJSON) {\n\t\t\tcontent = JSONHolder\n\t\t\textension = \".json\"\n\t\t} else {\n\t\t\tcontent = CSVHolder\n\t\t\textension = \".csv\"\n\t\t}\n\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\n\t\tif(forExport){\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\n\t\t}else{\n\t\t\tthis.download(content,extension,projID)\n\t\t}\n\n  }\n\n  \tcompileJSON(coordinates, featureID, featureSource:string, groups = [], tags = [], style){\n\t\tlet compiledJSON = ''\n\t    let transferJSON\n\n\t\t//Add the most basic information to the compiled JSON\n\t\ttransferJSON = {\n\t\t\t\"longitude\": coordinates[0],\n\t\t\t\"latitude\": coordinates[1],\n\t\t\t\"src\": featureSource\n\t\t}\n\t\tcompiledJSON += JSON.stringify(transferJSON)\n\n\t\tif( groups.length != 0 ){\n\t\t\tgroups.forEach(group => {\n\t\t\t\t//At this point, group info should be added, \n\t\t\t\t//If tags are set to a default value, there are none present, compile without tag information\n\t\t\t\ttransferJSON = {\n\t\t\t\t\t\"groupName\": group.name,\n\t\t\t\t\t\"groupColor\": group.color\n\t\t\t\t}\n\t\t\t\t\tcompiledJSON += JSON.stringify(transferJSON)\n\t\t\t\tif( tags.length > 0) { //Compile a JSON with full tag information\n\t\t\t\t\ttags.forEach( tag => {\n\t\t\t\t\t\tif ( tag.feature == featureID ) {\n\t\t\t\t\t\t\ttransferJSON = {\n\t\t\t\t\t\t\t\t\"icon\": style.faIcon,\n\t\t\t\t\t\t\t\t\"icon color\": style.color,\n\t\t\t\t\t\t\t\t\"tag name\": tag.label,\n\t\t\t\t\t\t\t\t\"tag type\": tag.type,\n\t\t\t\t\t\t\t\t\"tag selection\": tag.extra[0].option,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcompiledJSON += JSON.stringify(transferJSON)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t//If the above failed, compile the minimum JSON\n\t\tif( compiledJSON == \"\" ){\n\t\t\ttransferJSON = {\n\t\t\t\t\"longitude\": coordinates[0],\n\t\t\t\t\"latitude\": coordinates[1],\n\t\t\t\t\"src\": featureSource\n\t\t\t}\n\t\t\tcompiledJSON += JSON.stringify(transferJSON)\n\t\t}\n\t\treturn compiledJSON\n\t}\n\t\n\tdownload(content, extension, projID){\n\t  //Creates a download link in typescript through a blob\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\n\t\tlet download = document.createElement(\"a\")\n\t\tlet url = URL.createObjectURL(blob)\n\t\tlet filename = \"taggit-proj-\" + projID\n\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\n\t\t//Its a quirk of those browsers that they don't allow same-page downloads\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\n\t\t}\n\t\t//Sets up the link, and simulates a click\n\t\tdownload.setAttribute(\"href\", url)\n\t\tdownload.setAttribute(\"download\", filename + extension)\n\t\tdownload.style.visibility = \"hidden\"\n\t\tdocument.body.appendChild(download)\n\t\tdownload.click()\n\t\tdocument.body.removeChild(download)\n  \t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport { AuthService} from './services/authentication.service';\nimport { environment } from '../environments/environment';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authService.logout();\n                location.reload();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(private authSvc: AuthService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\n            if (this.authSvc.isLoggedIn()) {\n                request = request.clone({\n                    setHeaders: {\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\n                    }\n                });\n            }\n        }\n        // we put the JWT on the request to our geoapi API because it is not behind ws02 if in local dev\n        // and if user is logged in\n        if (\n          request.url.indexOf('http://localhost') > -1 &&\n          this.authSvc.isLoggedIn()\n        ) {\n            // add header\n            request = request.clone({\n                setHeaders: {\n                    'X-JWT-Assertion-designsafe': environment.jwt,\n                },\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import {AfterViewChecked, Component, OnInit, Renderer2} from '@angular/core';\nimport {GeoDataService} from '../../services/geo-data.service';\nimport {FeatureAsset, Feature, Project, FeatureCollection} from '../../models/models';\nimport {AppEnvironment, environment} from '../../../environments/environment';\nimport {ProjectsService} from \"../../services/projects.service\";\nimport { ScrollService } from 'src/app/services/scroll.service';\nimport {GroupsService} from \"../../services/groups.service\";\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport {startWith} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\nimport { FeatureService } from 'src/app/services/feature.service';\n\n@Component({\n  selector: 'app-image-gallery',\n  templateUrl: './image-gallery.component.html',\n  styleUrls: ['./image-gallery.component.scss']\n})\n\nexport class ImageGalleryComponent implements OnInit, AfterViewChecked {\n  environment: AppEnvironment;\n  // features: FeatureCollection;\n  // FIXME feature collection giving me an error when trying to access assets\n  // features: any;\n  tempGroup: Array<Feature>;\n  groupList: Array<any>;\n  // showGroupBar: boolean;\n\n  public projects: Project[];\n  showGroup: boolean;\n  groupName: string;\n  showSidebar: boolean;\n  scrolling: boolean = false;\n  status: boolean;\n  groupExist: boolean;\n  imagesExist: boolean;\n  projectsExist: boolean;\n  featureList: Array<any> = [];\n  featureListScroll: Array<any>;\n  scrollSum: number = 15;\n  activeGroup: string;\n  activeFeature: Feature;\n  activeFeatureNum: number;\n  featurePath: string;\n  loaded: boolean;\n\n  constructor(private geoDataService: GeoDataService,\n\t\t\t  private projectsService: ProjectsService,\n\t\t\t  private groupsService: GroupsService,\n\t\t\t  private renderer: Renderer2,\n\t\t\t  private spinner: NgxSpinnerService,\n\t\t\t  private dialog: MatDialog,\n\t\t\t  private scrollService: ScrollService,\n\t\t\t  private featureService: FeatureService) { }\n\n  \n\n  ngAfterViewChecked() {\n\tif ( this.scrollService.scrollRestored) {\n\t\tthis.scrollService.scroll()\n\t}\n  }\n\n  ngOnInit() {\n\tthis.environment = environment;\n\n\n\t// this.activeFeatureNum = 0;\n\t// FIXME feature collection giving me an error when trying to access assets\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\n\n\tthis.geoDataService.loaded.subscribe(e => {\n\t  this.loaded = e;\n\t}, error => {\n\t\tthis.projectsExist = false;\n\t  });\n\t\n\tthis.featureService.features$.subscribe( (fc:any) => {\n\t\tif (fc) {\n\t\t\tif (fc.features.length > 0) {\n\t\t\t  this.imagesExist = true;\n\t\t\t\tthis.featureList = fc.features.filter(feature => {\n\t\t\t\t  try{\n\t\t\t\t\treturn feature.assets[0].asset_type === \"image\";\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t//If a feature has no asset, it ends up in this catch\n\t\t\t\t\t  console.error(error)\n\t\t\t\t\t//After outputting the error, add an \"image not found\" placeholder,\n\t\t\t\t\t//Allowing users to still select their errored import\n\t\t\t\t\t//Note that this doesn't really work!\n\t\t\t\t\tfeature.assets.push({ \"path\":\"../../images/Image-not-found.png\" })\n\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\n\t\t\t} else {\n\t\t\t  this.imagesExist = false;\n\t\t\t}\n\t\t}\n\t});\n\n\t/*\n\t//I think doing a more natural refresh in here will cause a dynamic reload\n\tthis.geoDataService.features.subscribe( (fc: any) => {\n\t  if (fc) {\n\t\tif (fc.features.length > 0) {\n\t\t  this.imagesExist = true;\n\t\t\tthis.featureList = fc.features.filter(feature => {\n\t\t\t  try{\n\t\t\t\treturn feature.assets[0].asset_type === \"image\";\n\t\t  \t  } catch (error) {\n\t\t\t\t//If a feature has no asset, it ends up in this catch\n\t\t\t  \tconsole.error(error)\n\t\t\t\t//After outputting the error, add an \"image not found\" placeholder,\n\t\t\t\t//Allowing users to still select their errored import\n\t\t\t\tfeature.assets.push({\n\t\t\t\t\t\"path\": \"../../images/Image-not-found.png\"\n\t\t\t\t})\n\t\t\t\treturn false\n\t\t  \t  }\n\t\t\t});\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\n\t\t} else {\n\t\t  this.imagesExist = false;\n\t\t}\n\t  }\n\t});*/\n\n\tthis.projectsService.projects.subscribe((projects) => {\n\t  this.projects = projects;\n\t  if (this.projects.length) {\n\t\tthis.projectsExist = true;\n\t  } else {\n\t\tthis.projectsExist = false;\n\t  }\n\t});\n\n\tthis.geoDataService.activeFeature.subscribe((next) => {\n\t  if (next) {\n\t\tthis.activeFeature = next;\n\t  }\n\t});\n\n\tthis.groupsService.groups.subscribe((next) => {\n\t  this.groupList = next;\n\t});\n\n\tthis.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\n\t  this.groupExist = next;\n\t});\n\n\tthis.groupsService.tempGroup.subscribe((next) => {\n\t  this.tempGroup = next;\n\t});\n\n\tthis.groupsService.showGroup.subscribe((next) => {\n\t  this.showGroup = next;\n\t});\n\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\n\t  this.activeFeatureNum = next;\n\t});\n\n\tthis.groupsService.showSidebar.subscribe((next) => {\n\t  this.showSidebar = next;\n\t  // this.status = !this.status;\n\t  if (next) {\n\t\tthis.status = true;\n\t  } else {\n\t\tthis.status = false;\n\t  }\n\t});\n\n\tthis.groupsService.setActiveFeatureNum(0);\n  }\n\n  getPath(): string {\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\n\tif (activeGroupObj[0] != undefined) {\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\n\t\tthis.groupsService.setActiveFeatureNum(0);\n\t\t// this.groupsService.setActiveFeatureNum(0);\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\n\t\t}\n\t  }\n\t}\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\n\treturn featureSource;\n  }\n\n  appendSum() {\n\tif (this.featureList.length != 0) {\n\t  if (this.scrollSum == this.featureList.length) {\n\t\tthis.spinner.hide();\n\t\tthis.scrolling = false;\n\t\treturn;\n\t  }\n\t\t//If scrollSum is larger than the length of the feature list, curtail it to just be the length\n\t  if (this.scrollSum > this.featureList.length) {\n\t\tthis.scrollSum = this.featureList.length;\n\t  }\n\t}\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\n\tsetTimeout(() => {\n\t  this.spinner.hide();\n\t  this.scrolling = false;\n\t}, 1300);\n  }\n\n  onScroll() {\n\tif (!this.scrolling) {\n\t  this.spinner.show();\n\t  this.scrollSum += 10;\n\t  this.appendSum();\n\t  this.scrolling = true;\n\t}\n\t// if (this.notscrolly && this.notEmptyPost) {\n\t//   this.spinner.show();\n\t//   this.notscrolly = false;\n\t//   this.loadNextPost();\n\t// }\n\t// console.log('scrolled!!');\n  }\n\n  \n  openCreateProjectModal() {\n\tthis.dialog.open(ModalCreateProjectComponent, {\n\t  height: '400px',\n\t  width: '600px',\n\t});\n\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\n\t// });\n  }\n\n}\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\nimport {Feature, Project} from '../../models/models';\nimport {GeoDataService} from '../../services/geo-data.service';\nimport {AppEnvironment, environment} from '../../../environments/environment';\nimport {GroupsService} from \"../../services/groups.service\";\nimport {ProjectsService} from \"../../services/projects.service\";\nimport { BsModalService } from 'ngx-foundation/modal';\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormsService, tags } from 'src/app/services/forms.service';\nimport { ScrollService } from 'src/app/services/scroll.service';\nimport { FeatureService } from 'src/app/services/feature.service';\n\n@Component({\n  selector: 'app-image-box',\n  templateUrl: './image-box.component.html',\n  styleUrls: ['./image-box.component.scss']\n})\n\nexport class ImageBoxComponent implements OnInit {\n  @Input() feature: Feature;\n  // @Output() clickRequest = new EventEmitter<Feature>();\n  environment: AppEnvironment;\n  featureSource: string;\n  featurePath: string;\n  status: boolean = false; //Controls the whether or not an image box is selected or not\n  hasGroup: boolean = false;\n  colors: Array<string> = [];\n  groupList: Array<any>;\n  coordinates: Array<any>;\n  containingGroupList: Array<any>;\n  currentGroup: string = \"hello\";\n  tempGroup: Array<Feature>;\n  modalRef: BsModalRef;\n  activeGroup: string;\n\n  public selectedProject: Project;\n\n  unselectAll: boolean = false;\n\n  tagList: tags[] = this.formsService.getTags();\n\n  // FIXME Bad\n  imageCollection: any = {};\n\n  constructor( private geoDataService: GeoDataService,\n\t\t\t   private groupsService: GroupsService,\n\t\t\t   private projectsService: ProjectsService,\n\t\t\t   private modalService: BsModalService,\n\t\t\t   private formsService: FormsService,\n\t\t\t   private dialog: MatDialog,\n\t\t\t   private scrollService: ScrollService,\n\t\t\t   private featureService: FeatureService\n\t\t\t ){ }\n\n  ngOnInit() {\n\tthis.environment = environment;\n\tlet featureSource\n\tif( this.feature.assets[0].path != \"../../images/Image-not-found.png\") {\n\t\tfeatureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\n\t} else {\n\t\tfeatureSource = this.feature.assets[0].path\n\t}\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\n\tthis.featureSource = featureSource;\n\tthis.coordinates = this.feature.geometry['coordinates'];\n\n\tthis.projectsService.activeProject.subscribe(next => {\n\t  this.selectedProject = next;\n\t});\n\n\tthis.groupsService.groups.subscribe((next) => {\n\t  this.groupList = next;\n\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\n\t\t// console.log(this.groupList)\n\t\t\n\t\tthis.groupList.forEach(e => {\n\t\t\t// console.log(e)\n\t\t\te.features.forEach(c => {\n\n\t\t\tif (c.id == this.feature.id) {\n\t\t\t  if (!this.colors.includes(e.color)) {\n\t\t\t\tthis.colors.push(e.color);\n\t\t\t\t//console.log(e.color);\n\t\t\t  }\n\t\t\t  this.hasGroup = true;\n\t\t\t}\n\t\t  });\n\t\t});\n\t  }\n\t});\n\n\tthis.groupsService.tempGroup.subscribe((next) => {\n\t  this.tempGroup = next;\n\t});\n\n\tthis.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n\n\n\tthis.groupsService.unselectAll.subscribe((next) => {\n\t  this.unselectAll = next;\n\t  if (this.unselectAll == true) {\n\t\tthis.status = false;\n\t  }\n\t});\n\tlet featurePath = this.feature.assets[0].display_path\n\tfeaturePath = this.feature.assets[0].display_path\n\tthis.featurePath = featurePath\n  }\n\n  // click() {\n  //   this.clickRequest.emit(this.feature);\n\n  // // imageSelect(event: any) {\n  // //   if (event.target.classList.contains('img-selected')) {\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\n  // //   } else {\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\n  // //     this.renderer.addClass(event.target, \"img-selected\");\n  // //   }\n  // // }\n\n  // }\n  // delete() {\n  //   this.geoDataService.deleteFeature(this.feature);\n  // }\n\n\n  imageSelect() {\n\tif (this.unselectAll == true) {\n\t  this.unselectAll = false;\n\t  this.groupsService.setUnselectAll(false);\n\t  this.tempGroup = []\n\t}\n\tthis.status = !this.status;\n\tif(this.status) {\n\t\tthis.groupsService.setItemsSelected(this.status)\n\t}\n\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\n\t} else {\n\t  this.tempGroup.push(this.feature);\n\t}\n\n\tthis.groupsService.addTempGroup(this.tempGroup);\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\n\n\t// Hide group-bar\n\tif (this.tempGroup.length == 0) {\n\t  this.groupsService.setShowGroup(false);\n\t  this.groupsService.setItemsSelected(false);\n\t} else {\n\t  this.groupsService.setShowGroup(true);\n\t}\n\n  }\n\n  imageSelectTrue(){\n\tthis.status = true\n\tthis.groupsService.setItemsSelected(this.status)\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\n\t\tthis.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\n\t} else {\n\t\tthis.tempGroup.push(this.feature);\n\t}\n  \n\tthis.groupsService.addTempGroup(this.tempGroup);\n\tthis.groupsService.setShowGroup(true);\n  }\n\n  imageZoom(template: TemplateRef<any>) {\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\n\tthis.dialog.open(template);\n  }\n\n  imageDelete() {\n\tconst featureService = this.featureService\n\tthis.tempGroup.forEach(function (value) {\n\t\tfeatureService.deleteFeature(value)\n\t})\n\t//Resets contents of temp group\n\tthis.groupsService.addTempGroup([])\n\tthis.scrollService.setScrollRestored(true)\n  }\n\n  openMoreGroupsModal(template: TemplateRef<any>) {\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\n\tthis.dialog.open(template);\n  }\n\n  openImageDeleteModal(template: TemplateRef<any>) {\n\tthis.imageSelectTrue()\n\tthis.scrollService.setScrollPosition()\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\n\tthis.dialog.open(template);\n  }\n\n  deleteFromGroup(color: string) {\n\t// console.log(this.groupList);\n\tthis.groupList.forEach(e => {\n\t  // When it is the sole feature\n\t  if (e.features.length <= 1) {\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\n\t  } else {\n\t\tif (e.color == color) {\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\n\t\t}\n\t  }\n\t});\n\n\tlet featProp = this.feature.properties;\n\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\n\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\n\n\tthis.groupsService.addGroup(this.groupList);\n\tthis.colors = this.colors.filter(e => e != color);\n  }\n\n  openImageAddModal(template: TemplateRef<any>) {\n\tthis.imageSelectTrue()\n\tthis.scrollService.setScrollPosition()\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\n\tthis.dialog.open(template);\n  }\n\n  selectGroupForm (name: string, feat: Feature) {\n\tlet color = \"\";\n\tlet icon = \"\"\n\tthis.groupsService.setActiveFeatureNum(0);\n\tthis.groupList.forEach(e => {\n\t  if (e.name == name) {\n\t\t//   console.log(this.feature)\n\t\te.features.push(this.feature);\n\t\tcolor = e.color;\n\t\ticon = e.icon\n\t  }\n\t});\n\n\tlet featProp = feat.properties;\n\tif (featProp.group) {\n\t  let featGroupList = featProp.group.map(e => {\n\t\treturn e.name;\n\t  });\n\n\t  if (!featGroupList.includes(name)) {\n\t\tfeatProp.group.push({\n\t\t  name: name,\n\t\t  color: color,\n\t\t  icon: icon,\n\t\t});\n\t  }\n\t} else {\n\t  featProp.group = [];\n\t  featProp.group.push({\n\t\tname: name,\n\t\tcolor: color,\n\t\ticon: icon,\n\t  });\n\t}\n\n\tthis.groupList.forEach(e => {\n\t\tif (e.name == this.activeGroup) {\n\t\t\tthis.tempGroup = e.features;\t\n\t\t}\n\t\t});\n\t\n\tfor (let tag of this.tagList){\n\t\tif (tag.feature === this.tempGroup[0].id && tag.groupName === name){\n\t\t\tlet formItem: tags = {\n\t\t\t\ttype: tag.type,\n\t\t\t\tgroupName: name,\n\t\t\t\tlabel: tag.label,\n\t\t\t\t// value: this.formValue,\n\t\t\t\t// required: this.formRequired,\n\t\t\t\toptions: tag.options,\n\t\t\t\tfeature: this.feature.id,\n\t\t\t\textra: []\n\t\t\t}\n\t\t\tthis.formsService.saveTag(this.activeGroup, formItem, formItem.label)\n\t\t}\n\t}\n\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\n\n\tthis.groupsService.addGroup(this.groupList);\n\t//Yes, I know there are two identical lines here. It doesn't work unless it does it twice\n\t//I don't know why that is, but if you can figure out a better way, go ahead.\n\tthis.geoDataService.getFeatures(Number(feat.project_id));\n\tthis.geoDataService.getFeatures(Number(feat.project_id));\n  }\n\n  addGroups(name: string) {\n\t  this.tempGroup.forEach( (feat) => {\n\t\t  this.selectGroupForm(name, feat)\n\t  })\n\t  this.groupsService.setUnselectAll(true);\n\t  this.scrollService.setScrollRestored(true)\n\t}\n\n  getGroupNameFromColor(color: string) {\n\tthis.groupList.forEach(e => {\n\t  if (e.color == color) {\n\t\tthis.currentGroup = e.name;\n\t  }\n\t});\n  }\n\n}\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { FormsService } from '../../../../services/forms.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { consoleTestResultHandler } from 'tslint/lib/test';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\n\n@Component({\n  selector: 'app-form-generator',\n  templateUrl: './form-generator.component.html',\n  styleUrls: ['./form-generator.component.scss']\n})\n\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\n  @Input() field: any;\n  private formGroup$: Subscription;\n  form: FormGroup;\n  checked: boolean = false;\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\n  colorArray: Array<string> = []\n\n  constructor(private formsService: FormsService) { }\n\n  ngOnInit() {\n\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\n\t  this.form = next;\n\t});\n\n  // console.log(this.formsService.getCheckedOpt())\n  // this.formsService.addCheckedOpt(this.field.options[0]);\n\n  // this.field.options.forEach(function (value) {\n    \n  // console.log(\"GOT HERE\")\n  //   if(this.formsService.getCheckedOpt().length != 0){\n  //     console.log(\"GOT HERE\")\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\n  //     if (index > -1){\n  //       this.checked = true\n  //     }\n  //   }});\n\n  //   console.log(\"GOT HERE\")\n  \n    this.generateColors()\n  }\n \n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\n  generateColors(){\n    let itemCount = this.field.options.length\n    let isOdd = false\n    if( itemCount % 2 === 1 ) {\n      //if there are an odd number of items in the collection, mark it and decriment the counter\n      isOdd = true\n      itemCount --\n    }\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\n    itemCount = (itemCount - 2)/2\n    let incrementVal = Math.floor(255/itemCount)\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\n    this.colorArray.push(\"#00FF00\")\n    let baseNum = 0\n    let temp\n    //First loop, counts up from zero towards 255\n    for (let index = 0; index < itemCount; index++) {\n      baseNum = baseNum + incrementVal\n      temp = baseNum.toString(16)\n      this.colorArray.push(`#${temp}FF00`)\n    }\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\n    baseNum = 255 //Resets baseNum to 255 for the count down\n    //Second loop, counts down from 255 towards zero\n    for (let index = 0; index < itemCount; index++) {\n      baseNum = baseNum - incrementVal\n      temp = baseNum.toString(16)\n      if (temp.length != 2) { temp = \"0\" + temp; }\n      this.colorArray.push(`#FF${temp}00`)\n    }\n    //Finally, pushes the color code for red onto the stack for the last entry\n    this.colorArray.push('#FF0000')\n  }\n\n// export class FormGeneratorComponent implements OnInit, OnChanges {\n  name = new FormControl('');\n\n  // get isValid() { return this.form.controls[this.field.label].valid; }\n\n  ngOnDestroy() {\n\tthis.formGroup$.unsubscribe();\n  }\n\n  // @Output() onSubmit = new EventEmitter();\n  // @Input() fields: any[] = [];\n  // form: FormGroup;\n\n  // ngOnInit() {\n  //\tthis.generateFields();\n  //\t// let fieldsCtrls = {};\n  //\t// for (let f of this.fields) {\n  //\t//   if (f.type != 'checkbox') {\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\n  //\t//   } else {\n  //\t// let opts = {};\n  //\t// for (let opt of f.options) {\n  //\t//   opts[opt.key] = new FormControl(opt.value);\n  //\t// }\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\n  //\t//   }\n  //\t// }\n  //\t// this.form = new FormGroup(fieldsCtrls);\n  // }\n\n  // // Combine this with\n  // ngOnChanges() {\n  //\tthis.generateFields();\n  // }\n\n  // generateFields() {\n  //\tlet fieldsCtrls = {};\n\n  //\tfor (let f of this.fields) {\n  //\t  // if (f.type != 'checkbox') {\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\n  //\t  // } else {\n  //\t\t// let opts = {};\n  //\t\t// for (let opt of f.options) {\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\n  //\t\t// }\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\n  //\t  // }\n  //\t}\n\n  //\tthis.form = new FormGroup(fieldsCtrls);\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\nimport {FeatureCollection} from 'geojson';\nimport { Project } from '../../../models/models';\nimport { ProjectsService } from '../../../services/projects.service';\nimport { FormsService } from '../../../services/forms.service';\nimport { GroupsService} from '../../../services/groups.service';\nimport { GeoDataService } from '../../../services/geo-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { templateJitUrl } from '@angular/compiler';\nimport { Feature, tag } from '@turf/turf';\nimport { group } from '@angular/animations';\nimport { FeatureService } from 'src/app/services/feature.service';\n\n@Component({\n  selector: 'app-select-group',\n  templateUrl: './select-group.component.html',\n  styleUrls: ['./select-group.component.scss']\n})\nexport class SelectGroupComponent implements OnInit, OnDestroy {\n\n  groups$: Subscription;\n  activeGroup$: Subscription;\n\n  public selectedProject: Project;\n\n  selectedGroup: string;\n  groupList: Array<any>;\n  showSidebar: boolean\n  activeGroup: string;\n  showSubitem: boolean = true;\n  \n  currentIcon: string = \"fa-house-damage\";\n  choice: string;\n  tempGroup: Array<Feature>;\n\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\n\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\n\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\n\n\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\n\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\n\t\t\t\t\t\t];\n\n  constructor(private formsService: FormsService,\n\t\t\t  private groupsService: GroupsService,\n\t\t\t  private geoDataService: GeoDataService,\n\t\t\t  private projectsService: ProjectsService,\n\t\t\t  private dialog: MatDialog,\n\t\t\t  private featureService: FeatureService) { }\n\n  ngOnInit() {\n\t  this.groupsService.tempGroup.subscribe((next) => {\n\t\tthis.tempGroup = next;\n\t  });\n\n\tthis.projectsService.activeProject.subscribe(next => {\n\t  this.selectedProject = next;\n\t});\n\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\n\t  this.groupList = next;\n\t});\n\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n  }\n\n  selectGroupForm(group: string) {\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\n\tthis.groupsService.setActiveGroup(group);\n\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\n\n\tif (activeGroup[0].features.length == 0) {\n\t  this.groupsService.setFeatureImagesExist(false);\n\t} else {\n\t  this.groupsService.setFeatureImagesExist(true);\n\t}\n\tthis.groupsService.setActiveFeatureNum(0);\n\tthis.formsService.changeGroupForm(group);\n  }\n\n  openRenameOptionModal(template: TemplateRef<any>) {\n\tthis.dialog.open(template);\n  }\n\n  deleteGroup(name: string) {\n\n\tlet data = this.formsService.getTags();\n\twhile(true){\n\t\tconst index = data.findIndex(item => item.groupName === name);\n\t\t// delete this.exampleNote[index];\n\t\tif (index > -1) {\n\t\tdata.splice(index, 1);\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\n\tthis.groupList.forEach(group => {\n\t\tif (group.name == name){\n\t\t\tthis.tempGroup = group.features;\n\t\t\tthis.groupList = this.groupList.filter(e => e.name != name);\n\t\t}\n\t});\n\n\tfor (let feat of this.tempGroup){\n\n\t\tlet featProp = feat.properties;\n\n\t\tfeatProp.group = featProp.group.filter(e => e.name != name);\n\n\t\tfeatProp.tag = data\n\t\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\n\n\t\tthis.groupsService.addGroup(this.groupList);\n\t}\n\n\tif (this.groupList.length <= 0) {\n\t  this.showSidebar = false;\n\t  this.groupsService.setShowSidebar(this.showSidebar);\n\t} else {\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\n\t}\n  }\n\n  openRenameModal(template: TemplateRef<any>, name: string) {\n\tthis.selectedGroup = name;\n\tthis.dialog.open(template);\n  }\n\n  openIconSelection(template: TemplateRef<any>, name:string){\n\tthis.selectedGroup =  name;\n\t//Set the default icon to be the group's icon\n\tthis.groupList.forEach(e => {\n\t\tif (e.name == this.activeGroup) {\n\t\t  this.choice = e.icon;\n\t\t}\n\t  });\n\tthis.dialog.open(template);\n  }\n\n  saveIcon(icon: string){\n\tthis.groupList.forEach(e => {\n\t  if (e.name == this.activeGroup) {\n\t\te.icon = icon;\n\t\tthis.tempGroup = e.features;\t\n\t  }\n\t});\n\tthis.groupsService.addGroup(this.groupList);\n\n\tlet index = 0\n\tfor (let feat of this.tempGroup) {\n\t\tlet featProp = feat.properties;\n\t\t console.log(feat.id)\t\t\n\tthis.groupsService.setActiveGroup(this.activeGroup);\n\t\tthis.formsService.saveStyles(\"default\", Number(feat.id))\n\t}\n  }\n\n  isChecked(name: string) {\n\tif (this.activeGroup == name) {\n\t  return \"checked\";\n\t} else {\n\t  return \"\";\n\t}\n  }\n\n\n  renameGroup(name: string) {\n\tthis.groupList.forEach(e => {\n\t  if (e.name == this.activeGroup) {\n\t\te.name = name;\n\t\tthis.tempGroup = e.features;\n\t  }\n\tthis.dialog.closeAll()\n\t});\n\t\n\tthis.groupsService.addGroup(this.groupList);\n\n\t//Loops through every feature in tempGroup, trying to match them to the features in the group list\n\tfor (let feat of this.tempGroup) {\n\t\tlet featProp = feat.properties;\n\t\tfeatProp.group.forEach(group => {\n\t\t\tif ( group.name == this.selectedGroup ) {\n\t\t\t\tgroup.name = name\n\t\t\t}\n\t\t});\n\n\t\t//Finds every tag with the old group name and changes it to the new name\n\t\ttry{\n\t\t\tfeatProp.tag.forEach(tag => {\n\t\t\t\tif( tag.groupName == this.selectedGroup ) {\n\t\t\t\t\ttag.groupName = name\n\t\t\t\t}\n\t\t\t});\n\t\t} catch {}\n\n\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\n\t}\t\n\tthis.groupsService.setActiveGroup(name);\n  }\n\n  expandPanel() {\n\tthis.showSubitem = !this.showSubitem;\n\tif (this.showSubitem) {\n\n\t} else {\n\t}\n  }\n\n  ngOnDestroy() {\n\tthis.groups$.unsubscribe();\n\tthis.activeGroup$.unsubscribe();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {FeatureCollection} from 'geojson';\nimport { Project } from '../../../models/models';\nimport { ProjectsService } from '../../../services/projects.service';\nimport { GeoDataService } from '../../../services/geo-data.service';\nimport { FormsService } from '../../../services/forms.service';\nimport { GroupsService } from '../../../services/groups.service';\nimport { Subscription } from 'rxjs';\nimport { Feature } from '@turf/turf';\n\n@Component({\n  selector: 'app-select-image',\n  templateUrl: './select-image.component.html',\n  styleUrls: ['./select-image.component.scss']\n})\n\nexport class SelectImageComponent implements OnInit, OnDestroy {\n  groups$: Subscription;\n  activeFeatureNum$: Subscription;\n  activeGroup$: Subscription;\n\n  public selectedProject: Project;\n  groupList: Array<any> = [];\n  activeGroup: string;\n  activeFeatureNum: number;\n  showSidebar: boolean\n  showSubitem: boolean = true;\n  tempGroup: Array<Feature>;\n\n  constructor(private formsService: FormsService,\n\t\t\t  private groupsService: GroupsService,\n\t\t\t  private geoDataService: GeoDataService,\n\t\t\t  private projectsService: ProjectsService) {}\n\n  ngOnInit() {\n\tthis.projectsService.activeProject.subscribe(next => {\n\t  this.selectedProject = next;\n\t});\n\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\n\t  this.groupList = next;\n\t});\n\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\n\t  this.activeFeatureNum = next;\n\t});\n\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n\t  this.activeGroup = next;\n\t});\n  }\n\n  getActiveFeatures() {\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\n\treturn activeGroupObj[0].features;\n  }\n\n  jumpToImage(asset: any) {\n\tlet index = 0;\n\tthis.groupList.forEach(e => {\n\t  if (e.name == this.activeGroup) {\n\t\tindex = e.features.indexOf(asset)\n\t  }\n\t});\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\n\tthis.groupsService.setActiveFeatureNum(index);\n  }\n\n  isActiveFeature(asset: any) {\n\tlet index = 0;\n\tthis.groupList.forEach(e => {\n\t  if (e.name == this.activeGroup) {\n\t\tindex = e.features.indexOf(asset)\n\t  }\n\t});\n\treturn this.activeFeatureNum == index;\n  }\n\n  deleteGroup(name: string) {\n\t\n\tthis.groupList.forEach(group => {\n\t\tif (group.name == name){\n\t\t\tthis.tempGroup = group.features;\n\t\t\tthis.groupList = this.groupList.filter(e => e.name != name);\n\t\t}\n\t});\n\n\tfor (let feat of this.tempGroup){\n\n\t\tlet featProp = feat.properties;\n\n\t\tfeatProp.group = featProp.group.filter(e => e.name != name);\n\t\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\n\n\t\tthis.groupsService.addGroup(this.groupList);\n\t}\n\n\tif (this.groupList.length <= 0) {\n\t  this.showSidebar = false;\n\t  this.groupsService.setShowSidebar(this.showSidebar);\n\t} else {\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\n\t}\n  }\n\n  //Might move the guts of this method to either featureService or groupService and have it update the observable\n  //Delete asset removes the feature from the active group\n  deleteAsset(assetId: any) {\n\tthis.groupList.forEach(group => {\n\t  if (group.name === this.activeGroup) {\n\t\tthis.tempGroup = group.features;\n\t\tif (group.features.length == 1) {\n\t\t  this.deleteGroup(group.name);\n\t\t} else {\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\n\t\t}\n\t  }\n\t});\n\n\tfor (let feat of this.tempGroup){\n\n\tlet featProp = feat.properties;\n\tif (feat.id == assetId){\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\n\t}\n\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\n\tthis.groupsService.addGroup(this.groupList);\n\t}}\n\n  getAssetDisplay(asset: any) {\n\tif (asset.assets[0].display_path) {\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\n\t} else {\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\n\t  return apath.slice(0, 15) + \"...\"\n\t}\n  }\n\n  ngOnDestroy() {\n\tthis.groups$.unsubscribe();\n\tthis.activeFeatureNum$.unsubscribe();\n\tthis.activeGroup$.unsubscribe();\n  }\n\n  expandPanel() {\n\tthis.showSubitem = !this.showSubitem;\n\tif (this.showSubitem) {\n\n\t} else {\n\t}\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-fields',\n  templateUrl: './form-fields.component.html',\n})\nexport class FormFieldsComponent implements OnInit {\n  @Input() field:any;\n  @Input() form:any;\n\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  // get isValid() { return true }\n  // get isDirty() { return false }\n\n\n  constructor() { }\n\n  // This file and the HTML connected to this is useless so don't worry about it \n  ngOnInit() {\n\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FeatureService } from 'src/app/services/feature.service';\nimport { FormsService } from 'src/app/services/forms.service';\nimport { GroupsService } from 'src/app/services/groups.service';\n\n@Component({\n  selector: 'app-form-checkbox',\n  templateUrl: 'form-checkbox.component.html'\n})\nexport class FormCheckBoxComponent {\n  @Input() field:any;\n  @Input() form:FormGroup;\n  isChecked: boolean = false;\n  private activeFeatureId$: Subscription;\n  activeFeatureId: number;\n  private activeGroup$: Subscription;\n  activeGroup: string;\n  // get isValid() { return this.form.controls[this.field.name].valid; }\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor(private formsService: FormsService,\n    private groupsService: GroupsService,\n    private featureService: FeatureService) { }\n\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\n\n  ngOnInit() {\n    // console.log(this.field)\n    // console.log(this.form)\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\n      this.activeFeatureId = next;\n    \n      this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n      this.activeGroup = next;\n    });\n    });\n\n    // this code checks if the option has been checked or not\n    if(this.formsService.getCheckedOpt().length != 0){\n \n      let index \n      this.checkedOpt.forEach(opt => {      \n\n        if(opt != undefined){\n          index = opt.findIndex(item => item.id === this.activeFeatureId && item.option === this.field.label && item.group === this.activeGroup && item.label === this.form['label']);\n\n          if (index > -1){\n            this.isChecked = true\n          }}\n      })\n      // const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\n\n    }\n  }\n\n  ngOnDestroy() {\n    this.activeFeatureId$.unsubscribe();\n    }\n\n  // adds/deletes to/from the list of checked options\n  selected(e:any, option:object){\n    if(e.target.checked){\n      console.log(\"Checked\")\n      this.featureService.updateChecked(option, this.activeFeatureId, this.activeGroup, this.form['label'], \"create\");\n\n    }else{\n      console.log(\"Unchecked\")\n      this.featureService.updateChecked(option, this.activeFeatureId, this.activeGroup, this.form['label'], \"delete\");\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FeatureService } from 'src/app/services/feature.service';\nimport { FormsService } from 'src/app/services/forms.service';\nimport { GroupsService } from 'src/app/services/groups.service';\n\n@Component({\n  selector: 'app-form-dropdown',\n  templateUrl: './form-dropdown.component.html',\n})\n\nexport class FormDropDownComponent {\n  @Input() field:any = {};\n  @Input() form:FormGroup;\n  chosenTag:string;\n  private activeFeatureId$: Subscription;\n  activeFeatureId: number;\n\n  activeGroup: string;\n  private activeGroup$: Subscription;\n\n  constructor(private formsService: FormsService,\n    private groupsService: GroupsService,\n    private featureService: FeatureService) { }\n\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \n  ngOnInit() {\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\n      this.activeFeatureId = next;\n    });\n\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n      this.activeGroup = next;\n    });\n\n    let index\n    this.formsService.getSelectedRadio().forEach(opt=> {\n      // console.log(opt)\n      if(opt != undefined){\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 2 && item.groupName === this.activeGroup && item.label === this.form['label']);\n        // console.log(index)\n        if (index > -1){\n          // console.log(opt[index].option)\n          this.chosenTag = opt[index].option\n        }}\n      \n      \n    });\n\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\n    // if (index > -1){\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\n    // }\n    \n    // console.log(this.chosenTag)\n  }\n\n  updateCheckedTag(){ this.featureService.updateExtra(this.chosenTag, 2, this.activeFeatureId, this.activeGroup, this.form['label'], \"dropdown\");}\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password,\n@Component({\n  selector: 'app-form-file',\n  templateUrl: './form-file.component.html',\n  styleUrls: ['./form-file.component.scss'],\n})\nexport class FormFileComponent {\n\t@Input() field:any = {};\n\t@Input() form:FormGroup;\n\tget isValid() { return this.form.controls[this.field.name].valid; }\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\n\n\tconstructor() {\n\n\t}\n\n\tngOnChange(){\n\t  console.log(this.field.value);\n\t  // this.field.value.\n\t}\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FeatureService } from 'src/app/services/feature.service';\nimport { FormsService } from 'src/app/services/forms.service';\nimport { GroupsService } from 'src/app/services/groups.service';\n\n@Component({\n  selector: 'app-form-radio',\n  templateUrl: './form-radio.component.html',\n})\nexport class FormRadioComponent {\n  @Input() field:any = {};\n  @Input() form:FormGroup;\n  @Input() label:String;\n  public chosenTag: string;\n  private activeFeatureId$: Subscription;\n  activeFeatureId: number;\n\n  activeGroup: string;\n  private activeGroup$: Subscription;\n\n  constructor(private formsService: FormsService,\n    private groupsService: GroupsService,\n    private featureService: FeatureService) { }\n\n  ngOnInit() {\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\n      this.activeFeatureId = next;\n    });\n\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n      this.activeGroup = next;\n    });\n\n    let index\n    this.formsService.getSelectedRadio().forEach(opt=> {\n      if(opt != undefined){\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID == 0 && item.groupName === this.activeGroup && item.label === this.form['label']);\n        if (index > -1){\n          this.chosenTag = opt[index].option\n        }}\n      \n      \n    });\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\n    // console.log(index)\n    // if (index > -1){\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\n    // }\n  // }\n  }\n\n  updateCheckedTag(){ this.featureService.updateExtra(this.chosenTag, 0, this.activeFeatureId, this.activeGroup,this.form['label'], \"radio\");}\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FeatureService } from 'src/app/services/feature.service';\nimport { FormsService } from 'src/app/services/forms.service';\nimport { GroupsService } from 'src/app/services/groups.service';\n\n// text,email,tel,textarea,password,\n@Component({\n  selector: 'app-form-textbox',\n  templateUrl: './form-textbox.component.html',\n})\nexport class FormTextBoxComponent {\n  @Input() field:any = {};\n  @Input() form:FormGroup;\n  note:string;\n  notes:string = \"notes\";\n  private activeFeatureId$: Subscription;\n  activeFeatureId: number;\n\n  activeGroup: string;\n  private activeGroup$: Subscription;\n\n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor(private formsService: FormsService,\n    private groupsService: GroupsService,\n    private featureService: FeatureService) { }\n\n  ngOnInit() {\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\n      this.activeFeatureId = next;\n    });\n\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n      this.activeGroup = next;\n    });\n\n    let index\n    this.formsService.getSelectedRadio().forEach(opt=> {\n      // console.log(opt)\n      if(opt != undefined){\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 3&&item.groupName === this.activeGroup && item.label === this.form['label']);\n        // console.log(index)\n        if (index > -1){\n          // console.log(opt[index].option)\n          this.note = opt[index].option\n        }\n      }\n      \n      \n    });\n\n    // const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\n    // if (index > -1){\n    //   this.note = this.formsService.getNotes()[index]['option']\n    // }\n  }\n\n  updateNotes(){ \n    // console.log(this.form['label'])\n    // console.log(this.form.name)\n    this.featureService.updateExtra(this.note, 3, this.activeFeatureId, this.activeGroup, this.form['label'], \"text\"); }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FeatureService } from 'src/app/services/feature.service';\nimport { FormsService } from 'src/app/services/forms.service';\nimport { GroupsService } from 'src/app/services/groups.service';\n\n@Component({\n  selector: 'app-form-color',\n  templateUrl: './form-color.component.html',\n  styleUrls: ['./form-color.component.scss']\n})\nexport class FormColorComponent implements OnInit {\n  @Input() field:any = {};\n  @Input() form:FormGroup;\n  @Input() color:string;\n  @Input() label:String;\n\n  public chosenTag: string;\n  public chosenColor = \"#ffffff\";\n  private activeFeatureId$: Subscription;\n  activeFeatureId: number;\n\n  activeGroup: string;\n  private activeGroup$: Subscription;\n\n  constructor(private formsService: FormsService,\n    private groupsService: GroupsService,\n    private featureService: FeatureService) { }\n\n  ngOnInit() {\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\n      this.activeFeatureId = next;\n    });\n\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\n      this.activeGroup = next;\n    });\n\n    let index\n    this.formsService.getSelectedRadio().forEach(opt=> {\n      if(opt != undefined){\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 1 && item.groupName === this.activeGroup && item.label === this.form['label']);\n        if (index > -1){\n          this.chosenTag = opt[index].option\n        }\n      }\n      \n      this.chosenColor = this.color \n      \n    });\n  }\n\n  updateCheckedTag(){ \n    this.formsService.saveStyles(this.chosenColor, this.activeFeatureId)\n    this.featureService.updateExtra(this.chosenTag, 1, this.activeFeatureId, this.activeGroup, this.form['label'], \"color\"); }\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// CommonModule for dynamic field\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { FileSizeModule } from 'ngx-filesize';\nimport { ApiModule} from 'ng-tapis';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent} from './components/map/map.component';\nimport { MainComponent } from './components/main/main.component';\nimport { NotFoundComponent } from './components/notfound/notfound.component';\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\nimport { AuthService } from './services/authentication.service';\nimport { CallbackComponent } from './components/callback/callback.component';\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\nimport {environment} from '../environments/environment';\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\n// import { TaggerComponent } from './components/tagger/tagger.component';\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\n// import { ImageListComponent } from './components/image-list/image-list.component';\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\nimport {MatTreeModule} from '@angular/material/tree';\nimport { MatProgressBar } from '@angular/material';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\n\tControlBarComponent,\n\tCallbackComponent,\n\tModalFileBrowserComponent,\n\tImageGalleryComponent,\n\t// TaggerComponent,\n\t// PresetGeneratorComponent,\n\tImageBoxComponent,\n\tFormGeneratorComponent,\n\tSideBarComponent,\n\t// ImageListComponent,\n\tSelectGroupComponent,\n\tSelectImageComponent,\n\tTagGeneratorComponent,\n\tTagImagesComponent,\n\tModalCreateProjectComponent,\n\tModalCurrentProjectComponent,\n\tMatProgressBar,\n\tModalDownloadSelectorComponent,\n\tFormFieldsComponent,\n\tFormCheckBoxComponent,\n\tFormDropDownComponent,\n\tFormFileComponent,\n\tFormRadioComponent,\n\tFormTextBoxComponent,\n\tModalShareProjectComponent,\n\tFormColorComponent\n\n  ],\n  imports: [\n\t// this is for the ng-tapis library\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\n\tBrowserModule,\n\tAppRoutingModule,\n\tHttpClientModule,\n\tBrowserAnimationsModule,\n\tInfiniteScrollModule,\n\tNgxSpinnerModule,\n\tNgxMasonryModule,\n\tToastrModule.forRoot(),\n\tModalModule.forRoot(),\n\tMatMenuModule,\n\tMatToolbarModule,\n\tMatButtonModule,\n\tMatDialogModule,\n\tMatTooltipModule,\n\tMatInputModule,\n\tMatCheckboxModule,\n\tMatSelectModule,\n\tMatRadioModule,\n\tMatIconModule,\n\tAccordionModule.forRoot(),\n\tReactiveFormsModule,\n\tFormsModule,\n\tFileSizeModule,\n\tBsDropdownModule.forRoot(),\n\tCommonModule,\n\tMatProgressSpinnerModule,\n\tScrollingModule,\n\tMatTreeModule,\n\tMatSnackBarModule,\n\tMatCardModule\n  ],\n  providers: [\n\tAuthService,\n\t{\n\t  provide: HTTP_INTERCEPTORS,\n\t  multi: true,\n\t  useClass: AuthInterceptor\n\t},\n\t{\n\t  provide: HTTP_INTERCEPTORS,\n\t  multi: true,\n\t  useClass: TokenInterceptor\n\t},\n\t{\n\t  provide: APP_BASE_HREF,\n\t  useValue: environment.baseHref\n\t}\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\n})\nexport class AppModule { }\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default \"<div class=\\\"tag-forms\\\">\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\n\\t<span>\\n\\t  Tag Images\\n\\t</span>\\n\\t<span>\\n\\t  <span style=\\\"cursor: pointer\\\"\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\n\\t  </span>\\n\\t</span>\\n  </div> <!-- subitem-title -->\\n\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\n\\t  <div class=\\\"subitem-scroll\\\">\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\n\\t\\t\\t\\t\\t<div (click)=\\\"deleteTag(tag)\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\n\\t\\t\\t\\t\\t\\t</i>\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\n\\t\\t\\t\\t\\t\\t</i>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"tag.type != 'text'\\\">\\n\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\n\\t\\t\\t\\t\\t\\t  </i>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t  \\n\\t\\t\\t\\t\\t  </div> three dots -->\\n\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"newTagValue\\\"\\n\\t\\t\\t\\t\\t\\t\\tvalue={{tag.label}}\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\"\\n\\t\\t\\t\\t\\t\\t\\t(keyup.enter)=\\\"renameTag(tag)\\\">\\n\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\" (click)=\\\"renameTag(tag.label)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\n\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\n\\n\\t\\t\\t\\t</div> <!-- button group -->\\n\\t\\t\\t</div> <!-- form-item-container -->\\n\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\n\\t\\t\\t\\t\\t  </div>\\n\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\n\\t\\t\\t\\t\\t\\t\\t</i>\\n\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\n\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\n\\t\\t\\t\\t\\t\\t</i>\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\n\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\n\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\n\\n\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\n\\t\\t\\t  </div> <!-- opt container-->\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\n\\t\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t</div> <!-- subitem scroll -->\\n  </div> <!--subitem -->\\n\\n  <ng-template #elseBlock>\\n\\tNo tag presets for this Group!\\n  </ng-template>\\n\\n</div> <!-- tag-forms -->\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\n<!--   Name: -->\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\n<!-- </label> -->\\n\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\n<div>\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\n\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\n\\t</ng-container>\\n\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\n\\t</ng-container>\\n\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\" label={{field.label}}></app-form-radio>\\n\\t  </div>\\n\\t</ng-container>\\n\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\n\\t  </div>\\n\\t</ng-container>\\n\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" label={{field.label}} [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\n\\t\\t</div>\\n\\t</ng-container>\\n\\n  </div>\\n\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\n<!--   </div> -->\\n<!-- </form> -->\\n\""]}