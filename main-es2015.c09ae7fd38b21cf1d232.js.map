{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environmentType.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","d","__decorate","__param","__metadata","__importDefault","decorators","target","key","desc","c","arguments","length","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","mod","__esModule","NotFoundComponent","[object Object]","tslib_es6","a","core","n","selector","template","b","Group","AssetFilters","this","bbox","assetType","Set","has","delete","add","Project","AuthToken","token","expires","Date","expires_in","getTime","Feature","f","geometry","properties","type","assets","styles","project_id","asset_type","EnvironmentType","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","fesm2015_router","C","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","console","log","file","form","FormData","append","files","system","path","system_id","exif","getData","outputEXIF","getAllTags","getTag","response","importImage","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","overlays","activeOverlay","ov","mapMouseLocation","loc","basemap","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","value","data","prom","proj","put","getProjects","tap","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","groupList","featureList","tempGroupList","group","color","icon","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","tagData","checkedOptions","chosenTag","option","notebook","radioOptions","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","undefined","updateFormItem","selectedColor","selectedProject","selectedFeatureID","style","faIcon","updateFeatureProperty","groupObject","filter","opt","formObj","finalArray","gName","tag","tLabel","index","findIndex","item","splice","ind","selection","componentId","compId","rOption","change","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","groups$","formType","formName","formLabel","formValue","formRequired","event","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","myOpts","addForm","saveTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","tagList","getTags","activeGroup$","activeFeatureId$","formGroup$","getRawValue","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","marker","featureType","ico","leaflet_src","divIcon","className","html","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","skip","addRemoveOverlay","turf_min","fitBounds","removeLayer","overlay","imageOverlay","set","getBounds","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","fileType","tmp","date","File","lastModified","valueOf","msg","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","list","combineLatest","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","init","browse","pth","currentDirectory","getFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","checkIfSelectable","addSelectedFile","Array","from","close","R","modal_download_selector_component_ModalDownloadSelectorComponent","passbackData","fileExtension","downloadSelectForm","Name","Extension","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","p","create","modal_share_project_component_ModalShareProjectComponent","projShareForm","activeProj","projectUsers","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","interval","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","timerSubscription","reloadFeatures","afterClosed","uploadNewFeature","createBlankFeature","coordinates","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","featProp","Number","addTempGroup","setUnselectAll","setShowGroup","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","forExport","content","CSVHolder","JSONHolder","projID","element","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","export","download","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","err","status","reload","message","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","projectsExist","imagesExist","featureListScroll","slice","groupExist","setActiveFeatureId","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","featurePath","v","geoData","deleteFeature","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","what","SelectImageComponent","activeFeatureNum$","asset","assetId","deleteGroup","getActiveFeatures","FormFieldsComponent","isValid","controls","valid","isDirty","FormCheckBoxComponent","isChecked","addCheckedOpt","deleteCheckedOpt","FormDropDownComponent","getSelectedRadio","updateSelectedRadio","FormFileComponent","FormRadioComponent","FormTextBoxComponent","notes","getNotes","note","updateNotes","FormColorComponent","chosenColor","saveStyes","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,8TCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,0sBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,iqDCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,8rCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,qtBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,wCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,6tECAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,0eCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,47BCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,4ECAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,yyBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,sCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,woDCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,8ECAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,8pICAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,koHCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,qyCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,s0HCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,6iCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,+sCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,sJCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,wICAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,+iLCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,iSCAf,SAASC,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAAA,WACxB,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,4CCZ9Bf,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,20HCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,kpBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,mlBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,qGCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,oUCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,8PCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,i9ICAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,0eCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,uaCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,s8BCAfH,EAAAgB,EAAAd,EAAA,KAAA,WAAA,OAAAe,KAAAjB,EAAAgB,EAAAd,EAAA,KAAA,WAAA,OAAAgB,KAAAlB,EAAAgB,EAAAd,EAAA,KAAA,WAAA,OAAAiB,KAAAnB,EAAAgB,EAAAd,EAAA,KAAA,WAAA,OAAAkB,KAkDO,SAASH,EAAWI,EAAYC,EAAQC,EAAKC,GAChD,IAA2HR,EAAvHS,EAAIC,UAAUC,OAAQ1B,EAAIwB,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyB9B,EAAI6B,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAAShB,EAAIK,EAAWW,MAAI/B,GAAKwB,EAAI,EAAIT,EAAEf,GAAKwB,EAAI,EAAIT,EAAEM,EAAQC,EAAKtB,GAAKe,EAAEM,EAAQC,KAAStB,GAChJ,OAAOwB,EAAI,GAAKxB,GAAK2B,OAAOK,eAAeX,EAAQC,EAAKtB,GAAIA,EAGzD,SAASiB,EAAQgB,EAAYC,GAChC,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,IAGpD,SAASf,EAAWiB,EAAaC,GACpC,GAAuB,iBAAZP,SAAoD,mBAArBA,QAAQQ,SAAyB,OAAOR,QAAQQ,SAASF,EAAaC,GAyH7G,SAASjB,EAAgBmB,GAC5B,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAEpC,QAASoC,uCCxLtDvC,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,4yBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,sCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,4jFCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,6yGCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,+PCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,sCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,opBCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,wuCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,6/ICAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,kVCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,6VCOf,IAAasC,EAAb,MAEEC,eAEAA,cAJWD,EAAiBE,EAAAC,EAAA,CAL7BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,eACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,uEAGWsC,GC6BN,MAAMS,GAKN,MAAMC,EAAbT,cAGEU,KAAAC,KAAsB,GACtBD,KAAAE,UAAyB,IAAIC,IAE7Bb,iBAAiBY,GAClBF,KAAKE,UAAUE,IAAIF,GAAaF,KAAKE,UAAUG,OAAOH,GAAaF,KAAKE,UAAUI,IAAIJ,GAGrFZ,WAAWW,GACZD,KAAKC,KAAOA,EAGXX,SACD,MAAO,CACLY,UAAW,IAAIF,KAAKE,WACpBD,KAAMD,KAAKC,OAgBP,MAAMM,GAIN,MAAMC,EAQXlB,YAAYmB,EAAeC,GAC5BV,KAAKS,MAAQA,EACbT,KAAKU,QAAU,IAAIC,KAAKD,GAGvBpB,qBAAqBmB,EAAeG,GACrC,MAAMF,EAAU,IAAIC,MAAAA,IAASA,MAAOE,UAAyB,IAAbD,GAChD,OAAO,IAAIJ,EAAUC,EAAOC,GAMpBpB,YACR,OAAA,IAAWqB,MAAOE,UAAYb,KAAKU,QAAQG,WA4DrC,MAAMC,EASXxB,YAAYyB,GACbf,KAAKgB,SAAWD,EAAEC,SAClBhB,KAAKiB,WAAaF,EAAEE,WACpBjB,KAAKrC,GAAKoD,EAAEpD,GACZqC,KAAKkB,KAAOH,EAAEG,KACdlB,KAAKmB,OAASJ,EAAEI,OAChBnB,KAAKoB,OAASL,EAAEK,OAChBpB,KAAKqB,WAAaN,EAAEM,WAGnB/B,cACD,OAAIU,KAAKmB,QACc,IAAvBnB,KAAKmB,OAAO5C,OACHyB,KAAKmB,OAAO,GAAGG,WAGpBtB,KAAKmB,QACTnB,KAAKmB,OAAO5C,OAAS,EACZ,aAGJyB,KAAKmB,OAAO5C,YAAjB,EACSyB,KAAKgB,SAASE,MC/LxB,IAAYK,GAAZ,SAAYA,GACVA,EAAAC,WAAA,aACAD,EAAAE,QAAA,UACAF,EAAAG,MAAA,QAHF,CAAYH,IAAAA,EAAe,KCWpB,MAAMI,EAA8B,CACzCC,YAAY,EACZC,OAAQ,0CACRC,SAAU,+BAGVC,SAAU,IACVC,QAAST,EAAgBC,4BCXpB,MAAMS,EAKX3C,YAAY4C,EAAkBC,GAC5BnC,KAAKkC,SAAWA,EAChBlC,KAAKmC,MAAQA,GAYjB,IAAaC,EAAb,MAQE9C,YAAoB+C,EAA0BC,GAA1BtC,KAAAqC,KAAAA,EAA0BrC,KAAAsC,OAAAA,EANtCtC,KAAAuC,aAAiD,IAAIC,EAAAhD,EAAiC,GAC9EQ,KAAAyC,YAA6CzC,KAAKuC,aAAaG,eAEvE1C,KAAA2C,aAAe,iBACf3C,KAAA4C,YAAc,gBAIftD,QAEL,MAAMuD,EAAWC,aAAaC,QAAQ/C,KAAK2C,cAC3C,GAAKE,EAEE,CACL,MAAMpC,EAAQuC,KAAKC,MAAMJ,GACzB7C,KAAKkD,UAAY,IAAI1C,EAAUC,EAAMA,MAAO,IAAIE,KAAKF,EAAMC,UACtDV,KAAKkD,YAAalD,KAAKkD,UAAUC,cACpCnD,KAAKoD,SACLpD,KAAKqD,0BAEPrD,KAAKsD,mBARLtD,KAAKqD,yBAYD/D,yBACN,MAGMiE,EAAW,oEAHC5B,EAAYG,6CACb0B,SAASC,OAAS9B,EAAYI,SAAW,oBAC5C2B,KAAKC,SAASC,SAAS,MAErCC,OAAOL,SAASM,KAAOP,EAOlBjE,aACL,OAAOU,KAAKkD,YAAclD,KAAKkD,UAAUC,YAGpC7D,SACLU,KAAKkD,UAAY,KACjBJ,aAAaiB,WAAW/D,KAAK2C,cAC7BG,aAAaiB,WAAW/D,KAAK4C,aAGxBtD,SAASmB,EAAeC,GAC7BV,KAAKkD,UAAY1C,EAAUwD,cAAcvD,EAAOC,GAChDoC,aAAamB,QAAQjE,KAAK2C,aAAcK,KAAKkB,UAAUlE,KAAKkD,YAE5DlD,KAAKsC,OAAO6B,SAAS,CAAC,MAGjB7E,cACL,MACM8E,EAAUtB,aAAaC,QAAQ/C,KAAK4C,aACpCyB,EAAOrB,KAAKC,MAAMmB,GACX,OAATC,EACFrE,KAAKuC,aAAa+B,KAChB,IAAIrC,EAAkBoC,EAAKnC,SAAUmC,EAAKlC,QAG5CnC,KAAKqC,KAAKkC,IARK,iEAQqBC,UAAUC,IAC5C,MAAMC,EAAI,IAAIzC,EAAkBwC,EAAKE,KAAMF,EAAKtC,OAChDW,aAAamB,QAAQjE,KAAK4C,YAAaI,KAAKkB,UAAUQ,IACtD1E,KAAKuC,aAAa+B,KAAKI,mCA3DHE,EAAA/E,SAA4BgF,EAAAhF,IAR3CuC,EAAW7C,EAAAC,EAAA,CADvBhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CAACuG,WAAY,kCASGH,EAAA/E,EAA4BgF,EAAAhF,KAR3CuC,uDCVb,IAAa4C,EAAb,MAiBE1F,YAAoB+C,GAAArC,KAAAqC,KAAAA,EANZrC,KAAAiF,aAAoD,IAAIC,EAAA1F,EAAoC,MACpFQ,KAAAmF,YAA8CnF,KAAKiF,aAAavC,eAExE1C,KAAAoF,QAAoC,IAAIF,EAAA1F,EAAgB,MACzDQ,KAAAqF,OAA8BrF,KAAKoF,QAAQ1C,eAGnD1C,KAAKsF,UAAY,IAAIJ,EAAA1F,EAAmC,CAAC0B,KAAM,oBAAqBqE,SAAU,KAC9FvF,KAAKwF,UAAYxF,KAAKsF,UAAU5C,eAChC1C,KAAKyF,eAAiB,IAAIP,EAAA1F,EAAqB,MAC/CQ,KAAK0F,kBAAoB,IAAIR,EAAA1F,EAAqB,MAGlDQ,KAAK2F,SAAW,IAAIT,EAAA1F,EAAqB,SAGzCQ,KAAK4F,UAAY,IAAIV,EAAA1F,EAAqB,MAC1CQ,KAAK6F,eAAiB,IAAIX,EAAA1F,EAAqB,MAG9CF,YAAYwG,EAAmBC,EAAsB,IAAIhG,GAC1D,MAAMiG,EAAkBC,EAAA/B,UAAsB6B,EAAMG,UACpDlG,KAAKoF,QAAQd,MAAK,GAClBtE,KAAKqC,KAAKkC,IAAuB5C,EAAYE,OAAS,aAAaiE,cAAwB,IAAME,GAC9FxB,UAAY2B,IACdA,EAAGZ,SAAWY,EAAGZ,SAASa,IAAMC,GAAkB,IAAIvF,EAAQuF,IAC9DrG,KAAKsF,UAAUhB,KAAK6B,GACpBnG,KAAKoF,QAAQd,MAAK,KAIlBhF,cAAcgH,GACftG,KAAKqC,KAAKhC,OAAOsB,EAAYE,OAAS,aAAayE,EAAQjF,uBAAuBiF,EAAQ3I,OACvF6G,UAAYC,IACdzE,KAAKuG,YAAYD,EAAQjF,cAIzB/B,eAAewG,GAChB9F,KAAKqC,KAAKkC,IAAwB5C,EAAYE,OAAS,aAAaiE,kBACjEtB,UAAYC,IAEfzE,KAAKiF,aAAaX,KAAKG,KAItBnF,WAAW+G,GACZrG,KAAKwF,UAAUgB,KAAKhI,OAAAiI,EAAAjH,EAAAhB,CAAK,IAAIgG,UAAYkC,IACvCA,EAAQnB,SAASoB,KAAKN,GACtBrG,KAAKsF,UAAUhB,KAAKoC,KAIrBpH,cAAcwG,EAAmBc,EAAeC,GACjD,MAAMC,EAAU,CACdC,YAAaH,EACbI,sBAAuBH,GAEzB7G,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAaiE,iBAA0BgB,GACxEtC,UAAYC,IACfzE,KAAKkH,eAAepB,IACfqB,OAKJ7H,sBAAsBwG,EAAmBsB,EAAmBC,GAK7DrH,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAaiE,cAAsBsB,gBAAyBC,GAC7F7C,UAAYC,MAEV0C,OAKJ7H,mBAAmBwG,EAAmBsB,EAAmBC,GAK1DrH,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAaiE,cAAsBsB,YAAqBC,GACzF7C,UAAYC,MAEV0C,OAKJ7H,iBAAiBgI,GAClBC,QAAQC,IAAIF,GACZtH,KAAKqC,KAAKhC,OAAOsB,EAAYE,OAAS,aAAayF,EAAGjG,0BAA0BiG,EAAG3J,OAChF6G,UAAYC,IACfzE,KAAKkH,eAAeI,EAAGjG,cAItB/B,oBAAoBgI,EAAiBG,GACtC,MAAMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,OAAQH,GACpBF,QAAQC,IAAIF,GACZtH,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAayF,EAAGjG,0BAA0BiG,EAAG3J,MAAO+J,GACrFlD,UAAYC,IACf8C,QAAQC,IAAI/C,KAIXnF,oBAAoBwG,EAAmB+B,GAExC,MACMf,EAAU,CACde,MAFUA,EAAMzB,IAAKrF,IAAAA,CAAO+G,OAAQ/G,EAAE+G,OAAQC,KAAMhH,EAAEgH,SAIxD/H,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAaiE,2BAAoCgB,GAClFtC,UAAYC,IACd8C,QAAQC,IAAI/C,GACZzE,KAAKuG,YAAYT,IACbqB,IACFI,QAAQC,IAAIL,KAWd7H,YAAYwG,EAAmBQ,EAAkBmB,GAClD,IAAIL,EAAYd,EAAQ3I,GACpBmJ,EAAU,CAACkB,UAAWP,EAAKK,OAAQC,KAAMN,EAAKM,MAClD/H,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,YAAYiE,cAAsBsB,YAAqBN,GAC1FtC,UAAYC,IAEZzE,KAAKuG,YAAYT,GACjByB,QAAQC,IAAIxH,KAAKuF,UACjB0C,EAAAC,QAAalI,KAAKuF,SAAS,GAAGpE,OAAO,GAAG4G,KAAM/H,KAAKmI,gBAMnD7I,aACDiI,QAAQC,IAAIS,EAAAG,WAAgBpI,OAC5BuH,QAAQC,IAAIS,EAAAI,OAAYrI,KAAM,gBAC9BuH,QAAQC,IAAIS,EAAAI,OAAYrI,KAAM,iBAI7BV,iBAAiBwG,EAAmBQ,EAAiBmB,GACtD,IACIa,EADAxB,EAAUR,EAGdtG,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,YAAYiE,cAAuBgB,GACtEtC,UAAYC,IACZzE,KAAKuG,YAAYT,GACjBwC,EAAW,IAAIxH,EAAQ2D,EAAK,IAC5BzE,KAAKuI,YAAYzC,EAAWwC,EAAUb,KAItCnI,gBAAgBwG,EAAmBC,EAAsB,IAAIhG,GAC9D,MAAMiG,EAAkBC,EAAA/B,UAAsB6B,EAAMG,UAC9CsC,EAAeC,SAASC,cAAc,KAE5C1I,KAAKqC,KAAKkC,IAAuB5C,EAAYE,OAAS,aAAaiE,cAAwB,IAAME,GAC9FxB,UAAYC,IACf,MAAMkE,EAAO,IAAIC,KAAK,CAAC5F,KAAKkB,UAAUO,IAAQ,CAACvD,KAAM,qBACrDsH,EAAa1E,KAAO+E,IAAIC,gBAAgBH,GACxCH,EAAaO,aAAa,WAAY,kBACtCN,SAASO,KAAKC,YAAYT,GAC1BA,EAAaU,QACbT,SAASO,KAAKG,YAAYX,KAIzBlJ,WAAWwG,EAAmB2B,GAC/B,MAAMC,EAAiB,IAAIC,SAC3BD,EAAKE,OAAO,OAAQH,EAAMA,EAAK9C,MAC/B3E,KAAKqC,KAAK4E,KAAqBtF,EAAYE,OAAS,aAAaiE,oBAA6B4B,GAC3FlD,UAAY4E,IACfA,EAAMC,QAAUhD,IACdrG,KAAKsJ,WAAW,IAAIxI,EAAQuF,OAEzBc,OAKJ7H,gBAAgBwG,EAAmBsB,EAAmBK,GACvD,MAAMC,EAAiB,IAAIC,SAC3BD,EAAKE,OAAO,OAAQH,EAAMA,EAAK9C,MAC/B3E,KAAKqC,KAAK4E,KAActF,EAAYE,OAAS,iBAAiBiE,cAAsBsB,YAAqBM,GACxGlD,UAAY8B,IAEX,IAAIvF,EAAIf,KAAKyF,eAAe8D,WACzBxI,GAAKA,EAAEpD,KAAOyJ,IAClBpH,KAAKwJ,cAAgB,IAAI1I,EAAQwF,GACjCtG,KAAKuG,YAAYT,KAEfqB,OAKF7H,YAAYwG,GACb9F,KAAKqC,KAAKkC,IAAI5C,EAAYE,OAAS,aAAaiE,eAAuBtB,UAAYiF,IACjFzJ,KAAK4F,UAAUtB,KAAKmF,KAIrBnK,WAAWwG,EAAmB2B,EAAYiC,EAAeC,EAAgBC,EAAgBC,EAAgBC,GAC1G,MAAMhD,EAAU,IAAIa,SACpBb,EAAQc,OAAO,OAAQH,GACvBX,EAAQc,OAAO,QAAS8B,GACxB5C,EAAQc,OAAO,SAAU+B,EAAOI,QAAQ,IACxCjD,EAAQc,OAAO,SAAUgC,EAAOG,QAAQ,IACxCjD,EAAQc,OAAO,SAAUiC,EAAOE,QAAQ,IACxCjD,EAAQc,OAAO,SAAUkC,EAAOC,QAAQ,IAExC/J,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAaiE,cAAuBgB,GACrEtC,UAAWC,IACdzE,KAAKgK,YAAYlE,KAIhBmE,eACD,OAAOjK,KAAK4F,UAAUlD,eAGrB6C,eACD,OAAOvF,KAAKsF,UAAU5C,eAGrB8G,oBACD,OAAOxJ,KAAKyF,eAAe/C,eAI1B8G,kBAAyBzI,GACtBA,EACEA,IAAMf,KAAKyF,eAAe8D,WAChCvJ,KAAKyF,eAAenB,KAAK,MAEzBtE,KAAKyF,eAAenB,KAAKvD,GAGvBf,KAAKyF,eAAenB,KAAK,MAK1B4F,oBACD,OAAOlK,KAAK6F,eAAenD,eAG1BwH,kBAAyBC,GAC1BnK,KAAK6F,eAAevB,KAAK6F,GAIxBC,uBACD,OAAOpK,KAAK0F,kBAAkBhD,eAG7B0H,qBAA4BC,GAC7BrK,KAAK0F,kBAAkBpB,KAAK+F,GAG3BC,YAAmBC,GACpBvK,KAAK2F,SAASrB,KAAKiG,GAGlBD,cACD,OAAOtK,KAAK2F,SAASjD,6CAhRMkC,EAAA/E,IAjBfmF,EAAczF,EAAAC,EAAA,CAH1BhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CACVuG,WAAY,kCAmBcH,EAAA/E,KAjBfmF,GCFb,IAAawF,EAAb,MAKElL,YAAoBmL,EAAwCC,EAAkCC,GAA1E3K,KAAAyK,eAAAA,EAAwCzK,KAAA0K,YAAAA,EAAkC1K,KAAA2K,eAAAA,EAE9FrL,0CAFoC0F,SAAqC5C,SAAqCwI,EAAAvM,IALnGmM,EAAajL,EAAAC,EAAA,CALzBhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,WACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAQoCiI,EAAqC5C,EAAqCwI,EAAAvM,KALnGmM,GCLb,IAAaK,EAAb,MAEEvL,YAAoBwL,EAA+BC,GAA/B/K,KAAA8K,MAAAA,EAA+B9K,KAAA+K,KAAAA,EAEnDzL,WAED,MAAM0L,EAAOhL,KAAK8K,MAAMG,SAASC,SAC3BC,EAAS,IAAIC,gBAAgBJ,GAC7BvK,EAAQ0K,EAAO5G,IAAI,gBACnB3D,GAAcuK,EAAO5G,IAAI,cAC/BvE,KAAK+K,KAAKM,SAAS5K,EAAOG,iCAREiE,EAAArF,SAA8B4C,IAF9CyI,EAAiBtL,EAAAC,EAAA,CAL7BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,eACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAK2B8H,EAAArF,EAA8B4C,KAF9CyI,2CCIb,IAAaS,EAAb,MASEhM,YAAoB+C,EACVqI,GADU1K,KAAAqC,KAAAA,EACVrC,KAAA0K,YAAAA,EARF1K,KAAAuL,UAAwC,IAAIrG,EAAA1F,EAAgB,IACpDQ,KAAAwL,SAAkCxL,KAAKuL,UAAU7I,eACzD1C,KAAAyL,eAAyC,IAAIjJ,EAAAhD,EAAuB,GAC3DQ,KAAA0L,cAAqC1L,KAAKyL,eAAe/I,eAClE1C,KAAA2L,cAAoD,IAAInJ,EAAAhD,EAAmC,GACnFQ,KAAA4L,cAAiD5L,KAAK2L,cAAcjJ,eAKlFpD,aAKeU,KAAKqC,KAAK4E,KAAc,kCAJxB,CACXtC,KAAQ,kBACVoC,YAAe,iBAE+DvC,UAAWC,IACvFzE,KAAKuL,UAAUjH,KAAK,IAAItE,KAAKuL,UAAUM,MAAOpH,IAEhDzE,KAAKyL,eAAenH,KAAKG,KAGzBzE,KAAKqC,KAAKkC,IAAe,mCAAmCC,UAAWC,IACrEzE,KAAKuL,UAAUjH,KAAKG,KAO1BnF,cACCU,KAAKqC,KAAKkC,IAAe5C,EAAYE,OAAS,cAAc2C,UAAWC,IACrEzE,KAAKuL,UAAUjH,KAAKG,IAGnB0C,IACFI,QAAQC,IAAI,iBAIdlI,OAAOwM,GACL,MAAMC,EAAO/L,KAAKqC,KAAK4E,KAActF,EAAYE,OAAS,aAAciK,GAYxE,OAXAC,EAAKvH,UAAUwH,IAMbhM,KAAKuL,UAAUjH,KAAK,IAAItE,KAAKuL,UAAUM,MAAOG,IAE9ChM,KAAKyL,eAAenH,KAAK0H,KAE3BzE,QAAQC,IAAIxH,KAAKyL,gBACVM,EAGTzM,iBAAiB0M,GACfhM,KAAKyL,eAAenH,KAAK0H,GAI3B1M,OAAOwM,GAEL9L,KAAKqC,KAAK4J,IAAatK,EAAYE,OAAS,aAAaiK,EAAKnO,MAAOmO,GAAMtH,UACxEC,IACCzE,KAAKyL,eAAenH,KAAKG,KAM/BnF,OAAOwM,GACL9L,KAAKqC,KAAKhC,OAAOsB,EAAYE,OAAU,aAAaiK,EAAKnO,OACtD6G,UAAYC,IACXzE,KAAKkM,gBAOX5M,gBAAgB0M,GACd,OAAOhM,KAAKqC,KAAKkC,IAAyB5C,EAAYE,OAAS,aAAamK,EAAKrO,aAAa6I,KAC5FhI,OAAA2N,EAAA3M,EAAAhB,CAAI4N,IACFpM,KAAK2L,cAAcrH,KAAK8H,MAI9B9M,iBAAiB0M,EAAeK,GAC9B,MAAMvF,EAAU,CACd5E,SAAUmK,GAEZrM,KAAKqC,KAAK4E,KAAKtF,EAAYE,OAAS,aAAamK,EAAKrO,YAAamJ,GAChEtC,UAAYC,IACXzE,KAAKsM,gBAAgBN,GAAMxH,cAIjClF,sBAAsB0M,EAAc3H,GAClCrE,KAAKqC,KAAKhC,OAAOsB,EAAYE,OAAS,aAAamK,EAAKrO,YAAY0G,MACnEG,UAAWC,IACVzE,KAAKsM,gBAAgBN,GAAMxH,aAC3B2C,IAEAI,QAAQC,IAAIL,mCAhGUvC,EAAA/E,SACHuC,IAVZkJ,EAAe/L,EAAAC,EAAA,CAH3BhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CACVuG,WAAY,kCAWcH,EAAA/E,EACHuC,KAVZkJ,GCJb,IAAaiB,EAAb,MAoCEjN,YAAoBkN,GAAAxM,KAAAwM,gBAAAA,EAnCZxM,KAAAyM,QAAgC,IAAIvH,EAAA1F,EAAgB,IACrDQ,KAAA0M,OAA0B1M,KAAKyM,QAAQ/J,eACtC1C,KAAA2M,OAA+B,IAAIzH,EAAA1F,EAAgB,IACpDQ,KAAA4M,MAAyB5M,KAAK2M,OAAOjK,eACpC1C,KAAA6M,WAAmC,IAAI3H,EAAA1F,EAAgB,IACxDQ,KAAA8M,UAA6B9M,KAAK6M,WAAWnK,eAC5C1C,KAAA+M,WAAuC,IAAI7H,EAAA1F,EAAgB,MAC5DQ,KAAAgN,UAAiChN,KAAK+M,WAAWrK,eAChD1C,KAAAiN,aAAyC,IAAI/H,EAAA1F,EAAgB,MAC9DQ,KAAAkN,YAAmClN,KAAKiN,aAAavK,eAEpD1C,KAAAyF,eAAuC,IAAIP,EAAA1F,EAAqB,MACjEQ,KAAAwJ,cAAiCxJ,KAAKyF,eAAe/C,eAEpD1C,KAAAmN,aAAwC,IAAIjI,EAAA1F,EAAwB,MACrEQ,KAAAoN,YAAkCpN,KAAKmN,aAAazK,eAEnD1C,KAAAqN,kBAA6C,IAAInI,EAAA1F,EAAwB,MAC1EQ,KAAAsN,iBAAuCtN,KAAKqN,kBAAkB3K,eAE7D1C,KAAAuN,aAAyC,IAAIrI,EAAA1F,EAAgB,MAC9DQ,KAAAwN,YAAmCxN,KAAKuN,aAAa7K,eAEpD1C,KAAAyN,oBAAgD,IAAIvI,EAAA1F,EAAgB,MACrEQ,KAAA0N,mBAA0C1N,KAAKyN,oBAAoB/K,eAElE1C,KAAA2N,iBAA4C,IAAIzI,EAAA1F,EAAwB,MACzEQ,KAAA4N,gBAAsC5N,KAAK2N,iBAAiBjL,eAE3D1C,KAAA6N,YAAuC,IAAI3I,EAAA1F,EAAwB,MACpEQ,KAAA8N,WAAiC9N,KAAK6N,YAAYnL,eAEjD1C,KAAA+N,iBAAyC,IAAI7I,EAAA1F,EAAqB,MACnEQ,KAAAgO,gBAAmChO,KAAK+N,iBAAiBrL,eAMhEpD,SAAS2O,GACVjO,KAAKyM,QAAQnI,KAAK2J,GAGjB3O,mBAAmB4O,GAEpB,IAAIC,EAAgB,GAEpB,IAAK,IAAI9H,KAAQ6H,EAEf,GAAI7H,EAAKpF,WAAWmN,MAErB,IAAK,IAAIA,KAAS/H,EAAKpF,WAAWmN,MAa3BD,EAAcC,EAAMzJ,QAI1BwJ,EAAcC,EAAMzJ,MAAQ,CAC1BA,KAAMyJ,EAAMzJ,KACZY,SAAU,GACV8I,MAAOD,EAAMC,MACbC,KAAMF,EAAME,OAGbH,EAAcC,EAAMzJ,MAAMY,SAASoB,KAAKN,GAoC3CrG,KAAKyM,QAAQnI,KAAK9F,OAAO+P,OAAOJ,IAK/B7O,QAAQkP,GACTxO,KAAK2M,OAAOrI,KAAKkK,GAGhBlP,aAAawN,GACd9M,KAAK6M,WAAWvI,KAAKwI,GAGpBxN,aAAamP,GACdzO,KAAK+M,WAAWzI,KAAKmK,GAGpBnP,sBAAsBgH,GACvBtG,KAAKyN,oBAAoBnJ,KAAKgC,GAG7BhH,eAAemP,GAChBzO,KAAKiN,aAAa3I,KAAKmK,GAGtBnP,eAAeoP,GAChB1O,KAAKuN,aAAajJ,KAAKoK,GAItBpP,iBAAiB+G,GAElBrG,KAAKyF,eAAenB,KAAK+B,GAGxB/G,eAAeqP,GAEhB3O,KAAKmN,aAAa7I,KAAKqK,GAGtBrP,cAAcsP,GAEf5O,KAAK6N,YAAYvJ,KAAKsK,GAGrBtP,oBAAoBuP,GACrB7O,KAAKqN,kBAAkB/I,KAAKuK,GAG3BvP,mBAAmB3B,GACpBqC,KAAK2N,iBAAiBrJ,KAAK3G,GAG1B2B,mBAAmBqP,EAAmBvH,EAAmBN,GAC1D,IAAIgI,EAAwBH,EAAYvH,EACpC2H,EAA6B/O,KAAK+N,iBAAiBlC,MAE3B,MAAxBkD,EACFA,EAAuB,GAEvBA,EAAqBD,GAAgBhI,EAGvC9G,KAAK+N,iBAAiBzJ,KAAKyK,iCA3IWzD,IApC1BiB,EAAahN,EAAAC,EAAA,CAHzBhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CACVuG,WAAY,kCAsCyBuG,KApC1BiB,mBCIb,IAAayC,EAAb,MAqCE1P,YAAoB2P,EACTzC,EACA/B,GAFSzK,KAAAiP,cAAAA,EACTjP,KAAAwM,gBAAAA,EACAxM,KAAAyK,eAAAA,EAvBHzK,KAAA2M,OAAmC,IAAIzH,EAAA1F,EAAgB,IACxDQ,KAAA4M,MAA6B5M,KAAK2M,OAAOjK,eAExC1C,KAAAkP,gBAA0C,IAAIhK,EAAA1F,EAAgB,IAC/DQ,KAAAmP,eAAoCnP,KAAKkP,gBAAgBxM,eAExD1C,KAAAoP,WAAyC,IAAIlK,EAAA1F,EAA2B,MACzEQ,KAAAqP,UAAmCrP,KAAKoP,WAAW1M,eA2Q1D1C,KAAAsP,QAAgB,CAACpO,KAAM,OAAQyN,UAAW,MAAOjF,MAAM,QAAS6F,QAAS,GAAIjJ,QAAS,IACtFtG,KAAAwP,QAAU,GACVxP,KAAAyP,eAAiB,GACjBzP,KAAA0P,UAAY,CAAC,CAACC,OAAO,GAAIhS,GAAI,GAAG,GAAG,IACnCqC,KAAA4P,SAAW,GAkEb5P,KAAA6P,aAAe,GAjTbvQ,QAAQqP,EAAmBmB,GAC5B9P,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GACEA,EAAU7H,IAAI4J,IACfA,EAASrB,WAAaA,GAC3BqB,EAASxB,SAAS7H,KAAKmJ,GAEfE,MAEJxL,UAAUkC,IAAY1G,KAAK2M,OAAOrI,KAAKoC,KAG7C1G,KAAKiQ,gBAAgBtB,GAGpBrP,iBACD,IAAI8O,EAAa,GAEbpO,KAAKkP,gBAAgBrD,QACvB7L,KAAKkP,gBAAgBrD,MAAMxC,QAAQhM,GACpC+Q,EAAM/Q,EAAEqM,OAASrM,EAAE6S,SAAW,IAAIC,EAAAtQ,EAAYxC,EAAEwO,OAAS,GAAIsE,EAAAC,EAAWF,UACtE,IAAIC,EAAAtQ,EAAYxC,EAAEwO,OAAS,KAG5B7L,KAAKoP,WAAW9K,KAAK,IAAI6L,EAAA9R,EAAU+P,KAIpC9O,gBAAgBqP,GACjB3O,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAChC,GAAIA,EAASrB,WAAaA,EACxB,OAAOqB,EAASxB,aAEZhK,UAAUkC,IAAY1G,KAAKkP,gBAAgB5K,KAAKoC,EAAQ2J,KAAKhT,GAAUiT,MAALjT,MAEzE2C,KAAKuQ,iBAMJjR,UAAUkR,GAoBX,IAAIlC,EAlBJtO,KAAKiP,cAAc7B,YAAY5I,UAAWF,IACzCtE,KAAKoN,YAAc9I,IAGpBtE,KAAKiP,cAAcvC,OAAOlI,UAAWF,IACpCtE,KAAKiO,UAAY3J,IAGlBtE,KAAKwM,gBAAgBd,cAAclH,UAAUF,IAC5CtE,KAAKyQ,gBAAkBnM,IAGxBtE,KAAKiP,cAAcrB,gBAAgBpJ,UAAUF,IAC5CiD,QAAQC,IAAIlD,GACZtE,KAAK0Q,kBAAoBpM,IAK1BtE,KAAKiO,UAAU5E,QAAQ+E,IACtB,GAAIA,EAAMzJ,KAAO3E,KAAKoN,YAAa,CAClC7F,QAAQC,IAAI4G,EAAM7I,UAClB+I,EAAOF,EAAME,KACb/G,QAAQC,IAAI8G,GAEZ,IAMIxH,EAAU,CACbsH,MAPe,CAAC,CAChBzJ,KAAMyJ,EAAMzJ,KACZ0J,MAAOD,EAAMC,MACbC,KAAMF,EAAME,OAKZqC,MAAO,CACNC,OAAQtC,EACRD,MAAOmC,IAGTxQ,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GAAIqC,KAAK0Q,kBAAmB5J,MAK5FxH,SAASqP,GACV,IAAImC,EAAc,IAAIhR,EACtBgR,EAAYtC,SAAW,GAEvBsC,EAAYnC,UAAYA,EAExB3O,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,IACAgG,UAAUkC,IACXA,EAAQC,KAAKmK,GACb9Q,KAAK2M,OAAOrI,KAAKoC,KAIjBpH,WAAWqP,EAAmBjH,GAC/B1H,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,IACxBqB,EAASxB,SAAWwB,EAASxB,SAASuC,OAAOjB,GAAYA,EAASpG,OAAShC,EAAKgC,QAE3EsG,MACDxL,UAAUkC,GAAW1G,KAAK2M,OAAOrI,KAAKoC,IAE7C1G,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAChC,GAAIA,EAASrB,WAAaA,EACxB,OAAOqB,EAASxB,SAASuC,OAAOjB,GAAYA,EAASpG,OAAShC,EAAKgC,WAE/DlF,UAAUkC,IAAY1G,KAAKkP,gBAAgB5K,KAAKoC,EAAQ2J,KAAKhT,GAAUiT,MAALjT,MAEzE2C,KAAKiQ,gBAAgBtB,GAGpBrP,WAAWqP,EAAmBjH,EAAWgC,GAC1C1J,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,GACxBqB,EAASxB,SAASnF,QAAQyG,IACvBA,EAASpG,OAAShC,EAAKgC,QACzBoG,EAASpG,MAAQA,KAIbsG,MACDxL,UAAUkC,IAAY1G,KAAK2M,OAAOrI,KAAKoC,KAE9C1G,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,GACxBqB,EAASxB,SAASnF,QAAQyG,IACvBA,EAASpG,OAAShC,EAAKgC,QACzBoG,EAASpG,MAAQA,KAIbsG,EAASxB,aACVhK,UAAUkC,IAAY1G,KAAKkP,gBAAgB5K,KAAKoC,EAAQ2J,KAAKhT,GAAUiT,MAALjT,MAEzE2C,KAAKiQ,gBAAgBtB,GAGpBrP,aAAaqP,EAAmBqC,EAAUtJ,EAAWgC,GACtD1J,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,GACxBqB,EAASxB,SAASnF,QAAQyG,IACvBA,EAASpG,OAAShC,EAAKgC,OACzBoG,EAASP,QAAQlG,QAAQsG,IACtBA,EAAOjG,OAASsH,EAAItH,QACtBiG,EAAOjG,MAAQA,OAMZsG,MACDxL,UAAUkC,GAAW1G,KAAK2M,OAAOrI,KAAKoC,IAE7C1G,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,GACxBqB,EAASxB,SAASnF,QAAQyG,IACvBA,EAASpG,OAAShC,EAAKgC,OACzBoG,EAASP,QAAQlG,QAAQsG,IACtBA,EAAOjG,OAASsH,EAAItH,QACtBiG,EAAOjG,MAAQA,OAOZsG,EAASxB,aACVhK,UAAUkC,IAAY1G,KAAKkP,gBAAgB5K,KAAKoC,EAAQ2J,KAAKhT,GAAUiT,MAALjT,MAGzE2C,KAAKiQ,gBAAgBtB,GAGpBrP,aAAaqP,EAAmBqC,EAAUtJ,GAC3C1H,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,GACxBqB,EAASxB,SAASnF,QAAQyG,IACvBA,EAASpG,OAAShC,EAAKgC,QACzBoG,EAASP,QAAUO,EAASP,QAAQwB,OAAOpB,GAAUA,EAAOjG,OAASsH,EAAItH,UAIrEsG,MACDxL,UAAUkC,IAAY1G,KAAK2M,OAAOrI,KAAKoC,KAE9C1G,KAAK4M,MAAMpG,KACThI,OAAAuR,EAAAvQ,EAAAhB,GACAA,OAAA4H,EAAA5G,EAAAhB,CAAIyP,GAAaA,EAAU7H,IAAI4J,IAC5BA,EAASrB,WAAaA,GACxBqB,EAASxB,SAASnF,QAAQyG,IACvBA,EAASpG,OAAShC,EAAKgC,QACzBoG,EAASP,QAAUO,EAASP,QAAQwB,OAAOpB,GAAUA,EAAOjG,OAASsH,EAAItH,UAIrEsG,EAASxB,aACVhK,UAAUkC,IAAY1G,KAAKkP,gBAAgB5K,KAAKoC,EAAQ2J,KAAKhT,GAAUiT,MAALjT,MAEzE2C,KAAKiQ,gBAAgBtB,GAGpBrP,QAAQqP,EAAmBsC,GAC5B,IAAIjB,EAAWiB,EAAQF,OAAOf,GAAYA,EAASrB,YAAcA,GAC7DuC,EAAa,GAMjB,OAJmBZ,MAAfN,EAAS,KACXkB,EAAalB,EAAS,GAAGxB,UAGpB0C,EASN5R,QAAQ6R,EAAeC,EAAWC,GACnC,MAAMC,EAAQtR,KAAKwP,QAAQ+B,UAAUC,GAAQA,EAAK7C,YAAcwC,GAAUK,EAAK9H,QAAU2H,GAAUG,EAAKlL,UAAY8K,EAAI9K,SAEpHgL,GAAS,EAEZtR,KAAKwP,QAAQ8B,GAAO5H,MAAQ0H,EAAI1H,OAIhC0H,EAAIzC,UAAYwC,EAChBnR,KAAKwP,QAAQ7I,KAAKyK,IAKpB9R,UACC,OAAOU,KAAKwP,QAGblQ,UAAU6R,EAAeE,GACxB,MAAMC,EAAQtR,KAAKwP,QAAQ+B,UAAUC,GAAQA,EAAK7C,YAAcwC,GAASK,EAAK9H,QAAU2H,GACjFC,GAAS,GAEXtR,KAAKwP,QAAQiC,OAAOH,EAAO,GAIjChS,UAAU6R,EAAcH,EAAYI,GACnC,MAAME,EAAQtR,KAAKwP,QAAQ+B,UAAUC,GAAQA,EAAK7C,YAAcwC,GAASK,EAAK9H,QAAU0H,EAAI1H,OAC5F,GAAI4H,GAAS,EAAG,CACf,MAAMI,EAAM1R,KAAKwP,QAAQ8B,GAAO/B,QAAQgC,UAAUC,GAAQA,IAASR,GAC/DU,GAAO,GACV1R,KAAKwP,QAAQ8B,GAAO/B,QAAQkC,OAAOC,EAAI,IAM1CpS,cAAc0R,EAAYrT,GACzB,IAAIgS,EAAS,CAAExR,IAAK6S,EAAS7S,IAAGuL,MAAOsH,EAAWtH,MAAG/L,GAAIA,GACzDqC,KAAKyP,eAAe9I,KAAKgJ,GACzBpI,QAAQC,IAAIxH,KAAKyP,gBAGlBnQ,iBAAiB0R,EAAYrT,GAC5B,MAAM2T,EAAQtR,KAAKyP,eAAe8B,UAAUC,GAAQA,EAAK9H,QAAUsH,EAAWtH,OAAK8H,EAAK7T,KAAOA,GAC/FqC,KAAKyP,eAAegC,OAAOH,EAAM,GACjC/J,QAAQC,IAAIxH,KAAKyP,gBAGlBnQ,gBACC,OAAOU,KAAKyP,eAebnQ,oBAAoBqS,EAAkBC,EAAqBtL,GAC1D,MAAMgL,EAAQtR,KAAK6P,aAAa0B,UAAUC,GAAQA,EAAS7T,KAAM2I,GAAWkL,EAAaK,SAAMD,GAE/F,GAAIN,GAAS,EAEZtR,KAAK6P,aAAayB,GAAe3B,OAAIgC,MAGjC,CACJ,IAAIG,EAAU,CAACnC,OAAQgC,EAAWhU,GAAI2I,EAASuL,OAAQD,GACvD5R,KAAK6P,aAAalJ,KAAKmL,IAOzBxS,mBAA4B,OAAOU,KAAK6P,aAGxCvQ,YAAYyS,EAAQzL,GACnB,MAAMgL,EAAQtR,KAAK6P,aAAa0B,UAAUC,GAAQA,EAAS7T,KAAM2I,GACjE,GAAIgL,GAAS,EAEZtR,KAAK4P,SAAS0B,GAAe3B,OAAIoC,MAE7B,CACJ,IAAID,EAAU,CAACnC,OAAQoC,EAAQpU,GAAI2I,GACnCtG,KAAK4P,SAASjJ,KAAKmL,IAKrBxS,WAAmB,OAAOU,KAAK4P,uCAtWMrD,SACPjB,SACDtG,IAvChBgK,EAAYzP,EAAAC,EAAA,CAHxBhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CACVuG,WAAY,kCAuCuBwH,EACPjB,EACDtG,KAvChBgK,GCCb,IAAagD,EAAb,MAuBE1S,YACO2S,EACAhD,EACAiD,EACA5P,GAHAtC,KAAAiS,aAAAA,EACAjS,KAAAiP,cAAAA,EACAjP,KAAAkS,OAAAA,EACAlS,KAAAsC,OAAAA,EAzBPtC,KAAAmS,YAA0B,GAI1BnS,KAAAoS,SAAmB,EAEnBpS,KAAAqS,aAA2B,GAM3BrS,KAAAsS,WAAkB,GAClBtS,KAAAuS,gBAAiC,GACjCvS,KAAAwS,aAAuB,EAavBlT,WACDU,KAAKiP,cAAc7B,YAAY5I,UAAWF,IACxCtE,KAAKoN,YAAc9I,IAGrBtE,KAAKiS,aAAa9C,eAAe3K,UAAWF,IAC1CtE,KAAKmP,eAAiB7K,IAGxBtE,KAAKyS,QAAUzS,KAAKiP,cAAcvC,OAAOlI,UAAWF,IACnDtE,KAAKiO,UAAY3J,IAGlBtE,KAAKmS,YAAc,GACnBnS,KAAKqS,aAAe,GACpBrS,KAAK0S,SAAW,OAChB1S,KAAK2S,SAAW,GAChB3S,KAAK4S,UAAY,GACjB5S,KAAK6S,UAAY,GACjB7S,KAAK8S,cAAe,EACpB9S,KAAKuS,gBAAkB,CAAC,OAAQ,WAAY,QAAS,WAAY,SAGhEjT,eAAgByT,GAEjB/S,KAAK4S,UAAYG,EAAM7U,OAAO2N,MAG7BvM,cAAcuM,GACf,GAAIA,EAAO,CAEmB,GADR7L,KAAKmS,YAAYpB,OAAO1T,GAAKA,EAAEqM,OAASmC,GAC1CtN,QAA+B,GAAhBsN,EAAMtN,QACxCyB,KAAKmS,YAAYxL,KAAK,CACpBxI,IAAK0N,EAAM,GACXnC,MAAOmC,KAMTvM,aAAa0R,GACdhR,KAAKmS,YAAcnS,KAAKmS,YAAYpB,OAAOpB,GAAUA,EAAOjG,OAASsH,EAAItH,OAGxEpK,gBAAgBM,EAA4B+E,GAC7C3E,KAAKgT,cAAgBrO,EACrB3E,KAAKkS,OAAOe,KAAKrT,GAGhBN,sBAAsBM,GACvBI,KAAKkS,OAAOe,KAAKrT,GAIhBN,aAAa0R,EAAUtH,GACJ,eAAhB1J,KAAKkT,QACPlT,KAAKkT,QAAU,iBAEflT,KAAKkT,QAAU,cAGjBxJ,EAAQA,EAAMyJ,cACdnT,KAAKmS,YAAY9I,QAAQhM,IACnBA,EAAEqM,OAASsH,EAAItH,QACpBrM,EAAEqM,MAAQA,KAKVpK,gBAAiBqF,GAClB3E,KAAK0S,SAAW/N,EAChB3E,KAAK4S,UAAY,GACjB5S,KAAKmS,YAAc,GAGlB7S,cACDU,KAAKoT,aAAe,GAGnB9T,aACDU,KAAKqT,YAAc,GAGlB/T,cAGDU,KAAKiO,UAAU5E,QAAQhM,IAClBA,EAAEsH,MAAQ3E,KAAKoN,cAClBpN,KAAK8M,UAAYzP,EAAEkI,YAGpBgC,QAAQC,IAAIxH,KAAK8M,WACjB,IAAK,IAAIzG,KAAQrG,KAAK8M,UAAW,CAEhC,IAAIgD,EAAiB,CACpB5O,KAAMlB,KAAK0S,SACX/D,UAAW3O,KAAK2S,SAChBjJ,MAAO1J,KAAK4S,UAGZrD,QAAS,GACTjJ,QAASD,EAAK1I,IAIf,GAFAqC,KAAKsS,WAAWtS,KAAK4S,YAAa,EAEZ,SAAlB5S,KAAK0S,UAAkD,GAA3B1S,KAAKmS,YAAY5T,OAAa,CAC7D,IAAI+U,EAAS,GACb,IAAK,MAAMtC,KAAOhR,KAAKmS,YACrBmB,EAAO3M,KAAK,CACbxI,IAAK6S,EAAI,GACTtH,MAAOsH,IAKRlB,EAASP,QAAUvP,KAAKmS,YAEvB5K,QAAQC,IAAIsI,GACd9P,KAAKqS,aAAa1L,KAAKmJ,GACvB9P,KAAKiS,aAAasB,QAAQvT,KAAKoN,YAAa0C,GAC5C9P,KAAKiS,aAAauB,QAAQxT,KAAKoN,YAAa0C,EAAUA,EAASpG,OAG/D1J,KAAK4S,UAAY,GACjB5S,KAAKmS,YAAc,GACnBnS,KAAKqT,YAAc,GACnBrT,KAAKoS,SAAU,EAEfpS,KAAKiP,cAAcwE,cAAc,UACjCzT,KAAKsC,OAAOoR,cAAc,UAAW,CAACC,oBAAoB,IAI3DrU,eACDU,KAAKiP,cAAcwE,cAAc,UACjCzT,KAAKsC,OAAOoR,cAAc,UAAW,CAACC,oBAAoB,IAGzDrU,cACDU,KAAKwS,aAAexS,KAAKwS,YACrBxS,KAAKwS,0CAjJaxD,SACCzC,SACPqH,EAAA/T,SACAgF,EAAAhF,IA3BJmS,EAAqBzS,EAAAC,EAAA,CALjChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,oBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEA2BqBiS,EACCzC,EACPqH,EAAA/T,EACAgF,EAAAhF,KA3BJmS,GCDb,IAAa6B,EAAb,MAaEvU,YACO2P,EACAgD,EACAC,EACA5P,GAHAtC,KAAAiP,cAAAA,EACAjP,KAAAiS,aAAAA,EACAjS,KAAAkS,OAAAA,EACAlS,KAAAsC,OAAAA,EAbPtC,KAAAsS,WAAkB,GAMlBtS,KAAAwS,aAAuB,EACvBxS,KAAA8T,QAAkB9T,KAAKiS,aAAa8B,UAQpCzU,WACDU,KAAKgU,aAAehU,KAAKgU,aAAehU,KAAKiP,cAAc7B,YAAY5I,UAAWF,IAChFtE,KAAKoN,YAAc9I,IAGrBtE,KAAKiU,iBAAmBjU,KAAKiP,cAAcrB,gBAAgBpJ,UAAWF,IACpEtE,KAAK4N,gBAAkBtJ,IAGzBtE,KAAKkU,WAAalU,KAAKiS,aAAa5C,UAAU7K,UAAWF,IACvDtE,KAAK0H,KAAOpD,IAIbhF,gBAAgBM,EAA4B+E,GAC7C3E,KAAKgT,cAAgBrO,EACrB3E,KAAKkS,OAAOe,KAAKrT,GAGhBN,sBAAsBM,GACvBI,KAAKkS,OAAOe,KAAKrT,GAGhBN,iBAAiBoK,GACd1J,KAAKsS,WAAW5I,GAClB1J,KAAKsS,WAAW5I,IAAS,EAEzB1J,KAAKsS,WAAW5I,IAAS,EAI1BpK,eACDiI,QAAQC,IAAIxH,KAAK8T,SACf9T,KAAKiP,cAAcwE,cAAc,UACjCzT,KAAKsC,OAAOoR,cAAc,UAAW,CAACC,oBAAoB,IAG3DrU,WACDU,KAAK8G,QAAU9G,KAAK0H,KAAKyM,cAKzB5M,QAAQC,IAAIxH,KAAK8T,SAGhBxU,cACDU,KAAKkU,WAAWE,cAChBpU,KAAKiU,iBAAiBG,cACtBpU,KAAKgU,aAAaI,cAGjB9U,cACDU,KAAKwS,aAAexS,KAAKwS,YACrBxS,KAAKwS,0CA3DcjG,SACDyC,SACN4E,EAAA/T,SACAgF,EAAAhF,IAjBJgU,EAAkBtU,EAAAC,EAAA,CAL9BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,iBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAiBsBwP,EACDyC,EACN4E,EAAA/T,EACAgF,EAAAhF,KAjBJgU,GCAb,IAAaQ,GAAb,MACE/U,YAAoBgV,GAAAtU,KAAAsU,QAAAA,EAEpBhV,YAAYwL,EAA+ByJ,GAC3C,GAAIvU,KAAKsU,QAAQE,aACf,OAAO,EAETxU,KAAKsU,QAAQG,uCANgBrS,IAW/B,MAAMsS,GAAiB,CACrB,CAAC3M,KAAM,GAAI4M,UAAWnK,EAAeoK,YAAa,CAbvCP,GAAQ9U,EAAAC,EAAA,CADpBhB,OAAAiB,EAAAqF,EAAAtG,4BAE8B4D,KADlBiS,KAamDQ,SAAU,CAOzE,CAAC9M,KAAM,SAAU4M,UAAWd,EAAoBiB,iBAAkB,CAACT,KACnE,CAACtM,KAAM,SAAU4M,UAAW3C,EAAuB8C,iBAAkB,CAACT,OAGrE,CAACtM,KAAM,WAAY4M,UAAW9J,GAC9B,CAAC9C,KAAM,MAAO4M,UAAWtV,IAO3B,IAAa0V,GAAb,QAAaA,GAAgBxV,EAAAC,EAAA,CAL5BhB,OAAAiB,EAAAuV,EAAAxW,CAAS,CACRyW,QAAS,CAACpQ,EAAAxG,EAAa6W,QAAQR,GAAQ,CAACS,oBAAqB,YAC7DzX,QAAS,CAACmH,EAAAxG,GACV+W,UAAW,CAACf,OAEDU,ICrCb,IAAaM,GAAb,MAGE/V,YAAoBoL,GAAA1K,KAAA0K,YAAAA,EAFpB1K,KAAA4G,MAAQ,SAIRtH,WACDU,KAAK0K,YAAY+J,uCAHiBrS,IAHtBiT,GAAY9V,EAAAC,EAAA,CALxBhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,WACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAMiCqF,KAHtBiT,+BCwBN,SAASC,GAAahP,EAAkBiP,GAC7C,IAAIC,EAWJ,OATEA,EAD2B,SAAzBlP,EAAQmP,cAnBd,SAA4BnP,EAAkBiP,GAC5C,IACIG,EAAMlX,OAAAmX,GAAAC,QAAApX,CAAQ,CAACqX,UAAW,yBAA0BC,KAD1C,yDAEd,OAAOtX,OAAAmX,GAAAH,OAAAhX,CAAO+W,EAAQ,CAACjH,KAAMoH,IAH/B,CAoB+BpP,EAASiP,GACF,cAAzBjP,EAAQmP,cAfrB,SAAiCnP,EAAkBiP,GACjD,IACIG,EAAMlX,OAAAmX,GAAAC,QAAApX,CAAQ,CAACqX,UAAW,cAAeC,KAD/B,uDAEd,OAAOtX,OAAAmX,GAAAH,OAAAhX,CAAO+W,EAAQ,CAACjH,KAAMoH,IAH/B,CAgBqCpP,EAASiP,GACR,SAAzBjP,EAAQmP,cAZrB,SAA4BnP,EAAkBiP,GAC5C,IACIG,EAAMlX,OAAAmX,GAAAC,QAAApX,CAAQ,CAACqX,UAAW,yBAA0BC,KAD1C,kDAEd,OAAOtX,OAAAmX,GAAAH,OAAAhX,CAAO+W,EAAQ,CAACjH,KAAMoH,IAH/B,CAa+BpP,EAASiP,GApCxC,SAA6BjP,EAAkBiP,GAS7C,OAAO/W,OAAAmX,GAAAI,aAAAvX,CAAc+W,EARP,CACZS,OAAQ,EACRC,UAAW,UACX5H,MAAO,QACP6H,OAAQ,EACRC,QAAS,EACTC,YAAa,KAPjB,CAuCgC9P,EAASiP,8CCtBzC,IAAac,GAAb,MAUE/W,YAAoBgX,EACTxL,GADS9K,KAAAsW,eAAAA,EACTtW,KAAA8K,MAAAA,EARX9K,KAAAuW,QAAU,SAGVvW,KAAAuF,SAAyB,IAAIoQ,GAAAa,aAS9BxW,KAAKyW,oBAAoBC,KAAK1W,MAC9BA,KAAK2W,kBAAkBD,KAAK1W,MAG3BV,WAIDU,KAAK2B,YAAcA,EACnB3B,KAAKiK,SAAW,IAAI2M,IACpB5W,KAAKoG,IAAM,IAAIuP,GAAAiB,IAAM,MAAO,CAC3BC,OAAQ,CAAC,IAAK,IACdC,KAAM,IAGP,MAAMC,EAAUpB,GAAAqB,UAAY,qDAAsD,CAChFC,QAAS,GACTC,YAAa,4FAETC,EAAYxB,GAAAqB,UAAY,gGAAiG,CAC7HE,YAAa,kJAGflX,KAAKoG,IAAIgR,SAASL,GAElB/W,KAAKqX,eAGLrX,KAAKoG,IAAIkR,GAAG,YAAcC,GAA0BvX,KAAK2W,kBAAkBY,IAC3EvX,KAAKsW,eAAepM,cAAc1D,KAAKhI,OAAAgZ,GAAAhY,EAAAhB,CAAK,IAAIgG,UAAWF,IACzDtE,KAAKyX,iBAAiBnT,KAKxBtE,KAAKsW,eAAe9M,cAAchD,KAAKhI,OAAAuS,GAAAvR,EAAAhB,CAAOkB,GAAU,MAALA,IAAY8E,UAAYF,IACzEtE,KAAKwJ,cAAgBlF,EACrB,MAAMrE,EAAOyX,GAAAzX,KAAuBqE,GACpCtE,KAAKoG,IAAIuR,UAAU,CAAC,CAAC1X,EAAK,GAAIA,EAAK,IAAK,CAACA,EAAK,GAAIA,EAAK,QAIzDD,KAAKsW,eAAehM,QAAQ9D,KAAKhI,OAAAgZ,GAAAhY,EAAAhB,CAAK,IAAIgG,UAAWF,IACvC,OAARA,IACLtE,KAAKoG,IAAIwR,YAAYb,GACrB/W,KAAKoG,IAAIgR,SAASD,IAEL,SAAR7S,IACLtE,KAAKoG,IAAIwR,YAAYT,GACrBnX,KAAKoG,IAAIgR,SAASL,MAKlBzX,iBAAiB6K,GAClB,GAAInK,KAAKiK,SAAS7J,IAAI+J,EAAGxM,IACvBqC,KAAKuF,SAASqS,YAAY5X,KAAKiK,SAAS1F,IAAI4F,EAAGxM,KAC/CqC,KAAKiK,SAAS5J,OAAO8J,EAAGxM,QACnB,CACL,MAAMka,EAAUlC,GAAAmC,aAAenW,EAAYE,OAAS,WAAasI,EAAGpC,KAAM,CAAC,CAACoC,EAAGR,OAAQQ,EAAGN,QAAS,CAACM,EAAGP,OAAQO,EAAGL,UAClH9J,KAAKiK,SAAS8N,IAAI5N,EAAGxM,GAAIka,GACzB7X,KAAKuF,SAAS6R,SAASS,GAEzB7X,KAAKoG,IAAIuR,UAAU3X,KAAKuF,SAASyS,aAIhC1Y,kBAAkBiY,GACnBvX,KAAKsW,eAAelM,iBAAmBmN,EAAGhC,OAOzCjW,eACD,MAAM2Y,EAAiB,CACrBC,aAAc5C,IAEhBtV,KAAKsW,eAAe/Q,SAASf,UAAU2T,IACrCnY,KAAKuF,SAAS6S,cACd,MAAMC,EAAU1C,GAAA2C,mBAAqB,CACtCC,mBAAqBC,GACZ7C,GAAAC,QAAU,CAACE,KAAM,WAAW0C,EAAQC,4BAA6B5C,UAAW,qBAGpFsC,EAAW5S,SAAS8D,QAASzL,IAC9B,MAAMyI,EAAOsP,GAAA+C,QAAU9a,EAAGqa,GAC1B5R,EAAKiR,GAAG,QAAUC,IAASvX,KAAKyW,oBAAoBc,KAE7B,SAAnB3Z,EAAEoD,SAASE,KACbmX,EAAQjB,SAAS/Q,GAEjBrG,KAAKuF,SAAS6R,SAAS/Q,KAGxBrG,KAAKuF,SAAS6R,SAASiB,GACvBrY,KAAKoG,IAAIgR,SAASpX,KAAKuF,UACvB,IACDvF,KAAKoG,IAAIuR,UAAU3X,KAAKuF,SAASyS,aAC9B,MAAO3a,OASViC,oBAAoBiY,GACrB,MAAMxW,EAAIwW,EAAGoB,MAAMrS,QACnBtG,KAAKsW,eAAe9M,cAAgBzI,iCApHCiE,SAClBH,EAAArF,IAXP6W,GAAY9W,EAAAC,EAAA,CALxBhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,UACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAaoCiI,EAClBH,EAAArF,KAXP6W,qBCZb,IAAauC,GAAb,MASEtZ,YAAoBuZ,GAAA7Y,KAAA6Y,MAAAA,EAPZ7Y,KAAA8Y,QAAU,8CACV9Y,KAAA+Y,SAA2C,IAAIvW,EAAAhD,EAA+B,GACtEQ,KAAAgZ,QAAuChZ,KAAK+Y,SAASrW,eAC7D1C,KAAAuL,UAA4C,IAAI/I,EAAAhD,EAA+B,GACvEQ,KAAAwL,SAAwCxL,KAAKuL,UAAU7I,eAMvEpD,OACEU,KAAK6Y,MAAMI,YAAY,CAAC/X,KAAM,YAC3BsD,UAAUC,IACTzE,KAAK+Y,SAASzU,KAAKG,EAAKyU,QACxBlZ,KAAKuL,UAAUjH,KAAKG,EAAKyU,OAAOnI,OAAOoI,GAAOA,EAAIxb,GAAGyb,WAAW,cAC/DjS,IACDnH,KAAK+Y,SAASzU,KAAK,MACnBtE,KAAKuL,UAAUjH,KAAK,uCAVC+U,EAAAxZ,IAThB+Y,GAAmBrZ,EAAAC,EAAA,CAH/BhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CACVuG,WAAY,kCAWesU,EAAAxZ,KAThB+Y,qBCQb,IAAaU,GAAb,MAQEha,YAAoBuZ,EACAxW,EACAqI,EACA6O,GAHAvZ,KAAA6Y,MAAAA,EACA7Y,KAAAqC,KAAAA,EACArC,KAAA0K,YAAAA,EACA1K,KAAAuZ,MAAAA,EATZvZ,KAAA8Y,QAAU,4CAEV9Y,KAAAwZ,SAA0C,IAAItU,EAAA1F,EAA8B,IACpEQ,KAAAyZ,QAAoCzZ,KAAKwZ,SAAS9W,eAClD1C,KAAA0Z,iBAAkC,CAAC,MAAO,OAAQ,MAAO,MAAO,OAAQ,UAAW,UAAW,OAAQ,OAOtHpa,kBAAkBmI,GAChB,GAAkB,QAAdA,EAAKvG,KAAiB,OAAO,EACjC,MAAMyY,EAAM3Z,KAAK4Z,iBAAiBnS,GAClC,OAAOzH,KAAK0Z,iBAAiBG,SAASF,GAGhCra,iBAAiBmI,GACvB,OAAOA,EAAK9C,KAAKmV,MAAM,KAAKC,MAAM5G,cAGpC7T,UAAUwI,EAAgBC,GACxB,OAAO/H,KAAK6Y,MAAMmB,UAAU,CAACC,SAAUnS,EAAQoS,SAAUnS,IAGpDzI,cAAcyI,GACnB,MACMoS,EADUpS,EAAKqS,QAAQ,KAAM,KACfN,MAAM,KAG1B,OAFAK,EAAIJ,MACeI,EAAIE,KAAK,KAKvB/a,OAAOgb,EAAkBvS,EAAcwS,EAAkBC,EAAkB1O,GAEhF,IAAI2O,EAAmC,CAACC,SAAU,IAAMC,mBAAoB,QAASC,iBAAkB,OAEnGC,EAAU,yDAAyDP,IAAWvS,IAG9E+S,EAAW,aACUA,EAAV,QAAbN,EAAkC,WAAyB,mBAC7D,IAAIO,EAAM,IAAInS,KAAK,CAACkD,GAAO,CAAC5K,KAAM4Z,IAC9BE,EAAO,IAAIra,KACX8G,EAAO,IAAIwT,KAAK,CAACF,GAAMR,EAAU,CAACW,aAAcF,EAAKG,YAGrDzT,EAAgB,IAAIC,SACxBD,EAAKE,OAAO,eAAgBH,GAG5BzH,KAAKqC,KAAK4E,KAAK4T,EAASnT,GAAMlD,UAAUC,IACtC8C,QAAQC,IAAI/C,GACZ,IAAI2W,EAAM,8BAAgCd,EAAWvS,EACrD/H,KAAKuZ,MAAMtG,KAAKmI,EAAK,GAAIX,IACxBtT,IACDI,QAAQC,IAAIL,GACZ,IAAIiU,EAAM,yBAA2Bd,EAAWvS,EAChD/H,KAAKuZ,MAAMtG,KAAKmI,EAAK,GAAIX,oCArDFpB,EAAAxZ,SACD+E,EAAA/E,SACOuC,SACNiZ,GAAA7b,IAXhB8Z,GAAiB/Z,EAAAC,EAAA,CAH7BhB,OAAAiB,EAAAqF,EAAAtG,CAAW,CACVuG,WAAY,kCAUesU,EAAAxZ,EACD+E,EAAA/E,EACOuC,EACNiZ,GAAA7b,KAXhB8Z,kCCAb,IAAagC,GAAb,MAiBEhc,YAAoBic,EAEXC,EACCtJ,EACAxH,EACA+Q,GALUzb,KAAAub,kBAAAA,EAEXvb,KAAAwb,UAAAA,EACCxb,KAAAkS,OAAAA,EACAlS,KAAA0K,YAAAA,EACA1K,KAAAyb,oBAAAA,EArBAzb,KAAA0b,YAAoC,IAAIjc,EAAAkc,EAE3C3b,KAAA4b,kBAAmC5b,KAAKub,kBAAkB7B,iBAG1D1Z,KAAAga,UAA+B,GAC/Bha,KAAA6b,YAAY,EACZ7b,KAAA8b,cAAyC,IAAIlF,IAC7C5W,KAAA+b,QAAsC,IAAIC,GAAAxc,EAejDF,WAEDU,KAAKyb,oBAAoBQ,OAIzBzd,OAAA0d,GAAA1c,EAAAhB,CAAc,CAACwB,KAAK0K,YAAYjI,YAAazC,KAAKyb,oBAAoBzC,QAAShZ,KAAKyb,oBAAoBjQ,WAGvGhF,KACMhI,OAAAiI,EAAAjH,EAAAhB,CAAK,IAETgG,UAAW,EAAEH,EAAM2U,EAASxN,MAG/BxL,KAAKmc,aAAenD,EAAQ3I,KAAO8I,GAAmB,+BAAXA,EAAIxb,IAC/CqC,KAAKoc,oBAAsBpD,EAAQ3I,KAAO8I,GAAmB,iCAAXA,EAAIxb,IACtDqC,KAAKqc,oBAAsBrD,EAAQ3I,KAAO8I,GAAmB,iCAAXA,EAAIxb,IAGtDqC,KAAKsc,eAAiBtc,KAAKmc,aAE3Bnc,KAAKwL,SAAWA,EAChBxL,KAAKyC,YAAc4B,EACnB,MAAMkY,EAAoB,CACzBzU,OAAQ9H,KAAKmc,aAAaxe,GAC1BuD,KAAM,MACN6G,KAAM/H,KAAKyC,YAAYP,UAExBlC,KAAKwc,OAAOD,KAKXjd,aAAawI,GACd,IAAI2U,EACiCA,EAArC3U,EAAOnK,KAAOqC,KAAKmc,aAAaxe,GAAWqC,KAAKyC,YAAYP,SAAiB,IAC7E,MAAMqa,EAAoB,CACxBzU,OAAQA,EAAOnK,GACfuD,KAAM,MACN6G,KAAM0U,GAERzc,KAAKwc,OAAOD,GAIXjd,OAAOmI,GACU,QAAdA,EAAKvG,OACTlB,KAAK0c,iBAAmBjV,EAExBzH,KAAKga,UAAY,GACjBha,KAAK6b,YAAa,EAClB7b,KAAK2c,YAGJrd,WACDU,KAAK6b,YAAa,EAElB7b,KAAKub,kBAAkBqB,UAAU5c,KAAK0c,iBAAiB5U,OAAQ9H,KAAK0c,iBAAiB3U,MAAMvD,UAAUiV,IACpG,MAAM5R,EAAQ4R,EAAQP,OAEtB,GAAIrR,EAAMtJ,QAA4B,MAAlBsJ,EAAM,GAAGlD,KAAc,CAG1C,MAAM+B,EAAUmB,EAAMgV,QACtB7c,KAAK0b,YAAYpX,KAAKoC,EAAQqB,MAC9BrB,EAAQqB,KAAO/H,KAAKub,kBAAkBuB,cAAcpW,EAAQqB,MAC5DrB,EAAQ/B,KAAO,KACfkD,EAAMkV,QAAQrW,GAEb,MAAMsW,EAAU,GACVC,EAAajd,KAAK4b,kBACxB/T,EAAMwB,SAAAA,SAAkBwC,EAAOyF,IACN,QAAdzF,EAAM3K,MAAkB+b,EAAWpD,SAAShO,EAAM9D,KAAK+R,MAAM,KAAKC,MAAM5G,gBAAkC,OAAdtH,EAAM3K,OACrG8b,EAAQrW,KAAKkF,MAGrB7L,KAAK6b,YAAa,EAClB7b,KAAKga,UAAYha,KAAKga,UAAUkD,OAAOF,IAE1C7V,IACCnH,KAAK6b,YAAa,IAKlBvc,OAAOmI,GACJzH,KAAKub,kBAAkB4B,kBAAkB1V,IAC3CzH,KAAKod,gBAAgB3V,GAWtBnI,gBAAgBmI,GACbzH,KAAK8b,cAAc1b,IAAIqH,EAAKM,MAC9B/H,KAAK8b,cAAczb,OAAOoH,EAAKM,MAE/B/H,KAAK8b,cAAc/D,IAAItQ,EAAKM,KAAMN,GAKnCnI,cACD,MAAMyb,EAAMsC,MAAMC,KAAKtd,KAAK8b,cAAcvN,UAC1CvO,KAAKwb,UAAU+B,MAAMxC,GAGpBzb,SACDU,KAAKwb,UAAU+B,uCAzHyBjE,UAEnB1F,EAAAhW,SACFgW,EAAA/T,SACKuC,SACQwW,KArBrBrZ,EAAAC,EAAA,CAAThB,OAAAiB,EAAA+d,EAAAhf,qBAAsBiB,EAAAkc,uCADZL,GAAyB/b,EAAAC,EAAA,CALrChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,yBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAoBuCuc,GAEnB1F,EAAAhW,EACFgW,EAAA/T,EACKuC,EACQwW,MAtBpB0C,ICCb,IAAamC,GAAb,MAmBEne,YAAoBic,EAEXC,EACCtJ,EACAxH,EACA+Q,GALUzb,KAAAub,kBAAAA,EAEXvb,KAAAwb,UAAAA,EACCxb,KAAAkS,OAAAA,EACAlS,KAAA0K,YAAAA,EACA1K,KAAAyb,oBAAAA,EAvBAzb,KAAA0b,YAAoC,IAAIjc,EAAAkc,EAI3C3b,KAAAga,UAA+B,GAC/Bha,KAAA6b,YAAY,EACZ7b,KAAA8b,cAAyC,IAAIlF,IAC7C5W,KAAA+b,QAAsC,IAAIC,GAAAxc,EAO1CQ,KAAA0d,aAA8B,CAAC,GAAG,GAAG,GAAG,IACxC1d,KAAAua,SAAkB,mBAClBva,KAAA2d,cAAsB,OAS7Bre,WAEAU,KAAK4d,mBAAqB,IAAIzN,EAAA9R,EAAW,CACvCwf,KAAM,IAAI1N,EAAAtQ,EAAYG,KAAKua,UAC3BuD,UAAW,IAAI3N,EAAAtQ,EAAYG,KAAK2d,iBAInC3d,KAAKyb,oBAAoBQ,OAIzBzd,OAAA0d,GAAA1c,EAAAhB,CAAc,CAACwB,KAAK0K,YAAYjI,YAAazC,KAAKyb,oBAAoBzC,QAAShZ,KAAKyb,oBAAoBjQ,WAGvGhF,KACMhI,OAAAiI,EAAAjH,EAAAhB,CAAK,IAETgG,UAAW,EAAEH,EAAM2U,EAASxN,MAG/BxL,KAAKmc,aAAenD,EAAQ3I,KAAO8I,GAAmB,+BAAXA,EAAIxb,IAC/CqC,KAAKoc,oBAAsBpD,EAAQ3I,KAAO8I,GAAmB,iCAAXA,EAAIxb,IACtDqC,KAAKqc,oBAAsBrD,EAAQ3I,KAAO8I,GAAmB,iCAAXA,EAAIxb,IAGtDqC,KAAKsc,eAAiBtc,KAAKmc,aAE3Bnc,KAAKwL,SAAWA,EAChBxL,KAAKyC,YAAc4B,EACnB,MAAMkY,EAAoB,CACzBzU,OAAQ9H,KAAKmc,aAAaxe,GAC1BuD,KAAM,MACN6G,KAAM/H,KAAKyC,YAAYP,UAExBlC,KAAKwc,OAAOD,KAKXjd,aAAawI,GACd,IAAI2U,EACiCA,EAArC3U,EAAOnK,KAAOqC,KAAKmc,aAAaxe,GAAWqC,KAAKyC,YAAYP,SAAiB,IAC7E,MAAMqa,EAAoB,CACxBzU,OAAQA,EAAOnK,GACfuD,KAAM,MACN6G,KAAM0U,GAERzc,KAAKwc,OAAOD,GAIXjd,OAAOmI,GACU,QAAdA,EAAKvG,OACTlB,KAAK0c,iBAAmBjV,EAExBzH,KAAKga,UAAY,GACjBha,KAAK6b,YAAa,EAClB7b,KAAK2c,YAGJrd,WACDU,KAAK6b,YAAa,EAElB7b,KAAKub,kBAAkBqB,UAAU5c,KAAK0c,iBAAiB5U,OAAQ9H,KAAK0c,iBAAiB3U,MAAMvD,UAAUiV,IACpG,MAAM5R,EAAQ4R,EAAQP,OAEtB,GAAIrR,EAAMtJ,QAA4B,MAAlBsJ,EAAM,GAAGlD,KAAc,CAG1C,MAAM+B,EAAUmB,EAAMgV,QACtB7c,KAAK0b,YAAYpX,KAAKoC,EAAQqB,MAC3B/H,KAAK0d,aAAa,GAAKhX,EAAQqB,KAClCrB,EAAQqB,KAAO/H,KAAKub,kBAAkBuB,cAAcpW,EAAQqB,MAC5DrB,EAAQ/B,KAAO,KACfkD,EAAMkV,QAAQrW,GAEb,MAAMsW,EAAU,GAChBnV,EAAMwB,SAAAA,SAAkBwC,EAAOyF,GACP,QAAdzF,EAAM3K,MAAgC,OAAd2K,EAAM3K,MAChC8b,EAAQrW,KAAKkF,MAGrB7L,KAAK6b,YAAa,EAClB7b,KAAKga,UAAYha,KAAKga,UAAUkD,OAAOF,IAE1C7V,IACCnH,KAAK6b,YAAa,IAIlBvc,cACAU,KAAK0d,aAAa,GAAK1d,KAAKsc,eAAe3e,GAGvCqC,KAAK4d,mBAAmBG,MAE1B/d,KAAK0d,aAAa,GAAK1d,KAAK4d,mBAAmBrZ,IAAI,QAAQsH,MAG3D7L,KAAK0d,aAAa,GAAK,GAEzB1d,KAAK0d,aAAa,GAAK1d,KAAK2d,cAC7B3d,KAAKwb,UAAU+B,MAAMvd,KAAK0d,cAGzBpe,SACDU,KAAKwb,UAAU+B,uCAlHyBjE,UAEnB1F,EAAAhW,SACFgW,EAAA/T,SACKuC,SACQwW,KAvBrBrZ,EAAAC,EAAA,CAAThB,OAAAiB,EAAA+d,EAAAhf,qBAAsBiB,EAAAkc,uCADZ8B,GAA8Ble,EAAAC,EAAA,CAL1ChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,8BACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAsBuCuc,GAEnB1F,EAAAhW,EACFgW,EAAA/T,EACKuC,EACQwW,MAxBpB6E,ICLb,IAAaO,GAAb,MAIE1e,YAAmBkc,EACRtJ,EACA1F,GAFQxM,KAAAwb,UAAAA,EACRxb,KAAAkS,OAAAA,EACAlS,KAAAwM,gBAAAA,EAEXlN,WACDU,KAAKie,eAAiB,IAAI9N,EAAA9R,EAAW,CACnCsG,KAAM,IAAIwL,EAAAtQ,EAAY,IACtBkH,YAAa,IAAIoJ,EAAAtQ,EAAY,MAI9BP,QACDU,KAAKwb,UAAU+B,QAGdje,SACD,MAAM4e,EAAI,IAAI3d,EACd2d,EAAEnX,YAAc/G,KAAKie,eAAe1Z,IAAI,eAAesH,MACvDqS,EAAEvZ,KAAO3E,KAAKie,eAAe1Z,IAAI,QAAQsH,MACzC7L,KAAKwM,gBAAgB2R,OAAOD,GAC5Ble,KAAKwb,UAAU+B,uCApBgB3J,EAAAhW,SACXgW,EAAA/T,SACSyL,IANjB0S,GAA2Bze,EAAAC,EAAA,CALvChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,2BACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAO8B6W,EAAAhW,EACXgW,EAAA/T,EACSyL,KANjB0S,ICAb,IAAaI,GAAb,MAME9e,YAAmBkc,EACCtJ,EACA1F,GAFDxM,KAAAwb,UAAAA,EACCxb,KAAAkS,OAAAA,EACAlS,KAAAwM,gBAAAA,EAEpBlN,WAEEU,KAAKqe,cAAgB,IAAIlO,EAAA9R,EAAU,CACjCsG,KAAM,IAAIwL,EAAAtQ,EAAY,MAIxBG,KAAKwM,gBAAgBd,cAAclH,UAAWwH,IAC5ChM,KAAKse,WAAatS,IAIpBhM,KAAKwM,gBAAgBF,gBAAgBtM,KAAKse,YAAY9Z,UAAWF,IAC/DtE,KAAKue,aAAeja,IAKxBhF,QACEU,KAAKwb,UAAU+B,QAIjBje,SACEU,KAAKwM,gBAAgBgS,iBAAiBxe,KAAKse,WAAYte,KAAKqe,cAAc9Z,IAAI,QAAQsH,OACtF7L,KAAKwb,UAAU+B,QAIjBje,OAAO+E,GACLrE,KAAKwM,gBAAgBiS,sBAAsBze,KAAKse,WAAYja,GAC5DrE,KAAKwb,UAAU+B,uCAnCa3J,EAAAhW,SACFgW,EAAA/T,SACSyL,IAR1B8S,GAA0B7e,EAAAC,EAAA,CALtChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,0BACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAS8B6W,EAAAhW,EACFgW,EAAA/T,EACSyL,KAR1B8S,qBCAb,IAAaM,GAAb,MAKEpf,YAAmBkc,EACRtJ,EACA1F,EACwBmS,GAHhB3e,KAAAwb,UAAAA,EACRxb,KAAAkS,OAAAA,EACAlS,KAAAwM,gBAAAA,EACwBxM,KAAA2e,SAAAA,EAEnCrf,WAGEU,KAAKwM,gBAAgBd,cAAclH,UAAYF,IAC7CtE,KAAK0L,cAAgBpH,IAGvBtE,KAAKie,eAAiB,IAAI9N,EAAA9R,EAAW,CACnCsG,KAAM,IAAIwL,EAAAtQ,EAAYG,KAAK0L,cAAc/G,MACzCoC,YAAa,IAAIoJ,EAAAtQ,EAAYG,KAAK0L,cAAc3E,eAKpDzH,QACDU,KAAKwb,UAAU+B,QAGdje,SACKsf,QAAQ,oIACT5e,KAAKwM,gBAAgBnM,OAAOL,KAAK0L,eAEnC1L,KAAKwb,UAAU+B,QAGjBje,SACE,MAAM4e,EAAI,IAAI3d,EACd2d,EAAEnX,YAAc/G,KAAKie,eAAe1Z,IAAI,eAAesH,MACvDqS,EAAEvZ,KAAO3E,KAAKie,eAAe1Z,IAAI,QAAQsH,MACzCqS,EAAEvgB,GAAKqC,KAAK0L,cAAc/N,GAC1BugB,EAAEW,KAAO7e,KAAK0L,cAAcmT,KAC5B7e,KAAKwM,gBAAgBsS,OAAOZ,GAC5Ble,KAAKwb,UAAU+B,uCArCa3J,EAAAhW,SACXgW,EAAA/T,SACSyL,kCACxB7L,EAAAsf,EAAMC,KAAA,CAACpL,EAAApU,OARAkf,GAA4Bnf,EAAAC,EAAA,CALxChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,4BACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,0CAWIwC,EAAA3B,EAAA,EAAAY,OAAAiB,EAAAsf,EAAAvgB,CAAOoV,EAAApU,6BAHmBoU,EAAAhW,EACXgW,EAAA/T,EACSyL,EAAe9M,UAPhCkgB,ICoBb,IAAaO,GAAb,MA2BE3f,YAAoBkN,EACT/B,EACAE,EACAsE,EACAgD,EACAvH,EACAwU,EACA5c,EACA4P,GARSlS,KAAAwM,gBAAAA,EACTxM,KAAAyK,eAAAA,EACAzK,KAAA2K,eAAAA,EACA3K,KAAAiP,cAAAA,EACAjP,KAAAiS,aAAAA,EACAjS,KAAA0K,YAAAA,EACA1K,KAAAkf,aAAAA,EACAlf,KAAAsC,OAAAA,EACAtC,KAAAkS,OAAAA,EA/BXlS,KAAAkO,YAA0B,GAIlBlO,KAAAmf,YAAc,IAGfnf,KAAAoK,iBAA2B,IAAIuL,GAAAyJ,OAAO,EAAG,GACzCpf,KAAAqf,aAAc,EACbrf,KAAAsf,MAA4B9gB,OAAA+gB,GAAA/f,EAAAhB,CAA4B,IAAnBwB,KAAKmf,aAwBlD7f,WAGDU,KAAKyK,eAAelF,SAASf,UAAY2B,IACvCnG,KAAKuF,SAAWY,EAEKmK,MAAjBtQ,KAAKuF,WACVvF,KAAKkO,YAAclO,KAAKuF,SAASA,SACjCvF,KAAKiP,cAAcuQ,iBAAiBxf,KAAKkO,YAAY,IAIrDlO,KAAKiP,cAAcwQ,mBAAmBzf,KAAKkO,gBAO5ClO,KAAKiP,cAAc7B,YAAY5I,UAAWF,IACxCtE,KAAKoN,YAAc9I,IAGrBtE,KAAKiP,cAAcnB,WAAWtJ,UAAWF,IACvCtE,KAAK8N,WAAaxJ,IAGpBtE,KAAKyK,eAAejB,cAAchF,UAAWF,IAC3CtE,KAAKwJ,cAAgBlF,EACjBtE,KAAKwJ,eACVjC,QAAQC,IAAIxH,KAAKwJ,cAAcrI,OAAO,GAAG4G,QAG1C/H,KAAK0K,YAAYjI,YAAY+B,UAAUF,GAAQtE,KAAKyC,YAAc6B,GAElEtE,KAAKwM,gBAAgBN,cACrBlM,KAAKwM,gBAAgBhB,SAAShH,UAAYgH,IACxCxL,KAAKwL,SAAWA,EAEZxL,KAAKwL,SAASjN,QACnByB,KAAKwM,gBAAgBgT,iBAAiBxf,KAAKwL,SAAS,IAGnDxL,KAAKiP,cAAcvC,OAAOlI,UAAWF,IACtCtE,KAAKiO,UAAY3J,EAEbtE,KAAKiO,UAAU1P,OAAS,EAC1ByB,KAAK0f,aAAc,EAEnB1f,KAAK0f,aAAc,IAIpB1f,KAAKiP,cAAc3B,iBAAiB9G,KAAKhI,OAAAmhB,GAAAngB,EAAAhB,CAAU,IAAIgG,UAAWF,IACnEtE,KAAKsN,iBAAmBhJ,EAExBtE,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEsH,MAAQ3E,KAAKoN,aAChB/P,EAAEkI,SAASjB,KACTjH,EAAEkI,SAASjB,GAAMnD,OAAO,GAAGye,aAChC5f,KAAK6f,UAAY,SAASC,KAAKziB,EAAEkI,SAASjB,GAAMnD,OAAO,GAAGye,cAAc,GAExE5f,KAAK6f,UAAY,SAASC,KAAKziB,EAAEkI,SAASjB,GAAMnD,OAAO,GAAG4G,MAAM,QAOjE/H,KAAKiP,cAAcnC,UAAUtI,UAAWF,IACzCtE,KAAK8M,UAAYxI,IAGhBtE,KAAKiP,cAAcjC,UAAUxI,UAAWF,IACzCtE,KAAKgN,UAAY1I,IAGhBtE,KAAKiP,cAAc/B,YAAY1I,UAAWF,IAC3CtE,KAAKkN,YAAc5I,IAGlBtE,KAAKiP,cAAcnC,UAAUtI,UAAWF,IACzCtE,KAAK8M,UAAYxI,MAKlBtE,KAAKwM,gBAAgBd,cAAclH,UAAUF,IAC3CtE,KAAKyQ,gBAAkBnM,EACvBtE,KAAK+f,kBAAkB/f,KAAKyQ,iBAE5BzQ,KAAKggB,cAAgB,uDAAyD1b,EAAKua,OAGrF7e,KAAKyK,eAAeL,iBAAiB5D,KAAKhI,OAAAgZ,GAAAhY,EAAAhB,CAAK,IAAIgG,UAAYF,IAC7DtE,KAAKoK,iBAAmB9F,IAO1BtE,KAAKiP,cAAcgR,oBAAoB,GAGtC3gB,iBACDU,KAAKyK,eAAelE,YAAYvG,KAAKyQ,gBAAgB9S,IAGpD2B,eAAeqQ,GAChBA,EAAS3P,KAAKkgB,kBAAoBlgB,KAAKsf,MAAM9a,UAAU,KAAQxE,KAAKmgB,mBAAuBngB,KAAKkgB,kBAAkB9L,cAGjH9U,cAAc4e,GACfle,KAAKwM,gBAAgBgT,iBAAiBtB,GACtCle,KAAK+f,kBAAkB7B,GAGtB5e,kBAAkB4e,GACnBle,KAAKyK,eAAelE,YAAY2X,EAAEvgB,IAClCqC,KAAKyK,eAAeT,YAAYkU,EAAEvgB,IAClCqC,KAAKyK,eAAevD,eAAegX,EAAEvgB,IAGpC2B,iBACaU,KAAKkS,OAAOe,KAAKqI,IACzB8E,cAAc5b,UAAYqD,IAElB,MAATA,GACHA,EAAMwB,QAAU5B,IACfzH,KAAKyK,eAAe4V,iBAAiBrgB,KAAKyQ,gBAAgB9S,GAAIqC,KAAKsgB,qBAAsB7Y,OAW3FnI,aACDiI,QAAQC,IAAIS,EAAAG,WAAgBpI,OAI3BV,qBAUD,MAT2B,CAC1B4B,KAAQ,UACRF,SAAY,CACVE,KAAQ,QACRqf,YAAe,CAAC,EAAG,IAErBtf,WAAc,IAMd3B,qBAAqBib,GAEtB,IAAIxS,EADU/H,KAAKkS,OAAOe,KAAKwK,IAEzB2C,cAAc5b,UAAYkZ,IAC/BnW,QAAQC,IAAIkW,GACZ3V,EAAO2V,EACP1d,KAAKwgB,SAAoB,SAAXzY,EAAK,IAAe,EAAMA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAS/DzI,yBACDU,KAAKkS,OAAOe,KAAK+K,GAA6B,CAC5CyC,OAAQ,QACRC,MAAO,UAQRphB,wBACCU,KAAKkS,OAAOe,KAAKmL,GAA4B,CAC5CqC,OAAQ,QACRC,MAAO,UAITphB,iBAAiBqhB,GAElB3gB,KAAKkS,OAAOe,KAAKyL,GAA8B,CAC7C+B,OAAQ,QACRC,MAAO,QACP5U,KAAM,CACPnO,GAAIgjB,EAAQhjB,GACZgH,KAAMgc,EAAQhc,KACdoC,YAAa4Z,EAAQ5Z,YACrB8X,KAAM8B,EAAQ9B,QAMdvf,kBAAkBqF,GAuBnB,GAbA3E,KAAK2O,UAAYhK,EAEjB3E,KAAKiP,cAAc2R,eAAejc,GAWL,KAAzB3E,KAAKiO,UAAU1P,OAEjB,GAAKoG,GAAQ,IAAMA,EAAKpG,OAEjB,GAAIyB,KAAKiO,UAAU8C,OAAO1T,GAAKA,EAAEsH,OAASA,GAAMpG,OACxDgJ,QAAQC,IAAI,qBACJ,CACR,IAAIqZ,EAAsB7gB,KAAK8gB,iBAC/B9gB,KAAKiO,UAAUtH,KAAK,CAClBhC,KAAMA,EACNY,SAAUvF,KAAK8M,UACfuB,MAAOwS,EACPvS,KAAM,oBAGRtO,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,WACjCjO,KAAKiS,aAAa8O,SAAS/gB,KAAK2O,WAEhCpH,QAAQC,IAAIxH,KAAKiO,WACjB1G,QAAQC,IAAIxH,KAAK8M,WAGjB,IAAK,IAAIzG,KAAQrG,KAAK8M,UAAW,CAM/B,IAAIkU,EAAW3a,EAAKpF,WAGpB,GAFAsG,QAAQC,IAAInB,EAAKpF,YAEb+f,EAAS5S,MACd7G,QAAQC,IAAI,QACZwZ,EAAS5S,MAAMzH,KAAK,CAClBhC,KAAMA,EACN0J,MAAOwS,EACPvS,KAAM,wBAEA,CACR/G,QAAQC,IAAI,+BACOwZ,EAAS5S,MAAQ,IACvBzH,KAAK,CAChBhC,KAAMA,EACN0J,MAAOwS,EACPvS,KAAM,oBAIPtO,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GACtDsjB,OAAO5a,EAAK1I,IACZqjB,GACTzZ,QAAQC,IAAI,kBACZD,QAAQC,IAAI,iBAAmBnB,EAAK1I,IACpC4J,QAAQC,IAAI,sCACZD,QAAQC,IAAIwZ,GACZzZ,QAAQC,IAAI,qCApDdD,QAAQC,IAAI,gBA8DbxH,KAAK8M,UAAY,GACjB9M,KAAKiP,cAAciS,aAAalhB,KAAK8M,WACrC9M,KAAKiP,cAAckS,gBAAe,GAClCnhB,KAAKiP,cAAcmS,cAAa,GAG/B9hB,kBAAkBM,GACnBI,KAAKkS,OAAOe,KAAKrT,GAIhBN,cACD,IAAI4N,GAAelN,KAAKkN,YAGxBlN,KAAKiP,cAAc2R,eAAe5gB,KAAKiO,UAAU,GAAGtJ,MAId,GAFpB3E,KAAKiO,UAAU8C,OAAO3C,GAASA,EAAMzJ,MAAQ3E,KAAKoN,aAEpD,GAAG7H,SAAShH,OAC1ByB,KAAKiP,cAAcoS,uBAAsB,GAEzCrhB,KAAKiP,cAAcoS,uBAAsB,GAG3CrhB,KAAKiP,cAAcgR,oBAAoB,GACvCjgB,KAAKiP,cAAcqS,eAAepU,GAClClN,KAAKiP,cAAcmS,cAdH,GAehBphB,KAAKsC,OAAOoR,cAAc,UAAW,CAAEC,oBAAoB,IAE3D3T,KAAK8M,UAAY,GACjB9M,KAAKiP,cAAciS,aAAalhB,KAAK8M,WACrC9M,KAAKiP,cAAckS,gBAAe,GAClCnhB,KAAKiP,cAAcwE,cAAc,UAIhCnU,UAAUiiB,GACX,IAAIC,EAAiBxhB,KAAKiO,UAAU8C,OAAO0Q,GAAaA,EAAU9c,OAAS3E,KAAKoN,aAG5EmU,GACFvhB,KAAKsN,kBAAoB,EACzBtN,KAAKsN,iBAAmBtN,KAAKsN,iBAAmBkU,EAAe,GAAGjc,SAAShH,SAG9C,GAAzByB,KAAKsN,mBACVtN,KAAKsN,iBAAmBkU,EAAe,GAAGjc,SAAShH,QAElDyB,KAAKsN,kBAAoB,GAO3BtN,KAAKiP,cAAcgR,oBAAoBjgB,KAAKsN,kBAI3ChO,iBAGD,IAFA,IACI+O,EAAQ,IACHzP,EAAI,EAAGA,EAAI,EAAGA,IACrByP,GAHY,mBAGK3K,KAAKge,MAAsB,GAAhBhe,KAAKC,WAEnC,OAAO0K,EAIN/O,YACsB,UAAnBU,KAAK8N,YACP9N,KAAKiP,cAAcwE,cAAc,UACjCzT,KAAKsC,OAAOoR,cAAc,UAAW,CAACC,oBAAoB,MAE1D3T,KAAKiP,cAAcwE,cAAc,UACjCzT,KAAKsC,OAAOoR,cAAc,UAAW,CAACC,oBAAoB,KAE5D3T,KAAKiP,cAAc2R,eAAe5gB,KAAKoN,aAatC9N,oBAKAA,SAASqiB,EAAgBC,GAAoB,EAAOtH,EAAW,GAAIvS,EAAO,GAAIwS,GAC7E,IAgDIsH,EACArH,EAjDAsH,EAAY,kDACZC,EAA4B,GAC5BC,EAAS,GAEbhiB,KAAKkO,YAAY7E,QAAQ4Y,IAEzBD,EAASC,EAAQ5gB,WAGjB,IAAIkf,EAAc0B,EAAQjhB,SAAsBuf,YAG5C2B,EAAgBvgB,EAAYE,OAAS,WAAaogB,EAAQ9gB,OAAO,GAAG4G,KACxEma,EAAgBA,EAAc9H,QAAQ,kBAAmB,OAMzD,IAAIzL,EAAmB,GACnBwT,EAAoB,GACxB,IACCxT,EAAYsT,EAAQhhB,WAAkBmN,MAAE,GAAGzJ,KAC3Cwd,EAAaF,EAAQhhB,WAAkBmN,MAAE,GAAGC,MAC3C,MAAOlH,GACRwH,EAAY,MACZwT,EAAa,UAGd,GAAIR,EAAQ,CAEX,IAAIS,EAAe,CAClBC,UAAa9B,EAAY,GACzB+B,SAAY/B,EAAY,GACxBgC,IAAOL,EACPvT,UAAaA,EACbwT,WAAcA,GAGfJ,EAAWpb,KAAKyb,OAEV,CAEN,IAAII,EAAUjC,EAAY,GAAK,IAAMA,EAAY,GAAK,IAAM2B,EAAgB,IAAMvT,EAAY,IAAMwT,EAAa,OAEjHL,GAAaU,KAMXb,GACHE,EAAUE,EACVvH,EAAY,UAEZqH,EAAUC,EACVtH,EAAY,QAIVoH,GACY,IAAZrH,EAAkBA,EAAWyH,EAASxH,EAAaD,GAAYC,EACjExa,KAAKkf,aAAauD,OAAOnI,EAAUvS,EAAMwS,EAAUC,EAAWqH,IAE9D7hB,KAAK0iB,SAASb,EAAQrH,EAAUwH,GAKlC1iB,SAASuiB,EAASrH,EAAWwH,GAE5B,IAAIrZ,EAAO,IAAIC,KAAK,CAAC,SAAWiZ,GAAU,CAAC3gB,KAAM,4BAC7CwhB,EAAWja,SAASC,cAAc,KAClCia,EAAM9Z,IAAIC,gBAAgBH,GAC1Bia,EAAW,eAAiBZ,GAGa,GAAzCa,UAAUC,UAAUC,QAAQ,YAA4D,GAA1CF,UAAUC,UAAUC,QAAQ,WAC7EL,EAAS3Z,aAAa,SAAU,UAGjC2Z,EAAS3Z,aAAa,OAAQ4Z,GAC9BD,EAAS3Z,aAAa,WAAY6Z,EAAWpI,GAC7CkI,EAAS/R,MAAMqS,WAAa,SAC5Bva,SAASO,KAAKC,YAAYyZ,GAC1BA,EAASxZ,QACTT,SAASO,KAAKG,YAAYuZ,kCAxeWpX,SACVtG,SACA4F,EAAAvM,SACDkO,SACDyC,SACD5M,SACCkX,UACNzU,EAAAhF,SACA+T,EAAA/T,IAnCRof,GAAmB1f,EAAAC,EAAA,CAL/BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,kBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEA8BqCuO,EACVtG,EACA4F,EAAAvM,EACDkO,EACDyC,EACD5M,EACCkX,GACNzU,EAAAhF,EACA+T,EAAA/T,KAnCRof,kCCzBb,IAAagE,GAAb,MACI3jB,YAAoBoL,GAAA1K,KAAA0K,YAAAA,EAEpBpL,UAAU4jB,EAA2B5e,GACjC,OAAOA,EAAK6e,OAAOD,GAAS1c,KAAKhI,OAAA4kB,GAAA5jB,EAAAhB,CAAW6kB,IACrB,MAAfA,EAAIC,SAEJtjB,KAAK0K,YAAYtH,SACjBI,SAAS+f,UAGb,MAAMpc,EAAQkc,EAAIlc,MAAMqc,SAAWH,EAAII,WACvC,OAAOjlB,OAAAklB,GAAAlkB,EAAAhB,CAAW2I,qCAXO/E,IADxB6gB,GAAe1jB,EAAAC,EAAA,CAD3BhB,OAAAiB,EAAAqF,EAAAtG,4BAEoC4D,KADxB6gB,IAkBb,IAAaU,GAAb,MACIrkB,YAAoBgV,GAAAtU,KAAAsU,QAAAA,EAEpBhV,UAAU4jB,EAA2B5e,GAYjC,OAVI4e,EAAQP,IAAII,QAAQ,oCAAsC,GACtD/iB,KAAKsU,QAAQE,eACb0O,EAAUA,EAAQU,MAAM,CACpBC,WAAY,CACRC,cAAe,UAAY9jB,KAAKsU,QAAQpR,UAAUzC,UAM3D6D,EAAK6e,OAAOD,kCAdM9gB,IADpBuhB,GAAgBpkB,EAAAC,EAAA,CAD5BhB,OAAAiB,EAAAqF,EAAAtG,4BAEgC4D,KADpBuhB,ICPb,IAAaI,GAAb,MA2BEzkB,YAAoBmL,EACT+B,EACAyC,EACA+U,EACAC,EACA/R,GALSlS,KAAAyK,eAAAA,EACTzK,KAAAwM,gBAAAA,EACAxM,KAAAiP,cAAAA,EACAjP,KAAAgkB,SAAAA,EACAhkB,KAAAikB,QAAAA,EACAjkB,KAAAkS,OAAAA,EAnBXlS,KAAAkkB,WAAqB,EAKrBlkB,KAAAkO,YAA0B,GAE1BlO,KAAAmkB,UAAoB,GAcpB7kB,WACDiI,QAAQC,IAAI,iBACZxH,KAAK2B,YAAcA,EAOnB3B,KAAKyK,eAAepF,OAAOb,UAAUnH,IACpCkK,QAAQC,IAAI,wBACXxH,KAAKqF,OAAShI,GACb8J,IACFI,QAAQC,IAAI,2BACZxH,KAAKokB,eAAgB,IAItBpkB,KAAKyK,eAAelF,SAASf,UAAY2B,IACnCA,IACDA,EAAGZ,SAAShH,OAAS,GACvByB,KAAKqkB,aAAc,EACnBrkB,KAAKkO,YAAc/H,EAAGZ,SAASwL,OAAOzK,GACA,SAAhCA,EAAQnF,OAAO,GAAGG,YAGF,IAAlBtB,KAAKmkB,YACVnkB,KAAKskB,kBAAoBtkB,KAAKkO,YAAYqW,MAAM,EAAGvkB,KAAKmkB,cAGxD5c,QAAQC,IAAI,oBACXxH,KAAKqkB,aAAc,MAKtBrkB,KAAKwM,gBAAgBhB,SAAShH,UAAWgH,IACvCxL,KAAKwL,SAAWA,EACZxL,KAAKwL,SAASjN,OACnByB,KAAKokB,eAAgB,EAErBpkB,KAAKokB,eAAgB,IAItBpkB,KAAKyK,eAAejB,cAAchF,UAAWF,IACvCA,IACLtE,KAAKwJ,cAAgBlF,KAItBtE,KAAKiP,cAAcvC,OAAOlI,UAAWF,IACnCtE,KAAKiO,UAAY3J,IAGnBtE,KAAKiP,cAAc7B,YAAY5I,UAAWF,IACxCtE,KAAKoN,YAAc9I,IAGrBtE,KAAKiP,cAAcvB,mBAAmBlJ,UAAWF,IAC/CtE,KAAKwkB,WAAalgB,IAGpBtE,KAAKiP,cAAcnC,UAAUtI,UAAWF,IACtCtE,KAAK8M,UAAYxI,IAGnBtE,KAAKiP,cAAcjC,UAAUxI,UAAWF,IACtCtE,KAAKgN,UAAY1I,IAGnBtE,KAAKiP,cAAc3B,iBAAiB9G,KAAKhI,OAAAmhB,GAAAngB,EAAAhB,CAAU,IAAIgG,UAAWF,IAChEtE,KAAKsN,iBAAmBhJ,IAG1BtE,KAAKiP,cAAc/B,YAAY1I,UAAWF,IACxCtE,KAAKkN,YAAc5I,EAGpBtE,KAAKsjB,SADAhf,IAONtE,KAAKiP,cAAcgR,oBAAoB,GAGtC3gB,UAED,IAAIkiB,EAAiBxhB,KAAKiO,UAAU8C,OAAO0Q,GAAaA,EAAU9c,OAAS3E,KAAKoN,aACvDkD,MAArBkR,EAAe,IACuDlR,MAApEkR,EAAe,GAAGjc,SAASvF,KAAKsN,kBAAkBnM,OAAO,GAAG4G,OACjE/H,KAAKiP,cAAcgR,oBAAoB,GAEkB3P,MAArDkR,EAAe,GAAGjc,SAASvF,KAAKsN,mBAClCtN,KAAKiP,cAAc2R,eAAe5gB,KAAKiO,UAAU,GAAGtJ,OAIvD,IAAIud,EAAgBliB,KAAK2B,YAAYE,OAAS,WAAa2f,EAAe,GAAGjc,SAASvF,KAAKsN,kBAAkBnM,OAAO,GAAG4G,KAGvH,OAFA/H,KAAKiP,cAAcwV,mBAAmBjD,EAAe,GAAGjc,SAASvF,KAAKsN,kBAAkB3P,IACxFukB,EAAgBA,EAAc9H,QAAQ,kBAAmB,OAIxD9a,YACD,GAA+B,GAA3BU,KAAKkO,YAAY3P,SACfyB,KAAKmkB,UAAYnkB,KAAKkO,YAAY3P,SACvCyB,KAAKmkB,UAAYnkB,KAAKkO,YAAY3P,QAE7ByB,KAAKmkB,WAAankB,KAAKkO,YAAY3P,QAGxC,OAFAyB,KAAKikB,QAAQS,YACb1kB,KAAKkkB,WAAY,GAIlBlkB,KAAKskB,kBAAoBtkB,KAAKkO,YAAYqW,MAAM,EAAGvkB,KAAKmkB,WACxDQ,WAAW,KACT3kB,KAAKikB,QAAQS,OACb1kB,KAAKkkB,WAAY,GAChB,MAGF5kB,WACIU,KAAKkkB,YACRlkB,KAAKikB,QAAQxV,OACbzO,KAAKmkB,WAAa,GAClBnkB,KAAK4kB,YACL5kB,KAAKkkB,WAAY,GAWlB5kB,yBACDU,KAAKkS,OAAOe,KAAK+K,GAA6B,CAC5CyC,OAAQ,QACRC,MAAO,yCAtJ4B1b,SACRsG,SACFiB,SACL9M,EAAAolB,SACDC,EAAAjlB,SACD+T,EAAA/T,IAhCRkkB,GAAqBxkB,EAAAC,EAAA,CANjChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,oBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEA+BoCiI,EACRsG,EACFiB,EACL9M,EAAAolB,EACDC,EAAAjlB,EACD+T,EAAA/T,KAhCRkkB,qBCFb,IAAagB,GAAb,MAwBEzlB,YAAqBmL,EACTwE,EACAzC,EACAwY,EACA9S,GAJSlS,KAAAyK,eAAAA,EACTzK,KAAAiP,cAAAA,EACAjP,KAAAwM,gBAAAA,EACAxM,KAAAglB,aAAAA,EACAhlB,KAAAkS,OAAAA,EAtBZlS,KAAAsjB,QAAkB,EAClBtjB,KAAAilB,UAAoB,EACpBjlB,KAAAklB,OAAwB,GAIxBllB,KAAAmlB,aAAuB,QAOvBnlB,KAAAwN,aAAuB,EAGvBxN,KAAAolB,gBAAuB,GASvB9lB,WACDU,KAAK2B,YAAcA,EACnB,IAAIugB,EAAgBliB,KAAK2B,YAAYE,OAAS,WAAa7B,KAAKsG,QAAQnF,OAAO,GAAG4G,KAClFma,EAAgBA,EAAc9H,QAAQ,kBAAmB,OACzDpa,KAAKkiB,cAAgBA,EACrBliB,KAAKugB,YAAcvgB,KAAKsG,QAAQtF,SAAsBuf,YAGtDvgB,KAAKwM,gBAAgBd,cAAclH,UAAUF,IAC3CtE,KAAKyQ,gBAAkBnM,IAGzBtE,KAAKiP,cAAcvC,OAAOlI,UAAWF,IACnCtE,KAAKiO,UAAY3J,EAEK,MAAlBtE,KAAKiO,WAAqBjO,KAAKiO,UAAU1P,OAAS,GAA2B,MAAtByB,KAAKkiB,eACjEliB,KAAKiO,UAAU5E,QAAQhM,IACrBA,EAAEkI,SAAS8D,QAAQhL,IAEhBA,EAAEV,IAAMqC,KAAKsG,QAAQ3I,KAClBqC,KAAKklB,OAAOrL,SAASxc,EAAEgR,QAC7BrO,KAAKklB,OAAOve,KAAKtJ,EAAEgR,OAGlBrO,KAAKilB,UAAW,SAOpBjlB,KAAKiP,cAAcnC,UAAUtI,UAAWF,IACtCtE,KAAK8M,UAAYxI,IAGnBtE,KAAKiP,cAAc7B,YAAY5I,UAAWF,IACxCtE,KAAKoN,YAAc9I,IAIrBtE,KAAKiP,cAAczB,YAAYhJ,UAAWF,IACxCtE,KAAKwN,YAAclJ,EACK,GAApBtE,KAAKwN,cACVxN,KAAKsjB,QAAS,KAGf,IAAI+B,EAAcrlB,KAAKsG,QAAQnF,OAAO,GAAGye,aACzCyF,EAAcrlB,KAAKsG,QAAQnF,OAAO,GAAGye,aACrC5f,KAAKqlB,YAAcA,EAsBlB/lB,cACuB,GAApBU,KAAKwN,cACPxN,KAAKwN,aAAc,EACnBxN,KAAKiP,cAAckS,gBAAe,IAEpCnhB,KAAKsjB,QAAUtjB,KAAKsjB,OAEhBtjB,KAAK8M,UAAUiE,OAAOuU,GAAKA,EAAEnkB,OAAO,GAAGxD,IAAMqC,KAAKsG,QAAQnF,OAAO,GAAGxD,IAAIY,OAAS,EACnFyB,KAAK8M,UAAY9M,KAAK8M,UAAUiE,OAAOuU,GAAKA,EAAEnkB,OAAO,GAAGxD,IAAMqC,KAAKsG,QAAQnF,OAAO,GAAGxD,IAErFqC,KAAK8M,UAAUnG,KAAK3G,KAAKsG,SAG3BtG,KAAKiP,cAAciS,aAAalhB,KAAK8M,WAIR,GAAzB9M,KAAK8M,UAAUvO,OACjByB,KAAKiP,cAAcmS,cAAa,GAEhCphB,KAAKiP,cAAcmS,cAAa,GAKjC9hB,UAAUM,GAEXI,KAAKkS,OAAOe,KAAKrT,GAGhBN,cACC,MAAMimB,EAAUvlB,KAAKyK,eACvBzK,KAAK8M,UAAUzD,SAAAA,SAAkBwC,GAChC0Z,EAAQC,cAAc3Z,MAItBvM,oBAAoBM,GAErBI,KAAKkS,OAAOe,KAAKrT,GAGhBN,qBAAqBM,GAEtBI,KAAKkS,OAAOe,KAAKrT,GAGhBN,gBAAgB+O,GACjB9G,QAAQC,IAAIxH,KAAKiO,WACjBjO,KAAKiO,UAAU5E,QAAQhM,IAEjBA,EAAEkI,SAAShH,QAAU,EAC1ByB,KAAKiO,UAAYjO,KAAKiO,UAAU8C,OAAO1T,GAAKA,EAAEgR,OAASA,GAEnDhR,EAAEgR,OAASA,IACbhR,EAAEkI,SAAWlI,EAAEkI,SAASwL,OAAOnS,GAAKA,EAAEjB,IAAMqC,KAAKsG,QAAQ3I,OAK5D,IAAIqjB,EAAWhhB,KAAKsG,QAAQrF,WAE5B+f,EAAS5S,MAAQ4S,EAAS5S,MAAM2C,OAAO1T,GAAKA,EAAEgR,OAASA,GAEvDrO,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GACnDsjB,OAAOjhB,KAAKsG,QAAQ3I,IACpBqjB,GAEZhhB,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,WACjCjO,KAAKklB,OAASllB,KAAKklB,OAAOnU,OAAO1T,GAAKA,GAAKgR,GAG1C/O,kBAAkBM,GAEnBI,KAAKkS,OAAOe,KAAKrT,GAGhBN,gBAAiBqF,GAClB,IAAI0J,EAAQ,GACZrO,KAAKiP,cAAcgR,oBAAoB,GACvCjgB,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEsH,MAAQA,IACftH,EAAEkI,SAASoB,KAAK3G,KAAKsG,SACrB+H,EAAQhR,EAAEgR,SAIX,IAAI2S,EAAWhhB,KAAKsG,QAAQrF,WAC5B,GAAI+f,EAAS5S,MAAO,CACE4S,EAAS5S,MAAMhI,IAAI/I,GACjCA,EAAEsH,MAGWkV,SAASlV,IAC7Bqc,EAAS5S,MAAMzH,KAAK,CAClBhC,KAAMA,EACN0J,MAAOA,SAIR2S,EAAS5S,MAAQ,GACjB4S,EAAS5S,MAAMzH,KAAK,CACrBhC,KAAMA,EACN0J,MAAOA,IAIRrO,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GACnDsjB,OAAOjhB,KAAKsG,QAAQ3I,IACpBqjB,GAEZhhB,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,WAGhC3O,sBAAsB+O,GACvBrO,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEgR,OAASA,IAChBrO,KAAKmlB,aAAe9nB,EAAEsH,uCAlMeK,SACVuH,SACEjB,SACHma,GAAAjmB,SACNoU,EAAA/T,IA3BXN,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAiBsC,mCADPikB,GAAiBxlB,EAAAC,EAAA,CAN7BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,gBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEA4BqCiI,EACVuH,EACEjB,EACHma,GAAAjmB,EACNoU,EAAA/T,KA5BTklB,ICHb,IAAaY,GAAb,MAQErmB,YAAoB2S,GAAAjS,KAAAiS,aAAAA,EAJpBjS,KAAA4lB,SAAmB,EACnB5lB,KAAA6lB,WAAwB7lB,KAAKiS,aAAa6T,gBAC1C9lB,KAAA+lB,WAA4B,GAmE5B/lB,KAAA2E,KAAO,IAAIwL,EAAAtQ,EAAY,IA/DvBP,WAEDU,KAAKkU,WAAalU,KAAKiS,aAAa5C,UAAU7K,UAAWF,IACvDtE,KAAK0H,KAAOpD,IAmBXtE,KAAKgmB,iBAIP1mB,iBACE,IAAI2mB,EAAYjmB,KAAKkmB,MAAM3W,QAAQhR,OAC/B4nB,GAAQ,EACRF,EAAY,GAAM,IAEpBE,GAAQ,EACRF,KAIFA,GAAaA,EAAY,GAAG,EAC5B,IAAIG,EAAe1iB,KAAKge,MAAM,IAAIuE,GACb,MAAjBG,IAAwBA,EAAe1iB,KAAKge,MAAM0E,EAAa,IACnEpmB,KAAK+lB,WAAWpf,KAAK,WACrB,IACI0f,EADAC,EAAU,EAGd,IAAK,IAAIhV,EAAQ,EAAGA,EAAQ2U,EAAW3U,IAErC+U,GADAC,GAAoBF,GACLxiB,SAAS,IACxB5D,KAAK+lB,WAAWpf,KAAK,IAAI0f,SAGvBF,GAAUnmB,KAAK+lB,WAAWpf,KAAK,WACnC2f,EAAU,IAEV,IAAK,IAAIhV,EAAQ,EAAGA,EAAQ2U,EAAW3U,IAGlB,IADnB+U,GADAC,GAAoBF,GACLxiB,SAAS,KACfrF,SAAe8nB,EAAO,IAAMA,GACrCrmB,KAAK+lB,WAAWpf,KAAK,MAAM0f,OAG7BrmB,KAAK+lB,WAAWpf,KAAK,WAQvBrH,cACDU,KAAKkU,WAAWE,6CAtEmBpF,IAPzBzP,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DADUmnB,GAAsBpmB,EAAAC,EAAA,CANlChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,qBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAYkCiS,KARvB2W,ICNb,IAAaY,GAAb,MAEEjnB,eAEAA,cAJWinB,GAAgBhnB,EAAAC,EAAA,CAL5BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,eACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,uEAGWwpB,ICUb,IAAaC,GAAb,MAmGElnB,YAAoB2S,EACThD,EACAxE,EACA+B,EACA0F,GAJSlS,KAAAiS,aAAAA,EACTjS,KAAAiP,cAAAA,EACAjP,KAAAyK,eAAAA,EACAzK,KAAAwM,gBAAAA,EACAxM,KAAAkS,OAAAA,EArGXlS,KAAAkO,YAA0B,GAY1BlO,KAAAwS,aAAuB,EAEvBxS,KAAAymB,YAAsB,kBAItBzmB,KAAA0mB,SAAuB,CAAC,CAAC/oB,GAAK,kBACzBgpB,QAAW,yBACX,CAAChpB,GAAK,SACNgpB,QAAW,gBACX,CAAChpB,GAAK,UACNgpB,QAAW,iBAEX,CAAChpB,GAAK,YACNgpB,QAAW,mBACX,CAAChpB,GAAK,aACNgpB,QAAW,oBACX,CAAChpB,GAAK,cACNgpB,QAAW,qBACX,CAAChpB,GAAK,SACNgpB,QAAW,gBACX,CAAChpB,GAAK,YACNgpB,QAAW,mBAEX,CAAChpB,GAAK,gBACNgpB,QAAW,uBACX,CAAChpB,GAAK,kBACNgpB,QAAW,qBACX,CAAChpB,GAAK,WACNgpB,QAAW,kBACX,CAAChpB,GAAK,WACNgpB,QAAW,kBACX,CAAChpB,GAAK,gBACNgpB,QAAW,uBACX,CAAChpB,GAAK,sBACNgpB,QAAW,6BACX,CAAChpB,GAAK,WACNgpB,QAAW,kBACX,CAAChpB,GAAK,YACNgpB,QAAW,mBAGX,CAAChpB,GAAK,YACNgpB,QAAW,mBACX,CAAChpB,GAAK,UACNgpB,QAAW,iBACX,CAAChpB,GAAK,mBACNgpB,QAAW,0BACX,CAAChpB,GAAK,iBACNgpB,QAAW,wBACX,CAAChpB,GAAK,cACNgpB,QAAW,qBACX,CAAChpB,GAAK,WACNgpB,QAAW,kBAEX,CAAChpB,GAAK,YACNgpB,QAAW,mBACX,CAAChpB,GAAK,UACNgpB,QAAW,iBACX,CAAChpB,GAAK,WACNgpB,QAAW,kBACX,CAAChpB,GAAK,WACNgpB,QAAW,kBACX,CAAChpB,GAAK,kBACNgpB,QAAW,yBACX,CAAChpB,GAAK,gBACNgpB,QAAW,uBACX,CAAChpB,GAAK,eACNgpB,QAAW,sBACX,CAAChpB,GAAK,UACNgpB,QAAW,kBAqBhBrnB,WAODU,KAAKyK,eAAelF,SAASf,UAAY2B,IACxCnG,KAAKuF,SAAWY,EAEKmK,MAAjBtQ,KAAKuF,WACPvF,KAAKkO,YAAclO,KAAKuF,SAASA,YAYlCvF,KAAKiP,cAAcnC,UAAUtI,UAAWF,IACzCtE,KAAK8M,UAAYxI,IAEhBiD,QAAQC,IAAIxH,KAAK8M,WAEnB9M,KAAKwM,gBAAgBd,cAAclH,UAAUF,IAC3CtE,KAAKyQ,gBAAkBnM,IAGzBtE,KAAKyS,QAAUzS,KAAKiP,cAAcvC,OAAOlI,UAAWF,IAClDtE,KAAKiO,UAAY3J,IAGnBiD,QAAQC,IAAIxH,KAAKiO,WAEjBjO,KAAKgU,aAAehU,KAAKiP,cAAc7B,YAAY5I,UAAWF,IAC5DtE,KAAKoN,YAAc9I,IAIpBhF,gBAAgB8O,GACjBpO,KAAKiP,cAAc2R,eAAexS,GAII,GAFpBpO,KAAKiO,UAAU8C,OAAO6V,GAAQA,EAAKjiB,MAAQ3E,KAAKoN,aAElD,GAAG7H,SAAShH,OAC1ByB,KAAKiP,cAAcoS,uBAAsB,GAEzCrhB,KAAKiP,cAAcoS,uBAAsB,GAE3CrhB,KAAKiP,cAAcgR,oBAAoB,GACvCjgB,KAAKiS,aAAahC,gBAAgB7B,GAGjC9O,sBAAsBM,GACvBI,KAAKkS,OAAOe,KAAKrT,GAGhBN,cACDU,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,UAAU8C,OAAO6V,GAAQA,EAAKjiB,MAAQ3E,KAAKoN,cAE5E,IAAK,IAAI/G,KAAQrG,KAAKkO,YAAa,CAIjC,IAAI8S,EAAW3a,EAAKpF,WACpB+f,EAAS5S,MAAQ4S,EAAS5S,MAAM2C,OAAO1T,GAAKA,EAAEsH,MAAQ3E,KAAKoN,aAE3DpN,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GACtDsjB,OAAO5a,EAAK1I,IACZqjB,GAEPhhB,KAAKiO,UAAU1P,QAAU,GAC3ByB,KAAKkN,aAAc,EACnBlN,KAAKiP,cAAcqS,eAAethB,KAAKkN,cAEvClN,KAAKiP,cAAc2R,eAAe5gB,KAAKiO,UAAU,GAAGtJ,MAYrDrF,gBAAgBM,EAA4B+E,GAC7C3E,KAAKgT,cAAgBrO,EACrB3E,KAAKkS,OAAOe,KAAKrT,GAGhBN,kBAAkBM,EAA4B+E,GAC/C3E,KAAKgT,cAAiBrO,EACtB3E,KAAKkS,OAAOe,KAAKrT,GAIhBN,SAASgP,GACV/G,QAAQC,IAAIxH,KAAKoN,aACjBpN,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEsH,MAAQ3E,KAAKoN,cACpB/P,EAAEiR,KAAOA,EACTtO,KAAK8M,UAAYzP,EAAEkI,YAMpBvF,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,WAgBjC,IAAK,IAAI5H,KAAQrG,KAAK8M,UAAW,CAChC,IAAIkU,EAAW3a,EAAKpF,WAGpB,MAAMqQ,EAAQtR,KAAKiO,UAAUsD,UAAUC,GAAQA,EAAKjM,SAAS,GAAG5H,IAAM0I,EAAK1I,IAC3EqjB,EAAS5S,MAAQ4S,EAAS5S,MAAM2C,OAAO1T,GAAKA,EAAEsH,MAAQ3E,KAAKgT,eAEvDgO,EAAS5S,QACZ7G,QAAQC,IAAI,QACZwZ,EAAS5S,MAAMzH,KAAK,CAClBhC,KAAM3E,KAAKiO,UAAUqD,GAAO3M,KAC5B0J,MAAOrO,KAAKiO,UAAUqD,GAAOjD,MAC7BC,KAAMA,KAGTtO,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GAAIsjB,OAAO5a,EAAK1I,IAAKqjB,GAErFhhB,KAAKiP,cAAc2R,eAAe5gB,KAAKoN,cA8BtC9N,UAAUqF,GACX,OAAI3E,KAAKoN,aAAezI,EACf,UAEA,GAKRrF,YAAYqF,GACb4C,QAAQC,IAAIxH,KAAKoN,aACjBpN,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEsH,MAAQ3E,KAAKoN,cACpB/P,EAAEsH,KAAOA,EACT3E,KAAK8M,UAAYzP,EAAEkI,YAMpBvF,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,WAgBjC,IAAK,IAAI5H,KAAQrG,KAAK8M,UAAW,CAChC,IAAIkU,EAAW3a,EAAKpF,WAGpB,MAAMqQ,EAAQtR,KAAKiO,UAAUsD,UAAUC,GAAQA,EAAKjM,SAAS,GAAG5H,IAAM0I,EAAK1I,IAC3EqjB,EAAS5S,MAAQ4S,EAAS5S,MAAM2C,OAAO1T,GAAKA,EAAEsH,MAAQ3E,KAAKgT,eAEvDgO,EAAS5S,QACZ7G,QAAQC,IAAI,QACZwZ,EAAS5S,MAAMzH,KAAK,CAClBhC,KAAMA,EACN0J,MAAOrO,KAAKiO,UAAUqD,GAAOjD,MAC7BC,KAAMtO,KAAKiO,UAAUqD,GAAOhD,QAG/BtO,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GAAIsjB,OAAO5a,EAAK1I,IAAKqjB,GAErFhhB,KAAKiP,cAAc2R,eAAejc,IAgBjCrF,cACDU,KAAKwS,aAAexS,KAAKwS,YACrBxS,KAAKwS,YAMRlT,cACDU,KAAKyS,QAAQ2B,cACbpU,KAAKgU,aAAaI,6CArQiBpF,SACRzC,SACCvH,SACCsG,SACTsI,EAAA/T,IAvGR2mB,GAAoBjnB,EAAAC,EAAA,CALhChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,mBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAsGkCiS,EACRzC,EACCvH,EACCsG,EACTsI,EAAA/T,KAvGR2mB,ICFb,IAAaK,GAAb,MAaEvnB,YAAoB2S,EACThD,EACAxE,EACA+B,GAHSxM,KAAAiS,aAAAA,EACTjS,KAAAiP,cAAAA,EACAjP,KAAAyK,eAAAA,EACAzK,KAAAwM,gBAAAA,EAXXxM,KAAAkO,YAA0B,GAE1BlO,KAAAiO,UAAwB,GAIxBjO,KAAAwS,aAAuB,EAOvBlT,WACDU,KAAKyK,eAAelF,SAASf,UAAY2B,IACnCA,IACLnG,KAAKkO,YAAc/H,EAAGZ,YAIvBvF,KAAKwM,gBAAgBd,cAAclH,UAAUF,IAC3CtE,KAAKyQ,gBAAkBnM,IAGzBtE,KAAKyS,QAAUzS,KAAKiP,cAAcvC,OAAOlI,UAAWF,IAClDtE,KAAKiO,UAAY3J,IAGnBtE,KAAK8mB,kBAAoB9mB,KAAKiP,cAAc3B,iBAAiB9I,UAAWF,IACtEtE,KAAKsN,iBAAmBhJ,IAG1BtE,KAAKgU,aAAehU,KAAKiP,cAAc7B,YAAY5I,UAAWF,IAC5DtE,KAAKoN,YAAc9I,IAIpBhF,oBAED,OADqBU,KAAKiO,UAAU8C,OAAO0Q,GAAaA,EAAU9c,OAAS3E,KAAKoN,aAC1D,GAAG7H,SAGxBjG,YAAYynB,GACb,IAAIzV,EAAQ,EACZtR,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEsH,MAAQ3E,KAAKoN,cACpBkE,EAAQjU,EAAEkI,SAASwd,QAAQgE,MAG5B/mB,KAAKiP,cAAcgR,oBAAoB3O,GAGtChS,gBAAgBynB,GACjB,IAAIzV,EAAQ,EAMZ,OALAtR,KAAKiO,UAAU5E,QAAQhM,IACjBA,EAAEsH,MAAQ3E,KAAKoN,cACpBkE,EAAQjU,EAAEkI,SAASwd,QAAQgE,MAGrB/mB,KAAKsN,kBAAoBgE,EAG/BhS,cACDU,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,UAAU8C,OAAO6V,GAAQA,EAAKjiB,MAAQ3E,KAAKoN,cAE5E,IAAK,IAAI/G,KAAQrG,KAAKkO,YAAa,CAIjC,IAAI8S,EAAW3a,EAAKpF,WACpB+f,EAAS5S,MAAQ4S,EAAS5S,MAAM2C,OAAO1T,GAAKA,EAAEsH,MAAQ3E,KAAKoN,aAE3DpN,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GACtDsjB,OAAO5a,EAAK1I,IACZqjB,GAGPhhB,KAAKiO,UAAU1P,QAAU,GAC3ByB,KAAKkN,aAAc,EACnBlN,KAAKiP,cAAcqS,eAAethB,KAAKkN,cAEvClN,KAAKiP,cAAc2R,eAAe5gB,KAAKiO,UAAU,GAAGtJ,MAIrDrF,YAAY0nB,GACbhnB,KAAKiO,UAAU5E,QAAQ+E,IACjBA,EAAMzJ,OAAS3E,KAAKoN,cACI,GAAzBgB,EAAM7I,SAAShH,OACjByB,KAAKinB,eAEL7Y,EAAM7I,SAAW6I,EAAM7I,SAASwL,OAAOgW,GAASA,EAAMppB,IAAMqpB,GAC5DhnB,KAAKiP,cAAc8R,SAAS/gB,KAAKiO,eAKpC,IAAI+S,EAAWhhB,KAAKknB,oBAAoBjmB,WAExC+f,EAAS5S,MAAQ4S,EAAS5S,MAAM2C,OAAO1T,GAAKA,EAAEsH,MAAQ3E,KAAKoN,aAE3DpN,KAAKyK,eAAeoG,sBAAsB7Q,KAAKyQ,gBAAgB9S,GACnDsjB,OAAOjhB,KAAKknB,oBAAoBvpB,IAChCqjB,GAGX1hB,gBAAgBynB,GACjB,GAAIA,EAAM5lB,OAAO,GAAGye,aAClB,MAAO,SAASE,KAAKiH,EAAM5lB,OAAO,GAAGye,cAAc,GAGnD,MADY,SAASE,KAAKiH,EAAM5lB,OAAO,GAAG4G,MAAM,GACnCwc,MAAM,EAAG,IAAM,MAI7BjlB,cACDU,KAAKyS,QAAQ2B,cACbpU,KAAK8mB,kBAAkB1S,cACvBpU,KAAKgU,aAAaI,cAGjB9U,cACDU,KAAKwS,aAAexS,KAAKwS,YACrBxS,KAAKwS,2CAnH0BxD,SACRzC,SACCvH,SACCsG,IAhBjBub,GAAoBtnB,EAAAC,EAAA,CANhChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,mBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAiBkCiS,EACRzC,EACCvH,EACCsG,KAhBjBub,4DCTb,IAAaM,GAAb,MAWE7nB,eAPA8nB,cAAgB,OAAOpnB,KAAK0H,KAAK2f,SAASrnB,KAAKkmB,MAAMvhB,MAAM2iB,MAC3DC,cAAgB,OAAOvnB,KAAK0H,KAAK2f,SAASrnB,KAAKkmB,MAAMvhB,MAAMoZ,MAS3Dze,cAbSC,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,0DAFU2oB,GAAmB5nB,EAAAC,EAAA,CAJ/BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,kBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,uCAEWoqB,ICIb,IAAaK,GAAb,MASEloB,YAAoB2S,EACVhD,GADUjP,KAAAiS,aAAAA,EACVjS,KAAAiP,cAAAA,EAPVjP,KAAAynB,WAAqB,EASrBznB,KAAA6lB,WAAqB7lB,KAAKiS,aAAa6T,gBAEvCxmB,WAQE,GALAU,KAAKiU,iBAAmBjU,KAAKiP,cAAcrB,gBAAgBpJ,UAAWF,IACpEtE,KAAK4N,gBAAkBtJ,IAIsB,GAA5CtE,KAAKiS,aAAa6T,gBAAgBvnB,OAAY,CACjCyB,KAAK6lB,WAAWtU,UAAUC,GAAQA,EAAK7T,KAAOqC,KAAK4N,iBAAmB4D,EAAK9H,QAAU1J,KAAKkmB,MAAMxc,QACjG,IACX1J,KAAKynB,WAAY,IAKvBnoB,cACEU,KAAKiU,iBAAiBG,cAIxB9U,SAASjC,EAAOsS,GACXtS,EAAEa,OAAO0nB,SACVre,QAAQC,IAAI,WACZxH,KAAKiS,aAAayV,cAAc/X,EAAQ3P,KAAK4N,mBAG7CrG,QAAQC,IAAI,aACZxH,KAAKiS,aAAa0V,iBAAiBhY,EAAQ3P,KAAK4N,iDAjClBoB,SACTzC,IAThBhN,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAa2R,EAAA9R,gCAFHmpB,GAAqBjoB,EAAAC,EAAA,CAJjChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,oBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mCAWkCiS,EACTzC,KAVdib,ICCb,IAAaI,GAAb,MAOEtoB,YAAoB2S,EACVhD,GADUjP,KAAAiS,aAAAA,EACVjS,KAAAiP,cAAAA,EAPDjP,KAAAkmB,MAAY,GAWrB5mB,WACEU,KAAKiU,iBAAmBjU,KAAKiP,cAAcrB,gBAAgBpJ,UAAWF,IACpEtE,KAAK4N,gBAAkBtJ,IAEzB,MAAMgN,EAAQtR,KAAKiS,aAAa4V,mBAAmBtW,UAAUC,GAAQA,EAAK7T,KAAOqC,KAAK4N,iBAAmC,IAAhB4D,EAAKK,QAC1GP,GAAS,IACXtR,KAAK0P,UAAY1P,KAAKiS,aAAa4V,mBAAmBvW,GAAe3B,QAGvEpI,QAAQC,IAAIxH,KAAK0P,WAGnBpQ,mBAAoBiI,QAAQC,IAAIxH,KAAK0P,WAAY1P,KAAKiS,aAAa6V,oBAAoB9nB,KAAK0P,UAAW,EAAG1P,KAAK4N,gDAjB7EoB,SACTzC,IAPhBhN,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAa2R,EAAA9R,gCAFHupB,GAAqBroB,EAAAC,EAAA,CALjChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,oBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mCAUkCiS,EACTzC,KARdqb,ICFb,IAAaG,GAAb,MAMCzoB,cALSU,KAAAkmB,MAAY,GAErBkB,cAAgB,OAAOpnB,KAAK0H,KAAK2f,SAASrnB,KAAKkmB,MAAMvhB,MAAM2iB,MAC3DC,cAAgB,OAAOvnB,KAAK0H,KAAK2f,SAASrnB,KAAKkmB,MAAMvhB,MAAMoZ,MAM3Dze,aACEiI,QAAQC,IAAIxH,KAAKkmB,MAAMra,SAVhBtM,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAa2R,EAAA9R,gCAFF0pB,GAAiBxoB,EAAAC,EAAA,CAL7BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,gBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,uEAGWgrB,ICCb,IAAaC,GAAb,MAOE1oB,YAAoB2S,EACVhD,GADUjP,KAAAiS,aAAAA,EACVjS,KAAAiP,cAAAA,EAPDjP,KAAAkmB,MAAY,GASrB5mB,WACEU,KAAKiU,iBAAmBjU,KAAKiP,cAAcrB,gBAAgBpJ,UAAWF,IACpEtE,KAAK4N,gBAAkBtJ,IAGzBiD,QAAQC,IAAIxH,KAAKiS,aAAa4V,oBAE9B,MAAMvW,EAAQtR,KAAKiS,aAAa4V,mBAAmBtW,UAAUC,GAAQA,EAAK7T,KAAOqC,KAAK4N,iBAAmC,IAAhB4D,EAAKK,QAC9GtK,QAAQC,IAAI8J,GACRA,GAAS,IACXtR,KAAK0P,UAAY1P,KAAKiS,aAAa4V,mBAAmBvW,GAAe3B,QAKzErQ,mBAAoBU,KAAKiS,aAAa6V,oBAAoB9nB,KAAK0P,UAAW,EAAG1P,KAAK4N,gDAlBhDoB,SACTzC,IAPhBhN,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAa2R,EAAA9R,gCAFH2pB,GAAkBzoB,EAAAC,EAAA,CAJ9BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,iBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mCASkCiS,EACTzC,KARdyb,ICCb,IAAaC,GAAb,MAWE3oB,YAAoB2S,EACVhD,GADUjP,KAAAiS,aAAAA,EACVjS,KAAAiP,cAAAA,EAXDjP,KAAAkmB,MAAY,GAGrBlmB,KAAAkoB,MAAe,QAIfd,cAAgB,OAAOpnB,KAAK0H,KAAK2f,SAASrnB,KAAKkmB,MAAMvhB,MAAM2iB,MAC3DC,cAAgB,OAAOvnB,KAAK0H,KAAK2f,SAASrnB,KAAKkmB,MAAMvhB,MAAMoZ,MAK3Dze,WACEU,KAAKiU,iBAAmBjU,KAAKiP,cAAcrB,gBAAgBpJ,UAAWF,IACpEtE,KAAK4N,gBAAkBtJ,IAEzB,MAAMgN,EAAQtR,KAAKiS,aAAakW,WAAW5W,UAAUC,GAAQA,EAAK7T,KAAOqC,KAAK4N,iBAC1E0D,GAAS,IACXtR,KAAKooB,KAAOpoB,KAAKiS,aAAakW,WAAW7W,GAAe3B,QAI5DrQ,cAAeU,KAAKiS,aAAaoW,YAAYroB,KAAKooB,KAAMpoB,KAAK4N,gDAb3BoB,SACTzC,IAXhBhN,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAa2R,EAAA9R,gCAFH4pB,GAAoB1oB,EAAAC,EAAA,CAJhChB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,mBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mCAakCiS,EACTzC,KAZd0b,ICAb,IAAaK,GAAb,MAWEhpB,YAAoB2S,EACVhD,GADUjP,KAAAiS,aAAAA,EACVjS,KAAAiP,cAAAA,EAXDjP,KAAAkmB,MAAY,GAKdlmB,KAAAuoB,YAAc,UAQrBjpB,WACEU,KAAKiU,iBAAmBjU,KAAKiP,cAAcrB,gBAAgBpJ,UAAWF,IACpEtE,KAAK4N,gBAAkBtJ,IAEzB,MAAMgN,EAAQtR,KAAKiS,aAAa4V,mBAAmBtW,UAAUC,GAAQA,EAAK7T,KAAOqC,KAAK4N,iBAAmC,IAAhB4D,EAAKK,QAC1GP,GAAS,IACXtR,KAAK0P,UAAY1P,KAAKiS,aAAa4V,mBAAmBvW,GAAe3B,QAEvE3P,KAAKuoB,YAAcvoB,KAAKqO,MAG1B/O,mBACEU,KAAKiS,aAAauW,UAAUxoB,KAAKuoB,aACjCvoB,KAAKiS,aAAa6V,oBAAoB9nB,KAAK0P,UAAW,EAAG1P,KAAK4N,gDAhB9BoB,SACTzC,IAXhBhN,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DACQe,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,qBAAa2R,EAAA9R,gCACLkB,EAAAC,EAAA,CAARhB,OAAAiB,EAAAimB,EAAAlnB,2DAHU8pB,GAAkB/oB,EAAAC,EAAA,CAL9BhB,OAAAiB,EAAAC,EAAAlB,CAAU,CACTmB,SAAU,iBACVC,SAAAL,EAAAM,EAAAjD,EAAA,SAAAG,mEAckCiS,EACTzC,KAZd+b,qBC6Ib,IAAaG,GAAb,QAAaA,GAASlpB,EAAAC,EAAA,CApFrBhB,OAAAiB,EAAAuV,EAAAxW,CAAS,CACRkqB,aAAc,CACfrT,GAAcgB,GAAchX,EAAmBmL,EAC/CyU,GACApU,EACAyQ,GACAyI,GAGAgB,GACAY,GACAY,GAEAC,GACAK,GACA7U,EACA6B,EACAmK,GACAU,GACAiK,GAAAnpB,EACAie,GACA0J,GACAK,GACAI,GACAG,GACAC,GACAC,GACA7J,GACAkK,IAGCrT,QAAS,CAEVoE,EAAA7Z,EAAU0V,QAAQ,CAAC0T,QAAS,qCAC5BC,EAAArpB,EACAuV,GACAnQ,EAAAvG,EACAyqB,EAAAjpB,EACAkpB,EAAAvpB,EACAslB,EAAAtlB,EACAwpB,EAAAxpB,EACAoL,EAAAhN,EAAYsX,UACZ+T,EAAAzpB,EACA0pB,EAAA1pB,EACA2pB,EAAA3pB,EACAoU,EAAAvV,EACA+qB,EAAA5pB,EACA6pB,EAAA7pB,EACA8pB,EAAA9pB,EACA+pB,EAAA/pB,EACAgqB,EAAAhqB,EACA8O,EAAA9O,EACAoL,EAAApL,EAAgB0V,UAChB/E,EAAAsZ,EACAtZ,EAAA9S,EACAqsB,EAAAlqB,EACAoL,EAAA/K,EAAiBqV,UACjByU,EAAA9pB,EACA+pB,GAAApqB,EACA0kB,GAAArkB,EACAgqB,GAAArqB,EACA6b,GAAAxb,EACAiqB,GAAAtqB,GAEC4V,UAAW,CACZhT,EACA,CACE2nB,QAASnlB,EAAApF,EACTwqB,OAAO,EACPC,SAAUhH,IAEZ,CACE8G,QAASnlB,EAAApF,EACTwqB,OAAO,EACPC,SAAUtG,IAEZ,CACEoG,QAASJ,EAAAnqB,EACT0qB,SAAUvoB,EAAYI,WAGvBooB,UAAW,CAAC9U,IACZ+U,gBAAiB,CAAC9O,GAA2BmC,GAAgCO,GAA6BU,GAA8BN,OAE7HqK,ICjJT9mB,EAAYC,YACdpD,OAAAiB,EAAA4qB,GAAA7rB,GAGFA,OAAA8rB,EAAA9qB,EAAAhB,GAAyB+rB,gBAAgB9B,IACtC+B,MAAMnH,GAAO9b,QAAQJ,MAAMkc,uCCZ9BzmB,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,ukKCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA","file":"main-es2015.c09ae7fd38b21cf1d232.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select(file)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  -webkit-transition: width 0.1s ease;\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  height: 100vh;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: -webkit-inline-box;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  -webkit-transition: all 0.4s ease;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div>\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect (click)=\\\"deleteFromGroup(color)\\\" class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea  [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\n.card-buttons {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-transition: opacity 0.3s ease;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n          flex-grow: 1;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- <div *ngFor = \\\"let icon of groupIcon\\\">  -->\\r\\n\\t\\t\\t\\t<!-- <div *ngIf = \\\"icon.groupName == activeGroup\\\"> -->\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<!-- <option>------</option> -->\\r\\n\\t\\t\\t<option *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-house-damage\\\">&#xf6f1; house-damage </option>\\r\\n\\t\\t\\t<option value=\\\"fa-car\\\">&#xf1b9; car</option> -->\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-tree\\\">&#xf1bb; tree</option> -->\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<!--<button mat-menu-item (click)=saveFile(0,1)>Export to Design Safe?</button>-->\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport * as EXIF from 'exif-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tconsole.log(resp)\r\n\t\tthis.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t  console.log(error)\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  //An alternate function for importing images with no GPS data. A feature is created elsewhere, and the image is added to the feature\r\n  //Inputs:\r\n  //projectId: Id number of current project\r\n  //features: A pre-created features with user-defined or zeroed out gps data\r\n  //file: A Tapis Remote File containing the image to be imported\r\n  importImage(projectId: number, feature: Feature, file: RemoteFile): void {\r\n\tlet featureId = feature.id\r\n\tlet payload = {system_id: file.system, path: file.path};\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/assets/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\t//console.log(resp)\r\n\t\tthis.getFeatures(projectId)\r\n\t\tconsole.log(this.features)\r\n\t\tEXIF.getData(this.features[0].assets[0].path, this.outputEXIF())\r\n\t\t//EXIF.getData(\"data:image/jpeg;base64https://agave.designsafe-ci.org/geo/v2/assets/327/ea9a22cd-d3fb-433e-8410-3ebed972bd73.jpeg\", this.outputEXIF())\r\n\t\t//From here get GPS data with Exif\r\n\t});\r\n  }\r\n\r\n  outputEXIF(){\r\n\tconsole.log(EXIF.getAllTags(this))\r\n\tconsole.log(EXIF.getTag(this, \"GPSLatitude\"))\r\n\tconsole.log(EXIF.getTag(this, \"GPSLongitude\"))\r\n  }\r\n\r\n  //Creates a new feature from an uploaded locally created feature\r\n  uploadNewFeature(projectId: number, feature:Feature, file: RemoteFile): void {\r\n\tlet payload = feature;\r\n\tlet response\r\n\t//Calls the addFeatureAsset route in GeoAPI, resp is a list of features\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId)\r\n\t\tresponse = new Feature(resp[0])\r\n\t\tthis.importImage(projectId, response, file)\r\n\t});\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    console.log(\"HAHAHA NOPE\")\r\n  });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      //below code from here to next comment does nothing\r\n      // const p = new Project();\r\n      // p.name = 'test';\r\n      // p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    console.log(this._activeProject)\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProjectsService } from './projects.service';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  \r\n\r\n  private activeGroup\r\n  private groupList\r\n  private featureList\r\n  private selectedProject\r\n  private selectedFeatureID\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService) {}\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);/*console.log(\"AYA\"); console.log(this._forms); console.log(current)*/});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  //Inputs:\r\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\r\n  //This method accesses group services to retrive the current group's icon as well\r\n  saveStyes(selectedColor:string){\r\n\t  //TODO: Move these subscriptions to ngOnInit, and figure out why ngOnInit isn't firing\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t\tthis.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\tthis.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureId.subscribe(next => {\r\n\t\tconsole.log(next)\r\n\t\tthis.selectedFeatureID = next\r\n\t})\r\n\t\r\n\r\n\tlet icon:string\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name = this.activeGroup) {\r\n\t\t\tconsole.log(group.features)\r\n\t\t\ticon = group.icon//.substring(3)\r\n\t\t\tconsole.log(icon)\r\n\r\n\t\t\tlet tempGroup = [{\r\n\t\t\t\tname: group.name,\r\n\t\t\t\tcolor: group.color,\r\n\t\t\t\ticon: group.icon\r\n\t\t\t  }]\r\n\t\t\t\r\n\t\t\tlet payload = {\r\n\t\t\t\tgroup: tempGroup,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\tcolor: selectedColor\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, this.selectedFeatureID ,payload)\r\n\t\t}\r\n\t});\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\"};\r\n  tagData = []\r\n  checkedOptions = []\r\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  notebook = []; //Var for storing note tags\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.tagData[index].label = tag.label;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tagData.push(tag);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\ngetTags(): tags[]{\r\n\treturn this.tagData;\r\n}\r\n\r\ndeleteTag(gName: string, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n    if (index > -1) {\r\n      // delete this.exampleNote[index];\r\n      this.tagData.splice(index, 1);\r\n    }\r\n}\r\n\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.tagData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object, id: number): void {\r\n\tlet option = { key: opt['key'], label: opt['label'], id: id }\r\n\tthis.checkedOptions.push(option)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ndeleteCheckedOpt(opt:object, id:number): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id)\r\n\tthis.checkedOptions.splice(index,1)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ngetCheckedOpt(): any[]{\r\n\treturn this.checkedOptions;\r\n}\r\n// renameTagOpt(gName:string, opt:object, tag: tags): void {\r\n// \tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tag.label);\r\n// \tif(index >-1) {\r\n// \t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n// \t\tif (ind > -1){\r\n// \t\t\tconsole.log(opt)\r\n// \t\t\tconsole.log(this.tagData[index].options[ind]);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nradioOptions = []\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number, feature: number){ \r\n\tconst index = this.radioOptions.findIndex(item => item['id'] === feature && item['compId'] === componentId);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.radioOptions[index]['option'] = selection;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\tlet rOption = {option: selection, id: feature, compId: componentId} \r\n\t\tthis.radioOptions.push(rOption);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n\t// this.chosenTag[componentId] = {option: selection, id:id}; \r\n}\r\n\r\ngetSelectedRadio(): any[] { return this.radioOptions; }\r\n\r\n//Notes tag functions\r\nupdateNotes(change, feature: number){\r\n\tconst index = this.radioOptions.findIndex(item => item['id'] === feature);\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.notebook[index]['option'] = change\r\n\t}\r\n\telse {\r\n\t\tlet rOption = {option: change, id: feature} \r\n\t\tthis.notebook.push(rOption);\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\n\r\ngetNotes(): any[]{ return this.notebook }\r\n}\r\n\r\n\r\n\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>,\r\n\tfeature: string | number\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature } from 'src/app/models/models';\r\nimport { feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n  groupList: Array<any>;\r\n  groups$: Subscription;\r\n  tempGroup: Array<Feature>;\r\n\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t  });\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t\t  \r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: this.formType,\r\n\t\t\t\tgroupName: this.formName,\r\n\t\t\t\tlabel: this.formLabel,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: [],\r\n\t\t\t\tfeature: feat.id\r\n\t\t\t}\r\n\t\t\tthis.openOption[this.formLabel] = false;\r\n\r\n\t\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\t\t\tlet myOpts = [];\r\n\t\t\t\tfor (const opt of this.formOptions) {\r\n\t\t\t\t  myOpts.push({\r\n\t\t\t\t\tkey: opt[0],\r\n\t\t\t\t\tlabel: opt,\r\n\t\t\t\t\t// image:\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tformItem.options = this.formOptions;\r\n\t\t\t  }\r\n\t\t\t  console.log(formItem)\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\t  this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t}\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t// }\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\tconsole.log(this.tagList)\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\t// console.log(this.payload);\r\n\t// this.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n\t// console.log(this.form)\r\n\t// this.formsService.saveTag(this.activeGroup, this.form.value, this.payload)\r\n\tconsole.log(this.tagList)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string) {\r\n    return this.tapis.filesList({systemId: system, filePath: path});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(file: RemoteFile) {\r\n\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t  this.addSelectedFile(file);\r\n\t}\r\n\telse{\r\n\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  addSelectedFile(file: RemoteFile) {\r\n\tif (this.selectedFiles.has(file.path)) {\r\n\t  this.selectedFiles.delete(file.path);\r\n\t} else {\r\n\t  this.selectedFiles.set(file.path, file);\r\n\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport * as EXIF from 'exif-js';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6000; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\t// this.timerSubscription = this.timer.subscribe( () => {\r\n\t//   this.reloadFeatures();\r\n\t// });\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\t//if (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t\tif (files != null) {\r\n\t\t\tfiles.forEach( (file) => {\r\n\t\t\t\tthis.geoDataService.uploadNewFeature(this.selectedProject.id, this.createBlankFeature(), file)\r\n\t\t\t})};\r\n\t\t}\r\n\t);\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  outputEXIF(){\r\n\tconsole.log(EXIF.getAllTags(this))\r\n  }\r\n\r\n  //Creates a feature with a long/lat value of 0,0 and no associated image.\r\n  createBlankFeature() {\r\n\tlet blankFeature:Feature = {\r\n\t\t\"type\": \"Feature\",\r\n\t\t\"geometry\": {\r\n\t\t  \"type\": \"Point\",\r\n\t\t  \"coordinates\": [0, 0]\r\n\t\t},\r\n\t\t\"properties\": {\r\n\t\t}\r\n\t  }\r\n\treturn blankFeature\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\tconsole.log(\"GOT HERE- PLS\")\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t\tconsole.log(\"loading should work?\")\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\tconsole.log(\"GOT HERE- NO PROJ FOUND\")\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t\tconsole.log(\"This didn't work\")\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false;\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t}\r\n\tthis.status = !this.status;\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\t  const geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n\r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t//   if (fc) {\r\n\t// \tthis.featureList = fc.features;\r\n\t//   }\r\n\t// });\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\t  console.log(this.tempGroup)\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tconsole.log(this.groupList)\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\tthis.dialog.open(template);\r\n\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: this.groupList[index].name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t}\r\n\r\n\r\n\t//   this.currentIcon = icon;\r\n\t//   this.groupList.forEach(e => {\r\n\t// \tif (e.name == this.selectedGroup) {\r\n\t// \t  e.icon = icon;\r\n\t// \t}\r\n\t//   });\r\n\t//   this.groupsService.addGroup(this.groupList);\r\n\t//   for (let feat of this.featureList) {\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tlet groupProp = this.tempGroup\r\n\t// \tconsole.log(featProp)\r\n\t// \tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: featProp.name,\r\n\t// \t\t  color: featProp.color,\r\n\t// \t\t  icon: icon\r\n\t// \t\t});\r\n\t// \t  }\r\n\t// \tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t// \tthis.groupsService.setActiveGroup(this.selectedGroup);\r\n\t// }\r\n\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: this.groupList[index].icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n\t}\r\n\t// console.log(this.selectedProject.id)\r\n\t// console.log(this.tempGroup[0])\r\n\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures().properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures().id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n    // console.log(this.field)\r\n    // console.log(this.form)\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n      const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\r\n      if (index > -1){\r\n        this.isChecked = true\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeFeatureId$.unsubscribe();\r\n    }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.formsService.addCheckedOpt(option, this.activeFeatureId);\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option, this.activeFeatureId);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n    \r\n    console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ console.log(this.chosenTag); this.formsService.updateSelectedRadio(this.chosenTag, 2, this.activeFeatureId);}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  public chosenTag: string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    console.log(this.formsService.getSelectedRadio() )\r\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\r\n    console.log(index)\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n  // }\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 0, this.activeFeatureId);}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n  notes:string = \"notes\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\r\n    if (index > -1){\r\n      this.note = this.formsService.getNotes()[index]['option']\r\n    }\r\n  }\r\n\r\n  updateNotes(){ this.formsService.updateNotes(this.note, this.activeFeatureId); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 1);\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n    this.chosenColor = this.color  \r\n  }\r\n\r\n  updateCheckedTag(){ \r\n    this.formsService.saveStyes(this.chosenColor)\r\n    this.formsService.updateSelectedRadio(this.chosenTag, 1, this.activeFeatureId); }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteTag(activeGroup, tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div> <!-- rename button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> <!-- three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"tag.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <!-- (click)=\\\"formsService.saveTag(activeGroup, tag, tag.label)\\\" -->\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}