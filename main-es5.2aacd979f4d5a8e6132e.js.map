{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/environments/environmentType.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/services/scroll.service.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NotFoundComponent","_classCallCheck","this","_createClass","key","value","tslib_es6","a","Object","core","n","selector","template","EnvironmentType","Group","AssetFilters","bbox","assetType","Set","has","add","Project","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","length","asset_type","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","C","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","console","log","file","form","FormData","append","files","system","path","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","c","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_this13","_this14","data","prom","proj","put","getProjects","tap","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","_itemsSelected","itemsSelected","groupList","featureList","tempGroupList","_iterator","s","_step","done","group","_step2","_iterator2","_createForOfIteratorHelper","color","icon","err","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","tagData","checkedOptions","chosenTag","option","notebook","radioOptions","selectedProject","selectedFeatureID","selectedFeature","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","undefined","updateFormItem","selectedColor","style","currentID","checkDefault","faIcon","updateFeatureProperty","groupObject","filter","opt","formObj","finalArray","gName","tag","tLabel","index","findIndex","item","splice","ind","selection","componentId","compId","rOption","change","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","_this30","groups$","formType","formName","formLabel","formValue","formRequired","event","target","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","_this31","_step3","_iterator3","_step4","myOpts","_iterator4","addForm","saveTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","tagList","getTags","_this32","activeGroup$","activeFeatureId$","formGroup$","getRawValue","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this33","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this34","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","d","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","_this35","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","noPreviousSelections","ext","getFileExtension","includes","split","pop","offset","limit","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","tmp","date","File","lastModified","valueOf","msg","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","_ModalFileBrowserComponent_","ModalFileBrowserComponent_1","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","_this37","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","lastSystem","currentDirectory","lastFile","init","browse","pth","getFiles","_this38","hasMoreFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","shiftKey","selectFilesShiftClick","checkIfSelectable","addSelectedFile","selectShift","firstFileIndex","Array","from","close","_step5","count","_iterator5","clear","addRangeFiles","lastFileIndex","again","maxIndex","max","i","min","R","modal_download_selector_component_ModalDownloadSelectorComponent","_ModalDownloadSelectorComponent_","ModalDownloadSelectorComponent_1","passbackData","fileExtension","_this39","downloadSelectForm","Name","Extension","_ref3","_this40","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","p","create","modal_share_project_component_ModalShareProjectComponent","_this41","projShareForm","activeProj","projectUsers","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","_this42","confirm","uuid","update","B","args","ScrollService","scrollRestored","scrollPosition","newPos","documentElement","scrollTop","scroll","top","control_bar_component_ControlBarComponent","filesService","scrollService","REFRESHTIME","LatLng","liveRefresh","timer","interval","_this43","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","setUnselectAll","setItemsSelected","timerSubscription","reloadFeatures","setLiveRefresh","_this46","afterClosed","importFileFromTapis","startRefreshTimer","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","_step6","_iterator6","featProp","Number","addTempGroup","setShowGroup","_this48","setScrollRestored","scrollPos","setScrollPosition","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","content","forExport","CSVHolder","JSONHolder","projID","element","coordinates","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","download","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","status","reload","message","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this51","projectsExist","imagesExist","featureListScroll","slice","groupExist","_this52","setActiveFeatureId","_this53","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this54","featurePath","_this55","v","geoData","deleteFeature","_iterator7","_step7","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","_this59","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","_this60","what","_this62","_step8","_iterator8","_iterator9","_step9","saveStyles","_iterator10","_step10","_loop","SelectImageComponent","_this65","activeFeatureNum$","_this66","asset","_this69","_step11","_iterator11","assetId","deleteGroup","getActiveFeatures","FormFieldsComponent","controls","valid","FormCheckBoxComponent","isChecked","_this71","addCheckedOpt","deleteCheckedOpt","FormDropDownComponent","_this72","getSelectedRadio","updateSelectedRadio","FormFileComponent","FormRadioComponent","_this73","FormTextBoxComponent","notes","_this74","getNotes","note","updateNotes","FormColorComponent","chosenColor","_this75","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule"],"mappings":"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","file":"main-es5.2aacd979f4d5a8e6132e.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\" (dblclick)=\\\"toRoot()\\\">\\r\\n\\t\\t<i class=\\\"fas fa-folder\\\"></i>\\r\\n\\t\\t<span > Home </span>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList; let fileIndex = index\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select($event, file, fileIndex)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"basic\\\" (click)=\\\"selectAll()\\\">Select all</button>\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\" (keyup.enter)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: flex;\\n  height: 100vh;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div *ngIf=\\\"tempGroup.length === 1\\\">\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div *ngIf=\\\"tempGroup.length > 1\\\">\\r\\n\\t\\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\" (click)=\\\"deleteFromGroup(color)\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect  class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea  [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.card-buttons {\\n  align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  transition: 0.3s ease;\\n  align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: flex;\\n  justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- <div *ngFor = \\\"let icon of groupIcon\\\">  -->\\r\\n\\t\\t\\t\\t<!-- <div *ngIf = \\\"icon.groupName == activeGroup\\\"> -->\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<!-- <option>------</option> -->\\r\\n\\t\\t\\t<option *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-house-damage\\\">&#xf6f1; house-damage </option>\\r\\n\\t\\t\\t<option value=\\\"fa-car\\\">&#xf1b9; car</option> -->\\r\\n\\t\\t\\t<!-- <option value=\\\"fa-tree\\\">&#xf1bb; tree</option> -->\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\t\\r\\n\\t<button mat-raised-button class=\\\"button-spacing\\\" [disabled]=\\\"!itemsSelected\\\" (click)=\\\"clearAll()\\\">Clear Selected</button>\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId);\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    console.log(\"HAHAHA NOPE\")\r\n  });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      //below code from here to next comment does nothing\r\n      // const p = new Project();\r\n      // p.name = 'test';\r\n      // p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    console.log(this._activeProject)\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared. \r\n  // Need to find a way to unsubscribe a project for one person without affecting the others.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  private _itemsSelected: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public itemsSelected: Observable<boolean> = this._itemsSelected.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n\tthis._itemsSelected.next(!select);\r\n  }\r\n\r\n  setItemsSelected(select: boolean): void {\r\n\tthis._itemsSelected.next(select)\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProjectsService } from './projects.service';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  \r\n\r\n  private activeGroup\r\n  private groupList\r\n  private featureList\r\n  private selectedProject\r\n  private selectedFeatureID\r\n  private selectedFeature\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService) {\r\n\r\n\t\t\t\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t\t\t\t\tthis.activeGroup = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.groups.subscribe((next) => {\r\n\t\t\t\t\tthis.groupList = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\t\t\t\tthis.selectedProject = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.activeFeatureId.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeatureID = next\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.groupsService.activeFeature.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeature = next\r\n\t\t\t\t})\r\n\t\t\t  }\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);/*console.log(\"AYA\"); console.log(this._forms); console.log(current)*/});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  checkDefault(selectedColor:string){\r\n\tif(selectedColor === \"default\") {\r\n\t\ttry {\r\n\t\t\tselectedColor = this.selectedFeature.properties.style.color\r\n\t\t} catch (error) {\r\n\t\t\tselectedColor = \"#00C8FF\"\r\n\t\t}\r\n\t}\r\n\treturn selectedColor\r\n  }\r\n\r\n  //Inputs:\r\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\r\n  //This method accesses group services to retrive the current group's icon as well\r\n  saveStyles(selectedColor:string, currentID:number){\r\n\tlet icon:string\r\n\tlet payload\r\n\r\n\t//A check to see if the color isn't supposed to be changed\r\n\tselectedColor = this.checkDefault(selectedColor)\r\n\r\n\t//Cycles through each group until it finds one that matches the active group\r\n\tthis.groupList.forEach(group => {\r\n\t\tif ((group.name === this.activeGroup)) {\r\n\t\t\ticon = group.icon\r\n\r\n\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\tlet tempGroup = [{\r\n\t\t\t\tname: group.name,\r\n\t\t\t\tcolor: group.color,\r\n\t\t\t\ticon: group.icon\r\n\t\t\t}]\r\n\t\t\t\r\n\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\tpayload = {\r\n\t\t\t\tgroup: tempGroup,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\tcolor: selectedColor\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t//Finally, sends the payload and projectID to GeoAPI to update the feature\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, currentID ,payload)\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\"};\r\n  tagData = []\r\n  checkedOptions = []\r\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  notebook = []; //Var for storing note tags\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.tagData[index].label = tag.label;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tagData.push(tag);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\ngetTags(): tags[]{\r\n\treturn this.tagData;\r\n}\r\n\r\ndeleteTag(gName: string, tLabel: string): void{\r\n    for (let tag in this.tagData){\r\n\t\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n\t\t// if(tag['groupName'] === gName && tag['label'] === tLabel)\r\n\t\tconsole.log(tag)\r\n\t\tif (index > -1) {\r\n\t\t// delete this.exampleNote[index];\r\n\t\tthis.tagData.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tLabel);\r\n\t\t// if(tag['groupName'] === gName && tag['label'] === tLabel)\r\n\t\tif (index > -1) {\r\n\t\t// delete this.exampleNote[index];\r\n\t\tthis.tagData.splice(index, 1);\r\n\t\t}\r\n}\r\n\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.tagData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.tagData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object, id: number): void {\r\n\tlet option = { key: opt['key'], label: opt['label'], id: id }\r\n\tthis.checkedOptions.push(option)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ndeleteCheckedOpt(opt:object, id:number): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id)\r\n\tthis.checkedOptions.splice(index,1)\r\n\tconsole.log(this.checkedOptions)\r\n}\r\n\r\ngetCheckedOpt(): any[]{\r\n\treturn this.checkedOptions;\r\n}\r\n// renameTagOpt(gName:string, opt:object, tag: tags): void {\r\n// \tconst index = this.tagData.findIndex(item => item.groupName === gName  && item.label === tag.label);\r\n// \tif(index >-1) {\r\n// \t\tconst ind = this.tagData[index].options.findIndex(item => item === opt)\r\n// \t\tif (ind > -1){\r\n// \t\t\tconsole.log(opt)\r\n// \t\t\tconsole.log(this.tagData[index].options[ind]);\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nradioOptions = []\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number, feature: number){ \r\n\tconst index = this.radioOptions.findIndex(item => item['id'] === feature && item['compId'] === componentId);\r\n\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.radioOptions[index]['option'] = selection;\r\n\t\t// this.tagData[index].options = tag.options;\r\n\t}\r\n\telse {\r\n\t\tlet rOption = {option: selection, id: feature, compId: componentId} \r\n\t\tthis.radioOptions.push(rOption);\r\n\t\t// console.log(\"Tag data:\")\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n\t// this.chosenTag[componentId] = {option: selection, id:id}; \r\n}\r\n\r\ngetSelectedRadio(): any[] { return this.radioOptions; }\r\n\r\n//Notes tag functions\r\nupdateNotes(change, feature: number){\r\n\tconst index = this.radioOptions.findIndex(item => item['id'] === feature);\r\n\tif (index > -1) {\r\n\t\t// console.log(\"IT WORKED\")\r\n\t\tthis.notebook[index]['option'] = change\r\n\t}\r\n\telse {\r\n\t\tlet rOption = {option: change, id: feature} \r\n\t\tthis.notebook.push(rOption);\r\n\t\t// console.log(this.tagData)\r\n\t}\r\n}\r\n\r\ngetNotes(): any[]{ return this.notebook }\r\n}\r\n\r\n\r\n\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>,\r\n\tfeature: string | number\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature } from 'src/app/models/models';\r\nimport { feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n  groupList: Array<any>;\r\n  groups$: Subscription;\r\n  tempGroup: Array<Feature>;\r\n\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t  });\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t\t  \r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: this.formType,\r\n\t\t\t\tgroupName: this.formName,\r\n\t\t\t\tlabel: this.formLabel,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: [],\r\n\t\t\t\tfeature: feat.id\r\n\t\t\t}\r\n\t\t\tthis.openOption[this.formLabel] = false;\r\n\r\n\t\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\t\t\tlet myOpts = [];\r\n\t\t\t\tfor (const opt of this.formOptions) {\r\n\t\t\t\t  myOpts.push({\r\n\t\t\t\t\tkey: opt[0],\r\n\t\t\t\t\tlabel: opt,\r\n\t\t\t\t\t// image:\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tformItem.options = this.formOptions;\r\n\t\t\t  }\r\n\t\t\t  console.log(formItem)\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\t  this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t}\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t// }\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\tconsole.log(this.tagList)\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\t// console.log(this.payload);\r\n\t// this.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n\t// console.log(this.form)\r\n\t// this.formsService.saveTag(this.activeGroup, this.form.value, this.payload)\r\n\tconsole.log(this.tagList)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { SystemSummary} from 'ng-tapis';\r\n//import { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n  public lastSystem:SystemSummary //The last filesystem the user was browsing\r\n  public lastFile:RemoteFile; //The last directory the user was browsing\r\n  public noPreviousSelections = true\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string, offset: number, limit: number) {\r\n    return this.tapis.filesList({systemId: system, filePath: path, offset, limit});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  private offset:number;\r\n  public firstFileIndex: number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.tapisFilesService.lastSystem\r\n\r\n\t//If the user has already navigated to a folder, restore those options\r\n\tthis.currentDirectory = this.tapisFilesService.lastFile\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\t//If the user hasn't yet opened the file browser, set the last file to an init file.\r\n\tif ( this.tapisFilesService.noPreviousSelections) {\r\n\t\tthis.selectedSystem = this.myDataSystem;\r\n\t\tthis.tapisFilesService.lastFile = init\r\n\t\tthis.tapisFilesService.noPreviousSelections = false\r\n\t}\r\n\tthis.browse(this.tapisFilesService.lastFile);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.selectedSystem = system\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tthis.selectedSystem = this.selectedSystem //Self-assignment keeps the system name from disappearing while browsing subfolders\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\tthis.tapisFilesService.lastFile = file //Updates the last directory visted\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  toRoot() {\r\n\tlet pth;\r\n\tthis.selectedSystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: this.selectedSystem.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init)\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalFileBrowserComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalFileBrowserComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(event: any, file: RemoteFile, index: number) {\r\n\t  console.log(file)\r\n\tif (event.shiftKey) {\r\n\t\tthis.selectFilesShiftClick(index, file);\r\n\t  }\r\n\telse {\r\n\t\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t\t\tthis.addSelectedFile(file, index);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  selectFilesShiftClick(index: number, file: RemoteFile) {\r\n    // this.selectedFiles.clear();\r\n    this.selectShift(index, file);\r\n  }\r\n\r\n\r\n  addSelectedFile(file: RemoteFile, index: number) {\r\n\tif (index != -1) {\r\n\t\tthis.firstFileIndex = index;\r\n\t  }\r\n\r\n\tif(this.tapisFilesService.checkIfSelectable(file)){\r\n\t\tif (this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.selectedFiles.delete(file.path);\r\n\t\t} else {\r\n\t\t\tthis.selectedFiles.set(file.path, file);\r\n\t\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t\t}\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.dialogRef.close()\r\n  }\r\n\r\n  selectAll(){\r\n\t  let indexTmp = -1\r\n\t  let count = 0\r\n\t  for(let file of this.filesList){\r\n\t\tif (! this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.select(\"\",file,indexTmp)\r\n\t\t\tcount += 1\r\n\t\t}\r\n\t  }\r\n\t  console.log(count)\r\n\t  if (count == 1){\r\n\t\tthis.selectedFiles.clear();\r\n\t  }\r\n  }\r\n\r\n  selectShift(index: number, file: RemoteFile) {\r\n    if (this.firstFileIndex != undefined && this.firstFileIndex != index) {\r\n      this.addRangeFiles(this.firstFileIndex, index, true);\r\n    } else {\r\n      this.addSelectedFile(file, index);\r\n    }\r\n  }\r\n\r\n  addRangeFiles(firstFileIndex: number, lastFileIndex: number, again: boolean) {\r\n    let maxIndex = Math.max(firstFileIndex, lastFileIndex);\r\n    let minIndex = Math.min(firstFileIndex, lastFileIndex);\r\n\r\n    for (let i = minIndex; i < maxIndex + 1; ++i) {\r\n      this.addSelectedFile(this.filesList[i], -1);\r\n    }\r\n\r\n    if (again) {\r\n      this.addSelectedFile(this.filesList[firstFileIndex], -1);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n\t\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n  private offset:number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalDownloadSelectorComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalDownloadSelectorComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollService {\r\n\r\n  constructor() { }\r\n\r\n  public scrollRestored:boolean = true //if true, the scroll was restored to the proper place\r\n  public scrollPosition:number = 0\r\n\r\n  setScrollRestored(change:boolean) { this.scrollRestored = change; }\r\n\r\n  setScrollPosition(newPos:number) { this.scrollPosition = document.documentElement.scrollTop; }\r\n\r\n  scroll() {\r\n    //Attempts to scroll to the specified location\r\n\t\tdocument.documentElement.scroll({top: this.scrollPosition})\r\n\t\t//if it reaches there, marks the check as complete\r\n\t\tif(document.documentElement.scrollTop == this.scrollPosition){\r\n\t\t\tthis.scrollRestored = false\r\n\t\t}\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n  itemsSelected:boolean = false;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.itemsSelected.subscribe((next) => {\r\n\t\tthis.itemsSelected = next;\r\n\t  })\r\n\r\n\t  //this.setLiveRefresh(true)\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\t// this.timerSubscription = this.timer.subscribe( () => {\r\n\t//   this.reloadFeatures();\r\n\t// });\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  clearAll(){\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.groupsService.setItemsSelected(false);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  //Similar to setLiveRefresh, but it runs the time out once and then unsubscribes from the timer\r\n  startRefreshTimer(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); this.setLiveRefresh(false)}) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files); this.startRefreshTimer(true)}\r\n\t});\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tif( !this.showSidebar) {\r\n\t\tlet scrollPos = document.documentElement.scrollTop\r\n\t\tthis.scrollService.setScrollPosition(scrollPos)\r\n\t} else {\r\n\t\tthis.scrollService.setScrollRestored(true)\r\n\t}\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {AfterViewChecked, Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit, AfterViewChecked {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService) { }\r\n\r\n  \r\n\r\n  ngAfterViewChecked() {\r\n\t  //console.log(\"How often does this fire?\")\r\n\t  //console.log(this.scrollService.scrollRestored)\r\n\tif ( this.scrollService.scrollRestored ) {\r\n\t\tthis.scrollService.scroll()\r\n\t\tthis.scrollService.setScrollPosition(document.documentElement.scrollTop)\r\n\t}\r\n  }\r\n\r\n  ngOnInit() {\r\n\t//console.log(\"GOT HERE- PLS\")\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t\t//console.log(\"loading should work?\")\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\t//console.log(\"GOT HERE- NO PROJ FOUND\")\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\r\n\t//I think doing a more natural refresh in here will cause a dynamic reload\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t\t//console.log(\"This didn't work\")\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormsService, tags } from 'src/app/services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false; //Controls the whether or not an image box is selected or not\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private formsService: FormsService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t  this.tempGroup = []\r\n\t}\r\n\tthis.status = !this.status;\r\n\tif(this.status) {\r\n\t\tthis.groupsService.setItemsSelected(this.status)\r\n\t}\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\t  const geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\t  console.log(this.feature)\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\tconsole.log(this.tagList)\r\n\t\r\n\tfor (let tag of this.tagList){\r\n\t\tif (tag.feature === this.tempGroup[0].id && tag.groupName === name){\r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: tag.type,\r\n\t\t\t\tgroupName: name,\r\n\t\t\t\tlabel: tag.label,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: tag.options,\r\n\t\t\t\tfeature: this.feature.id\r\n\t\t\t}\r\n\t\t\tthis.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(name)\r\n\tconsole.log(featProp)\r\n\tconsole.log(this.tempGroup[0].id)\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n \r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\t// {\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t// \"unicode\": \"&#xf1bb; tree\"},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t//   if (fc) {\r\n\t// \tthis.featureList = fc.features;\r\n\t//   }\r\n\t// });\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\t  console.log(this.tempGroup)\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tconsole.log(this.groupList)\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\tthis.dialog.open(template);\r\n\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tlet index = 0\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t console.log(feat.id)/*\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tindex = this.groupList.findIndex(item => item.features[index].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: this.groupList[index].name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );*/\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t\tthis.formsService.saveStyles(\"default\", Number(feat.id))\r\n\t}\r\n\r\n\r\n\t//   this.currentIcon = icon;\r\n\t//   this.groupList.forEach(e => {\r\n\t// \tif (e.name == this.selectedGroup) {\r\n\t// \t  e.icon = icon;\r\n\t// \t}\r\n\t//   });\r\n\t//   this.groupsService.addGroup(this.groupList);\r\n\t//   for (let feat of this.featureList) {\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tlet groupProp = this.tempGroup\r\n\t// \tconsole.log(featProp)\r\n\t// \tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: featProp.name,\r\n\t// \t\t  color: featProp.color,\r\n\t// \t\t  icon: icon\r\n\t// \t\t});\r\n\t// \t  }\r\n\t// \tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t// \tthis.groupsService.setActiveGroup(this.selectedGroup);\r\n\t// }\r\n\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tconsole.log(this.activeGroup)\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\r\n\t// console.log(this.tempGroup)\r\n\t//  console.log(this.groupList)\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t\r\n\r\n\t// for (let feat of this.tempGroup){\r\n\t// \tconsole.log(feat)\r\n\t// \tlet featProp = feat.properties;\r\n\t// \tconsole.log(featProp)\r\n\t// \tif (featProp.group) {\r\n\t// \t\tconsole.log(\"nope\");\r\n\t// \t\tfeatProp.group.push({\r\n\t// \t\t  name: name,\r\n\t// \t\t//   color: ,\r\n\t// \t\t//   icon: \"fa-house-damage\"\r\n\t// \t\t});\r\n\t// \t  }#23E99E #473FB4\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t// console.log(feat.id)\r\n\t\t// console.log(this.selectedGroup)\r\n\t\tconst index = this.groupList.findIndex(item => item.features[0].id == feat.id);\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != this.selectedGroup);\r\n\t\t// console.log(index)\r\n\t\tif (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: this.groupList[index].color,\r\n\t\t\t  icon: this.groupList[index].icon\r\n\t\t\t});\r\n\t\t  }\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n\t}\r\n\t// console.log(this.selectedProject.id)\r\n\t// console.log(this.tempGroup[0])\r\n\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures();\r\n\tfeatProp.group = featProp.filter(e => e.properties.group.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures()[0].id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n    // console.log(this.field)\r\n    // console.log(this.form)\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n      const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\r\n      if (index > -1){\r\n        this.isChecked = true\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeFeatureId$.unsubscribe();\r\n    }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.formsService.addCheckedOpt(option, this.activeFeatureId);\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option, this.activeFeatureId);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n    \r\n    console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ console.log(this.chosenTag); this.formsService.updateSelectedRadio(this.chosenTag, 2, this.activeFeatureId);}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  public chosenTag: string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    console.log(this.formsService.getSelectedRadio() )\r\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\r\n    console.log(index)\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n  // }\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 0, this.activeFeatureId);}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n  notes:string = \"notes\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\r\n    if (index > -1){\r\n      this.note = this.formsService.getNotes()[index]['option']\r\n    }\r\n  }\r\n\r\n  updateNotes(){ this.formsService.updateNotes(this.note, this.activeFeatureId); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n    const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 1);\r\n    if (index > -1){\r\n      this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    }\r\n    this.chosenColor = this.color  \r\n  }\r\n\r\n  updateCheckedTag(){ \r\n    this.formsService.saveStyles(this.chosenColor, this.activeFeatureId)\r\n    this.formsService.updateSelectedRadio(this.chosenTag, 1, this.activeFeatureId); }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteTag(activeGroup, tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div> <!-- rename button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> <!-- three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"tag.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <!-- (click)=\\\"formsService.saveTag(activeGroup, tag, tag.label)\\\" -->\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}