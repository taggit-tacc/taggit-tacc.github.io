{"version":3,"sources":["webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","d","__decorate","__param","__metadata","__importDefault","decorators","target","key","desc","c","arguments","length","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","mod","__esModule","NotFoundComponent","[object Object]","tslib_es6","a","core","n","selector","template","b","Group","AssetFilters","this","bbox","assetType","Set","has","delete","add","Project","AuthToken","token","expires","Date","expires_in","getTime","Feature","f","geometry","properties","type","assets","styles","project_id","asset_type","environment","production","apiUrl","clientId","baseHref","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","fesm2015_router","B","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","console","log","file","form","FormData","append","files","system","path","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","overlays","activeOverlay","ov","mapMouseLocation","loc","basemap","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","data","prom","proj","p","value","put","getProjects","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","groupList","featureList","tempGroupList","group","color","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","undefined","updateFormItem","groupObject","filter","opt","options","option","formObj","finalArray","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","formType","formName","formLabel","formValue","formRequired","event","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","myOpts","addForm","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","activeGroup$","activeFeatureId$","formGroup$","getRawValue","setTagFeatureGroup","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","J","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","marker","featureType","ico","leaflet_src","divIcon","className","html","icon","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","skip","addRemoveOverlay","turf_min","fitBounds","removeLayer","overlay","imageOverlay","set","getBounds","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","fullURL","fileType","tmp","date","File","lastModified","valueOf","modal_file_browser_component_ModalFileBrowserComponent","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","list","combineLatest","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","init","browse","pth","currentDirectory","getFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","index","concat","checkIfSelectable","addSelectedFile","Array","from","close","Q","modal_download_selector_component_ModalDownloadSelectorComponent","passbackData","fileExtension","downloadSelectForm","Name","Extension","indexOf","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","create","modal_current_project_component_ModalCurrentProjectComponent","projData","confirm","uuid","update","A","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","interval","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","selectedProject","getDataForProject","hazMapperLink","timerSubscription","reloadFeatures","setActiveFeatureNum","afterClosed","importFileFromTapis","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","featProp","updateFeatureProperty","Number","addTempGroup","setUnselectAll","setShowGroup","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","forExport","content","CSVHolder","JSONHolder","projID","element","coordinates","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","export","download","url","filename","navigator","userAgent","style","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","err","status","reload","message","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","imagesExist","featureListScroll","slice","projectsExist","groupExist","setActiveFeatureId","hide","setTimeout","appendSum","Y","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","v","geoData","deleteFeature","ngx_foundation_modal","E","form_generator_component_FormGeneratorComponent","isValid","controls","field","valid","SideBarComponent","SelectGroupComponent","groups$","what","SelectImageComponent","activeFeatureNum$","asset","assetId","deleteGroup","getActiveFeatures","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","provide","multi","useClass","useValue","bootstrap","entryComponents","rb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"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","file":"main-es2015.2891ee396ccd3ed94222.js","sourcesContent":["export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select(file)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: -webkit-inline-box;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  -webkit-transition: all 0.4s ease;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner>\\r\\n</ng-template>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\">\\r\\n\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Path\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featureSource}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div>\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect (click)=\\\"deleteFromGroup(color)\\\" class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \":host #create-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-transition: opacity 0.3s ease;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<!--<button mat-menu-item (click)=saveFile(0,1)>Export to Design Safe?</button>-->\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  assetPath: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n","export interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  baseHref: '/'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId);\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {Project} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      //below code from here to next comment does nothing\r\n      const p = new Project();\r\n      p.name = 'test';\r\n      p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared. \r\n  // Need to find a way to unsubscribe a project for one person without affecting the others.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService) {}\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => this._forms.next(current));\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\tlet formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\tif (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\t  let formItem = {\r\n\t\ttype: this.formType,\r\n\t\tname: this.formName,\r\n\t\tlabel: this.formLabel,\r\n\t\tvalue: this.formValue,\r\n\t\trequired: this.formRequired,\r\n\t\toptions: []\r\n\t  }\r\n\r\n\t  this.openOption[this.formLabel] = false;\r\n\r\n\t  if (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\tlet myOpts = [];\r\n\t\tfor (const opt of this.formOptions) {\r\n\t\t  myOpts.push({\r\n\t\t\tkey: opt[0],\r\n\t\t\tlabel: opt,\r\n\t\t  })\r\n\t\t}\r\n\r\n\t\tformItem.options = this.formOptions;\r\n\t  }\r\n\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t}\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\tconsole.log(this.payload);\r\n\tthis.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string) {\r\n    return this.tapis.filesList({systemId: system, filePath: path});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n    }, error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(file: RemoteFile) {\r\n\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t  this.addSelectedFile(file);\r\n\t}\r\n\telse{\r\n\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  addSelectedFile(file: RemoteFile) {\r\n\tif (this.selectedFiles.has(file.path)) {\r\n\t  this.selectedFiles.delete(file.path);\r\n\t} else {\r\n\t  this.selectedFiles.set(file.path, file);\r\n\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' && (value.path.indexOf('jpg') !== -1) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure to delete this project?\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 60; // 60 secs per reload\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\tthis.timerSubscription = this.timer.subscribe( () => {\r\n\t  this.reloadFeatures();\r\n\t});\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t});\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t  this.loaded = e;\r\n\t});\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  status: boolean = false;\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  // This is for tooltip\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t}\r\n\tthis.status = !this.status;\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\t  const geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n  renameGroup(name: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.selectedGroup) {\r\n\t\te.name = name;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures().properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures().id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<div class=\\\"subitem-scroll\\\">\\r\\n\\t  <div *ngIf=\\\"(formsService.activeFormList | async)?.length > 0; else elseBlock\\\">\\r\\n\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"formsService.formGroup | async\\\">\\r\\n <!--  -->\\r\\n\\t\\t  <div *ngFor=\\\"let form of formsService.activeFormList | async\\\" class=\\\"main-form-container\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">\\r\\n\\r\\n\\t\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t\\t{{form.label}} ({{form.type}})\\r\\n\\t\\t\\t  </div> <!-- name-group -->\\r\\n\\r\\n\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div (click)=\\\"formsService.deleteForm(activeGroup, form)\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"form.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"openOptionToggle(form.label)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t  <input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t placeholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t  <br/>\\r\\n\\t\\t\\t\\t  <br/>\\r\\n\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\tmat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(click)=\\\"formsService.renameForm(activeGroup, form, formItemRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t\\t<button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\tmat-button>Cancel</button>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t  </div> <!-- button group -->\\r\\n\\t\\t\\t</div>  <!-- form-item-container -->\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"form.options.length && form.type != 'text' && openOption[form.label]\\\" class=\\\"options-container\\\">\\r\\n\\r\\n\\t\\t\\t  <div *ngFor=\\\"let opt of form.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"formsService.deleteOption(activeGroup, opt, form)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t  (click)=\\\"formsService.renameOption(activeGroup, opt, form, optionDeeperRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </ng-template>\\r\\n\\t\\t\\t\\t</div> <!-- button-ggroup -->\\r\\n\\t\\t\\t  </div> <!-- option loop -->\\r\\n\\t\\t\\t</div> <!-- options container -->\\r\\n\\r\\n\\r\\n\\t\\t\\t<!-- <app-form-generator [form]=\\\"form\\\"></app-form-generator> -->\\r\\n\\t\\t\\t<app-form-generator [field]=\\\"form\\\"></app-form-generator>\\r\\n\\t\\t\\t<!-- Conditional -->\\r\\n\\t\\t\\t<!-- <div *ngIf=\\\"(formsService.activeFormList | async)?.length > 0; else elseBlock\\\"> -->\\r\\n\\t\\t\\t  <!-- Does not work without this -->\\r\\n\\t\\t\\t  <!-- <div *ngIf=\\\"fields\\\"> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator [fields]=\\\"getFields()\\\"></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator [fields]=\\\"fields\\\"></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t  <!-- </div> -->\\r\\n\\r\\n\\r\\n\\t\\t  </div> <!-- loop -->\\r\\n\\r\\n\\t\\t  <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</form>\\r\\n\\t  </div> <!-- conditional -->\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<div [formGroup]=\\\"form\\\">\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<mat-form-field *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  <input matInput color=\\\"primary\\\" [formControlName]=\\\"field.label\\\"\\r\\n\\t\\t\\t [id]=\\\"field.label\\\" [type]=\\\"field.type\\\">\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<mat-form-field *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  <mat-select [id]=\\\"field.label\\\" [id]=\\\"field.label\\\" [formControlName]=\\\"field.label\\\">\\r\\n\\t\\t<mat-option *ngFor=\\\"let opt of field.options\\\" [value]=\\\"opt.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-option>\\r\\n\\t  </mat-select>\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <mat-radio-group [formControlName]=\\\"field.label\\\" class=\\\"radio-group\\\">\\r\\n\\t\\t<mat-radio-button *ngFor=\\\"let opt of field.options\\\" class=\\\"input-group\\\" type=\\\"radio\\\" [value]=\\\"opt.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-radio-button>\\r\\n\\t  </mat-radio-group>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<mat-checkbox type=\\\"checkbox\\\" [value]=\\\"opt.label\\\" [formControlName]=\\\"field.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\">{{field.label}} is required</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}