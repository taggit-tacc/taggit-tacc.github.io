{"version":3,"sources":["webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","__decorate","decorators","target","key","desc","d","c","arguments","length","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__importDefault","mod","__esModule","NotFoundComponent","_classCallCheck","this","_createClass","value","tslib_es6","a","core","n","selector","template","Group","AssetFilters","bbox","assetType","Set","has","delete","add","Project","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","asset_type","environment","production","apiUrl","clientId","baseHref","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","B","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","console","log","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","file","form","FormData","append","files","system","path","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_this12","data","prom","proj","p","put","getProjects","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","groupList","featureList","tempGroupList","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","done","group","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","color","err","return","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","updateFormItem","groupObject","filter","opt","options","option","formObj","finalArray","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","_this23","formType","formName","formLabel","formValue","formRequired","event","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","_this24","myOpts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","addForm","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","_this25","activeGroup$","activeFeatureId$","formGroup$","getRawValue","setTagFeatureGroup","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","J","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","icon","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this26","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this27","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","_this28","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","filesList","systemId","filePath","shift","getParentPath","unshift","arr","replace","join","modal_file_browser_component_ModalFileBrowserComponent","tapisFilesService","dialogRef","agaveSystemsService","selectedFiles","onClose","Subject","_this30","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","init","browse","pth","inProgress","clear","listFiles","checkIfSelectable","addSelectedFile","tmp","Array","from","close","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","create","modal_current_project_component_ModalCurrentProjectComponent","projData","_this32","confirm","uuid","update","A","args","control_bar_component_ControlBarComponent","REFRESHTIME","LatLng","liveRefresh","timer","interval","_this33","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","selectedProject","getDataForProject","timerSubscription","reloadFeatures","setActiveFeatureNum","_this35","afterClosed","importFileFromTapis","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","featProp","updateFeatureProperty","Number","addTempGroup","setUnselectAll","setShowGroup","_this36","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","app_interceptors_AuthInterceptor","request","handle","catchError","status","reload","message","statusText","throwError","TokenInterceptor","url","indexOf","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this39","imagesExist","featureListScroll","slice","projectsExist","groupExist","_this40","featureSource","setActiveFeatureId","_this41","hide","setTimeout","appendSum","Y","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this42","coordinates","_this43","v","deleteFeature","ngx_foundation_modal","E","form_generator_component_FormGeneratorComponent","_this47","controls","field","valid","SideBarComponent","SelectGroupComponent","_this48","groups$","what","_this50","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SelectImageComponent","_this52","activeFeatureNum$","_this53","asset","index","_this56","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","assetId","deleteGroup","getActiveFeatures","AppModule","declarations","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","provide","multi","useClass","useValue","bootstrap","entryComponents","rb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"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","file":"main-es5.246b8dfe5a8eabb4a36d.js","sourcesContent":["export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\">\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"cell medium-9 clickable\\\" (click)=\\\"select(file)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cell medium-3\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \"\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: -webkit-inline-box;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  -webkit-transition: all 0.4s ease;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner>\\r\\n</ng-template>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\">\\r\\n\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Path\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featureSource}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div>\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect (click)=\\\"deleteFromGroup(color)\\\" class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \":host #create-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-transition: opacity 0.3s ease;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host .fileslisting {\\n  min-height: 15em;\\n  max-height: 15em;\\n  overflow-y: scroll;\\n}\\n:host .selected {\\n  background: #eeeeee;\\n}\\n:host .button-group {\\n  text-align: center;\\n}\\n:host .file-row {\\n  border: 1px solid transparent;\\n}\\n:host .file-row:hover {\\n  border: 1px solid #d3d3d3;\\n}\\n:host .file-row:hover.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker()\\\">File Browser</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  assetPath: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n","export interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  baseHref: '/'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\tconsole.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {Project} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n   });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      const p = new Project();\r\n      p.name = 'test';\r\n      p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared. \r\n  // Need to find a way to unsubscribe a project for one person without affecting the others.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\tconsole.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\tconsole.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService) {}\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => this._forms.next(current));\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\tlet formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\tif (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\t  let formItem = {\r\n\t\ttype: this.formType,\r\n\t\tname: this.formName,\r\n\t\tlabel: this.formLabel,\r\n\t\tvalue: this.formValue,\r\n\t\trequired: this.formRequired,\r\n\t\toptions: []\r\n\t  }\r\n\r\n\t  this.openOption[this.formLabel] = false;\r\n\r\n\t  if (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\tlet myOpts = [];\r\n\t\tfor (const opt of this.formOptions) {\r\n\t\t  myOpts.push({\r\n\t\t\tkey: opt[0],\r\n\t\t\tlabel: opt,\r\n\t\t  })\r\n\t\t}\r\n\r\n\t\tformItem.options = this.formOptions;\r\n\t  }\r\n\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t}\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\tconsole.log(this.payload);\r\n\tthis.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {share} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop();\r\n  }\r\n\r\n  listFiles(system: string, path: string) {\r\n    this.tapis.filesList({systemId: system, filePath: path})\r\n      .subscribe(resp => {\r\n\tconst files = resp.result;\r\n\t// This removes the first item in the listing, which in Agave is always a reference to self.\r\n\tconst current = files.shift();\r\n\tcurrent.path = this.getParentPath(current.path);\r\n\tcurrent.name = '..';\r\n\tfiles.unshift(current);\r\n\tthis._listing.next(files);\r\n      });\r\n  }\r\n\r\n  private getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile>;\r\n  public inProgress: boolean;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.inProgress = true;\r\n\tthis.selectedFiles.clear();\r\n\tthis.tapisFilesService.listFiles(file.system, file.path);\r\n\tthis.tapisFilesService.listing.subscribe(listing => {\r\n\t  this.inProgress = false;\r\n\t  this.filesList = listing;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(file: RemoteFile) {\r\n\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t  this.addSelectedFile(file);\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  addSelectedFile(file: RemoteFile) {\r\n\tif (this.selectedFiles.has(file.path)) {\r\n\t  this.selectedFiles.delete(file.path);\r\n\t} else {\r\n\t  this.selectedFiles.set(file.path, file);\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\t// this.onClose.next(tmp);\r\n\t// this.modalRef.hide();\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\t// this.modalRef.hide();\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure to delete this project?\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 60; // 60 secs per reload\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\tthis.timerSubscription = this.timer.subscribe( () => {\r\n\t  this.reloadFeatures();\r\n\t});\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t  this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t});\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t  this.loaded = e;\r\n\t});\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  status: boolean = false;\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  // This is for tooltip\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\tconsole.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t}\r\n\tthis.status = !this.status;\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\tthis.geoDataService.deleteFeature(this.feature);\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n  renameGroup(name: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.selectedGroup) {\r\n\t\te.name = name;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures().properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures().id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<div class=\\\"subitem-scroll\\\">\\r\\n\\t  <div *ngIf=\\\"(formsService.activeFormList | async)?.length > 0; else elseBlock\\\">\\r\\n\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"formsService.formGroup | async\\\">\\r\\n <!--  -->\\r\\n\\t\\t  <div *ngFor=\\\"let form of formsService.activeFormList | async\\\" class=\\\"main-form-container\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">\\r\\n\\r\\n\\t\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t\\t{{form.label}} ({{form.type}})\\r\\n\\t\\t\\t  </div> <!-- name-group -->\\r\\n\\r\\n\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div (click)=\\\"formsService.deleteForm(activeGroup, form)\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"form.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"openOptionToggle(form.label)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t  <input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t placeholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t  <br/>\\r\\n\\t\\t\\t\\t  <br/>\\r\\n\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\tmat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(click)=\\\"formsService.renameForm(activeGroup, form, formItemRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t\\t<button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\tmat-button>Cancel</button>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t  </div> <!-- button group -->\\r\\n\\t\\t\\t</div>  <!-- form-item-container -->\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"form.options.length && form.type != 'text' && openOption[form.label]\\\" class=\\\"options-container\\\">\\r\\n\\r\\n\\t\\t\\t  <div *ngFor=\\\"let opt of form.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"formsService.deleteOption(activeGroup, opt, form)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t  (click)=\\\"formsService.renameOption(activeGroup, opt, form, optionDeeperRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </ng-template>\\r\\n\\t\\t\\t\\t</div> <!-- button-ggroup -->\\r\\n\\t\\t\\t  </div> <!-- option loop -->\\r\\n\\t\\t\\t</div> <!-- options container -->\\r\\n\\r\\n\\r\\n\\t\\t\\t<!-- <app-form-generator [form]=\\\"form\\\"></app-form-generator> -->\\r\\n\\t\\t\\t<app-form-generator [field]=\\\"form\\\"></app-form-generator>\\r\\n\\t\\t\\t<!-- Conditional -->\\r\\n\\t\\t\\t<!-- <div *ngIf=\\\"(formsService.activeFormList | async)?.length > 0; else elseBlock\\\"> -->\\r\\n\\t\\t\\t  <!-- Does not work without this -->\\r\\n\\t\\t\\t  <!-- <div *ngIf=\\\"fields\\\"> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator [fields]=\\\"getFields()\\\"></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator [fields]=\\\"fields\\\"></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t  <!-- </div> -->\\r\\n\\r\\n\\r\\n\\t\\t  </div> <!-- loop -->\\r\\n\\r\\n\\t\\t  <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</form>\\r\\n\\t  </div> <!-- conditional -->\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<div [formGroup]=\\\"form\\\">\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<mat-form-field *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  <input matInput color=\\\"primary\\\" [formControlName]=\\\"field.label\\\"\\r\\n\\t\\t\\t [id]=\\\"field.label\\\" [type]=\\\"field.type\\\">\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<mat-form-field *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  <mat-select [id]=\\\"field.label\\\" [id]=\\\"field.label\\\" [formControlName]=\\\"field.label\\\">\\r\\n\\t\\t<mat-option *ngFor=\\\"let opt of field.options\\\" [value]=\\\"opt.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-option>\\r\\n\\t  </mat-select>\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <mat-radio-group [formControlName]=\\\"field.label\\\" class=\\\"radio-group\\\">\\r\\n\\t\\t<mat-radio-button *ngFor=\\\"let opt of field.options\\\" class=\\\"input-group\\\" type=\\\"radio\\\" [value]=\\\"opt.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-radio-button>\\r\\n\\t  </mat-radio-group>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<mat-checkbox type=\\\"checkbox\\\" [value]=\\\"opt.label\\\" [formControlName]=\\\"field.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\">{{field.label}} is required</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}