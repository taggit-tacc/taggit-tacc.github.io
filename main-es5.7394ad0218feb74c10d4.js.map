{"version":3,"sources":["webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.html","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/environments/environmentType.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/scroll.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-fields.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NotFoundComponent","_classCallCheck","this","_createClass","key","value","tslib_es6","a","Object","core","n","selector","template","EnvironmentType","Group","AssetFilters","bbox","assetType","Set","has","add","Project","ProjectRequest","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","length","asset_type","Production","Staging","Local","environment","production","apiUrl","clientId","baseHref","backend","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","C","providedIn","notifications_service_NotificationsService","toastr","authService","TIMEOUT","_notifications","notifications","isLoggedIn","interval","getRecent","_this3","baseUrl","now","toISOString","notes","forEach","note","status","showSuccessToast","message","showErrorToast","success","error","ngx_toastr","ScrollService","scrollRestored","scrollPosition","change","document","documentElement","scrollTop","scroll","top","geo_data_service_GeoDataService","notificationsService","scrollService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","_this4","query","arguments","undefined","restoreScroll","qstring","querystring","toJson","fc","map","feat","setScrollRestored","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","featureId","groupData","pc","console","log","file","form","FormData","append","files","tmp","system","path","fileList","showImportErrorToast","remoteFile","system_id","response","importImage","downloadLink","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","bsModalService","ngx_foundation","c","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_deletingProjects","deletingProjects","_this17","_this18","myProjs","p","find","dp","_this19","updateProjectsList","data","prom","proj","setActiveProject","put","project","assign","deleting","filter","getProjects","deletingFailed","tap","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","_itemsSelected","itemsSelected","groupList","featureList","tempGroupList","group","_step2","_iterator2","_createForOfIteratorHelper","s","done","color","icon","findIndex","item","err","_iterator","_step","_loop","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","userTag","options","extra","tagData","checkedOptions","chosenTag","option","notebook","tempData","newTag","optData","newOpt","selectedProject","selectedFeatureID","selectedFeature","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","updateFormItem","selectedColor","currentID","style","checkDefault","faIcon","updateFeatureProperty","updateFeatureStyle","groupObject","opt","formObj","finalArray","gName","tag","tLabel","index","_this35","splice","_step3","_iterator3","ind","choice","tGroup","_iterator4","_step4","Number","_iterator5","_step5","_this38","_step6","_iterator6","selection","componentId","_iterator7","_step7","compId","rOption","_this40","_step8","_iterator8","componentID","_iterator9","_step9","compID","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","newGroup","_this42","groups$","formType","formName","formLabel","formValue","formRequired","event","target","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","_this43","_step10","_iterator10","_step11","myOpts","_iterator11","getTags","saveTag","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","tagList","newTagValue","_this44","activeGroup$","activeFeatureId$","formGroup$","_step12","_iterator12","_iterator13","_step13","_loop2","tagLabel","activeTag","oldTags","closeAll","getRawValue","unsubscribe","Activate","authSvc","state","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this47","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this48","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","d","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","_systems","systems","_this49","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","offset","limit","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","date","File","lastModified","valueOf","msg","sysStr","lastSystem","fileStr","lastFile","noPreviousSelections","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","_ModalFileBrowserComponent_","ModalFileBrowserComponent_1","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","retrievalError","selectedFiles","onClose","Subject","_this51","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","currentDirectory","init","browse","pth","selectedPath","getFiles","_this52","hasMoreFiles","listFiles","shift","getParentPath","unshift","newFile","allowedExt","concat","shiftKey","selectFilesShiftClick","checkIfSelectable","addSelectedFile","selectShift","firstFileIndex","saveState","Array","from","close","_step14","count","_iterator14","clear","addRangeFiles","lastFileIndex","again","maxIndex","max","i","min","R","modal_download_selector_component_ModalDownloadSelectorComponent","_ModalDownloadSelectorComponent_","ModalDownloadSelectorComponent_1","passbackData","fileExtension","_this53","downloadSelectForm","Name","Extension","_ref3","_this54","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","projRqst","create","modal_share_project_component_ModalShareProjectComponent","_this55","projShareForm","activeProj","projectUsers","onlyOne","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","_this56","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","foundFilePaths","_this57","getState","setGroupProperties","hasSuccessNotification","some","hasFailureNotification","substring","uploadNewFeature","createBlankFeature","lastProj","groupsExist","startWith","display_path","imageName","exec","getDataForProject","hazMapperLink","setActiveFeatureNum","setUnselectAll","setItemsSelected","timerSubscription","reloadFeatures","setLiveRefresh","_this60","afterClosed","importFileFromTapis","coordinates","saveFile","_this62","height","width","afterAllClosed","openSidebar","setActiveGroup","myRandColor","getRandomColor","addGroup","_step15","_iterator15","featProp","addTempGroup","setShowGroup","_this64","setScrollPosition","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","content","forExport","CSVHolder","JSONHolder","projID","tagsPresent","headerComplete","headerTagOptions","element","featureSource","_a","_b","_c","tempTagOptionNum","compileJSON","tempCSV","download","featureID","transferJSON","tags","compiledJSON","longitude","latitude","src","groupColor","icon color","tag name","tag type","tag selection","url","filename","navigator","userAgent","indexOf","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","reload","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this68","projectsExist","imagesExist","featureListScroll","slice","groupExist","_this69","setActiveFeatureId","_this70","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this71","featurePath","_this72","v","geoData","deleteFeature","_iterator16","_step16","selectGroupForm","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","checked","checkedOpt","getCheckedOpt","colorArray","_this77","generateColors","itemCount","field","isOdd","incrementVal","temp","baseNum","SideBarComponent","SelectGroupComponent","currentIcon","iconList","unicode","_this78","what","_iterator17","_step17","_iterator18","_step18","saveStyles","_iterator19","_step19","SelectImageComponent","_this84","activeFeatureNum$","_this85","asset","_iterator20","_step20","assetId","deleteGroup","_iterator21","_step21","FormFieldsComponent","controls","valid","FormCheckBoxComponent","isChecked","_this90","addCheckedOpt","deleteCheckedOpt","FormDropDownComponent","_this91","getSelectedRadio","updateSelectedRadio","FormFileComponent","FormRadioComponent","_this92","String","FormTextBoxComponent","_this93","updateNotes","FormColorComponent","chosenColor","_this94","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule"],"mappings":"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","file":"main-es5.7394ad0218feb74c10d4.js","sourcesContent":["export default \"<div>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenTag\\\" id=\\\"field.name\\\" name=\\\"field.name\\\" (change)=\\\"updateCheckedTag()\\\">\\r\\n      <option *ngFor=\\\"let opt of field\\\" [value]=\\\"opt.label\\\">{{opt.label}}</option>\\r\\n  </select>\\r\\n</div>\"","export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\" (dblclick)=\\\"toRoot()\\\">\\r\\n\\t\\t<i class=\\\"fas fa-folder\\\"></i>\\r\\n\\t\\t<span > Home </span>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"clickable\\\" class=\\\"grid-x file-row\\\">\\r\\n\\t\\t<i class=\\\"fas fa-folder-open\\\"></i>\\r\\n\\t\\t<span class=\\\"lineBreak\\\"> {{selectedPath}} </span>\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"retrievalError\\\" class=\\\"grid-x file-row\\\" class=\\\"error\\\">\\r\\n\\t\\tError retrieving files\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList; let fileIndex = index\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select($event, file, fileIndex)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"basic\\\" (click)=\\\"selectAll()\\\">Select all</button>\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \":host .drop-container {\\n  background: #fff;\\n  border-radius: 6px;\\n  height: 150px;\\n  width: 100%;\\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 2px dashed #c0c4c7;\\n}\\n:host p {\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #c0c4c7;\\n}\\n:host .upload-button {\\n  display: inline-block;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  color: #5754a3;\\n}\\n:host .upload-button input {\\n  display: none;\\n}\\n:host .dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0;\\n}\\n:host .dropzone.hovering {\\n  border: 2px solid #f16624;\\n  color: #dadada !important;\\n}\\n:host progress::-webkit-progress-value {\\n  transition: width 0.1s ease;\\n}\"","export default \"<div [formGroup]=\\\"form\\\">\\r\\n  <div *ngIf=\\\"!field.value\\\" class=\\\"drop-container dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n       (dropped)=\\\"field.onUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n    <p class=\\\"m-0\\\">\\r\\n      Drag a file here or\\r\\n      <label class=\\\"upload-button\\\">\\r\\n\\t<input type=\\\"file\\\" multiple=\\\"\\\" (change)=\\\"field.onUpload($event.target.files)\\\"> browse\\r\\n      </label>\\r\\n      to upload.\\r\\n    </p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"field.value\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Change</button> -->\\r\\n    <div class=\\\"card\\\">\\r\\n      <img class=\\\"card-img-top\\\" [src]=\\\"field.value\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Galleries\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" (scrolled)=\\\"getFiles()\\\">\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the Gallery ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \"\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  overflow: hidden;\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .fa {\\n  font-weight: 900;\\n  display: inline-block;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-rendering: auto;\\n  font-family: Font Awesome\\\\ 5 Free;\\n  line-height: 1;\\n}\\n:host .fa option {\\n  font-weight: 900;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\" (keyup.enter)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 70vh;\\n}\\n:host #new-proj {\\n  font-size: 32px;\\n  display: flex;\\n  height: 100vh;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" [disabled]=\\\"onlyOne\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div *ngIf=\\\"projectsExist; else createProj\\\" id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ng-template #createProj> \\r\\n\\t<div id=\\\"new-proj\\\" (click)=\\\"openCreateProjectModal()\\\">\\r\\n\\t\\tStart a new project\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n  <!-- <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner> -->\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"form-group row\\\" *ngFor=\\\"let tag of field\\\">\\r\\n  <label class=\\\"col-md-3 form-control-label\\\" [attr.for]=\\\"tag.label\\\">\\r\\n\\t{{field.label}}\\r\\n\\t<strong class=\\\"text-danger\\\" *ngIf=\\\"tag.required\\\">*</strong>\\r\\n  </label>\\r\\n  <div class=\\\"col-md-9\\\" [ngSwitch]=\\\"tag.type\\\">\\r\\n\\t<app-form-color *ngSwitchCase=\\\"'color'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-color>\\r\\n\\t<app-form-textbox *ngSwitchCase=\\\"'text'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-textbox>\\r\\n\\t<app-form-dropdown *ngSwitchCase=\\\"'dropdown'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-dropdown>\\r\\n\\t<app-form-checkbox *ngSwitchCase=\\\"'checkbox'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-checkbox>\\r\\n\\t<app-form-radio *ngSwitchCase=\\\"'radio'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-radio>\\r\\n\\t<!-- <app-form-file *ngSwitchCase=\\\"'file'\\\" [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-file> -->\\r\\n\\t<div class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\" *ngIf=\\\"!isValid && isDirty\\\">{{tag.label}} is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  overflow: hidden;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div *ngIf=\\\"tempGroup.length === 1\\\">\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div *ngIf=\\\"tempGroup.length > 1\\\">\\r\\n\\t\\t{{tempGroup.length}} images will be deleted from the current project. They will not be deleted from the Data Depot.\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"addGroups(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\" (click)=\\\"deleteFromGroup(color)\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect  class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \"<!--<div *ngIf=\\\"!field.multiline\\\">\\r\\n  <input [attr.type]=\\\"field.type\\\" class=\\\"form-control\\\"  [id]=\\\"field.name\\\" [name]=\\\"field.name\\\" [(ngModel)]=\\\"note\\\" (change)=\\\"updateNotes()\\\">\\r\\n</div>\\r\\nNote! Right now, this tag is set to only use a text area, it seems like this component was set up to switch between the two when the imput\\r\\nbecame too large. However, how this was done isn't clear, and a text area just looks better, in my opinion-->\\r\\n<div>\\r\\n  <textarea  [id]=\\\"field.name\\\"\\r\\n\\t\\trows=\\\"9\\\" class=\\\"form-control\\\" [placeholder]=\\\"notes\\\" [(ngModel)]=\\\"note\\\" (keyup)=\\\"updateNotes()\\\"></textarea>\\r\\n</div>\\r\\n\"","export default \":host #share-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  align-items: center;\\n}\\n\\n.card-buttons {\\n  align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox2\\\" name={{label}} value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      </label>\\r\\n</div>\"","export default \":host #create-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  transition: opacity 0.3s ease;\\n  backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: flex;\\n  flex-direction: row;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: flex;\\n  flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  transition: 0.3s ease;\\n  align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: flex;\\n  flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenTag\\\" type=\\\"radio\\\" id=\\\"inlineCheckbox3\\\" name={{label}} value={{field.label}} (change)=\\\"updateCheckedTag()\\\" /> \\r\\n          {{field.label}}\\r\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"chosenColor\\\" type=\\\"color\\\" id=\\\"inlineCheckbox3\\\"/>\\r\\n  </label>\\r\\n</div>\"","export default \"<h4> Current Gallery </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<h4> Create a new Gallery </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: flex;\\n  justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: auto;\\n  background-color: #FFFFFF;\\n  height: 40vh;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .button-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0;\\n  justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div (click)=\\\"openIconSelection(iconModal, group.name)\\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\\"fa {{group.icon}}\\\"\\r\\n\\t\\t\\t\\t\\tmatTooltip=\\\"icons\\\"\\r\\n\\t\\t\\t\\t\\tmatTooltipPosition=\\\"below\\\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t  \\t</div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(groupRename.value, currentIcon)\\\">Rename</button> -->\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<ng-template #iconModal>\\r\\n\\t\\t<div class=\\\"iconDropdown\\\">\\r\\n\\t\\t<select class=\\\"fa\\\" [(ngModel)]=\\\"choice\\\">\\r\\n\\t\\t\\t<option class=\\\"fa\\\" *ngFor=\\\"let icons of iconList\\\" value={{icons.id}} [innerHTML]=\\\"icons.unicode\\\"></option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<br/>\\r\\n\\t  \\t<br/>\\r\\n\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveIcon(choice)\\\">Save</button>\\r\\n\\t<!-- <button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"saveGroup(selectedGroup, choice)\\\">Save</button> -->\\r\\n\\t\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t\\t  </div>\\r\\n\\t</div>\\r\\n\\t</ng-template>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n.error {\\n  background-color: red;\\n  color: white;\\n}\\n.lineBreak {\\n  max-width: 350px;\\n  word-break: break-word;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: flex;\\n  flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Gallery : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Gallery</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Gallery</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Gallery</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\t\\r\\n\\t<button mat-raised-button class=\\\"button-spacing\\\" [disabled]=\\\"!itemsSelected\\\" (click)=\\\"clearAll()\\\">Clear Selected</button>\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your gallery in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\" *ngIf=\\\"itemsSelected && !showSidebar\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" (keyup.enter)=\\\"addToGroupService(groupInput.value)\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"<div  class=\\\"form-check form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"isChecked\\\" id=\\\"inlineCheckbox1\\\" value={{field.label}} (change)=\\\"selected($event, field)\\\" /> \\r\\n            {{field.label}}\\r\\n        </label>\\r\\n</div>\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export enum EnvironmentType {\r\n  Production = 'production',\r\n  Staging = 'staging',\r\n  Local = 'local',\r\n}","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  ds_id?: string;\r\n  title?: string;\r\n  uuid?: string;\r\n  public?: boolean;\r\n  system_file?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n  deleting?: boolean;\r\n  deletingFailed?: boolean;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport interface ProjectRequest {\r\n  project: Project;\r\n  observable?: boolean;\r\n  watch_content?: boolean;\r\n}\r\n\r\nexport class ProjectRequest implements ProjectRequest {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","import { EnvironmentType } from \"./environmentType\";\r\n\r\nexport interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n  backend: EnvironmentType;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  //   apiUrl: 'https://localhost:8000',\r\n  // clientId: 'RMCJHgW9CwJ6mKjhLTDnUYBo9Hka',\r\n  baseHref: '/',\r\n  backend: EnvironmentType.Production\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { INotification } from '../models/notification';\r\nimport { interval, Observable, ReplaySubject } from 'rxjs';\r\nimport { AuthService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n  // Interval time to get notifications in millisecs\r\n  private TIMEOUT = 5000;\r\n  private _notifications: ReplaySubject<Array<INotification>> = new ReplaySubject<Array<INotification>>(1);\r\n  public readonly  notifications: Observable<Array<INotification>> = this._notifications.asObservable();\r\n\r\n  constructor(private toastr: ToastrService,\r\n    private http: HttpClient,\r\n    private authService: AuthService ) {\r\n      if (this.authService.isLoggedIn()) {\r\n      const timer = interval(this.TIMEOUT);\r\n      timer.subscribe((next) => {\r\n        this.getRecent();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Sends a request to GeoAPI to retrieve recent notifications\r\n  getRecent(): void {\r\n    let baseUrl = environment.apiUrl + 'notifications/';\r\n    let now = new Date();\r\n    let then = new Date(now.getTime() - this.TIMEOUT);\r\n\r\n    this.http.get<Array<INotification>>(baseUrl + `?startDate=${then.toISOString()}`)\r\n      .subscribe( (notes) => {\r\n        this._notifications.next(notes);\r\n        notes.forEach( (note) => {\r\n          switch (note.status) {\r\n            case 'success':\r\n              this.showSuccessToast(note.message);\r\n              break;\r\n            case 'error':\r\n              this.showErrorToast(note.message);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  showSuccessToast(message: string): void {\r\n    this.toastr.success(message);\r\n  }\r\n\r\n  showImportErrorToast(message: string): void {\r\n    this.toastr.error(message + \", trying alternate method\")\r\n  }\r\n\r\n  showErrorToast(message:string): void {\r\n    this.toastr.error(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollService {\r\n\r\n  constructor() { }\r\n\r\n  public scrollRestored:boolean = true //if true, the scroll was restored to the proper place\r\n  public scrollPosition:number = 0\r\n\r\n  setScrollRestored(change:boolean) { this.scrollRestored = change; }\r\n\r\n  setScrollPosition() { this.scrollPosition = document.documentElement.scrollTop;}\r\n\r\n  scroll() {\r\n    //Attempts to scroll to the specified location\r\n\t\tdocument.documentElement.scroll({top: this.scrollPosition})\r\n\t\t//if it reaches there, marks the check as complete\r\n\t\tif(document.documentElement.scrollTop == this.scrollPosition){\r\n\t\t\tthis.scrollRestored = false\r\n\t\t}\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport { NotificationsService } from './notifications.service';\r\nimport { ScrollService } from './scroll.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  //TODO: Go over this and remove all unused functions, a lot of this was copy/pasted over from Hazmapper without a second thought\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n  private fileList: Array<RemoteFile>\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n\tprivate notificationsService: NotificationsService,\r\n\tprivate scrollService: ScrollService) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters(), restoreScroll = false): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\r\n\t\tif ( restoreScroll ) {\r\n\t\t\tthis.scrollService.setScrollRestored(true)\r\n\t\t}\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id, new AssetFilters(), true);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t  }, error => {\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t  }, error => {\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.fileList = tmp\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.notificationsService.showSuccessToast('Import started!');\r\n\t  }, error => {\r\n\t\tthis.notificationsService.showImportErrorToast('Import failed! Try again?');\r\n\t  });\r\n  }\r\n\r\n  //An alternate function for importing images with no GPS data. A feature is created elsewhere, and the image is added to the feature\r\n  //Inputs:\r\n  //projectId: Id number of current project\r\n  //features: A pre-created feature with user-defined or zeroed out gps data\r\n  //file: A Tapis Remote File containing the image to be imported\r\n  importImage(projectId: number, feature: Feature, path: string): void {\r\n\tlet featureId = feature.id\r\n\tlet file\r\n\tthis.fileList.forEach(remoteFile =>{\r\n\t\tif (remoteFile.path == path) {\r\n\t\t\tfile = remoteFile\r\n\t\t}\r\n\t});\r\n\tlet payload = {system_id: file.system, path: file.path};\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/${featureId}/assets/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\tthis.notificationsService.showSuccessToast('Import started!');\r\n\t\t//this.getFeatures(projectId)\r\n\t});\r\n  }\r\n\r\n  //Creates a new feature from an uploaded locally created feature\r\n  uploadNewFeature(projectId: number, feature:Feature, path: string): void {\r\n\tlet payload = feature;\r\n\tlet response\r\n\t//Calls the addFeatureAsset route in GeoAPI, resp is a list of features\r\n\tthis.http.post(environment.apiUrl + `projects/${projectId}/features/`, payload)\r\n\t.subscribe( (resp) => {\r\n\t\t//this.getFeatures(projectId)\r\n\t\tresponse = new Feature(resp[0])\r\n\t\tthis.importImage(projectId, response, path)\r\n\t});\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser, ProjectRequest} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\nimport { NotificationsService } from './notifications.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  private _deletingProjects: BehaviorSubject<Project[]> = new BehaviorSubject<Project[]>([]);\r\n  public deletingProjects: Observable<Project[]> = this._deletingProjects.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService,\r\n    private notificationsService: NotificationsService) { }\r\n\r\n    testGeoApi():void {\r\n      const data = {\r\n        \"name\": \"Awesome Project\",\r\n      \"description\": \"Cool project\"\r\n      }\r\n      const prom = this.http.post<Project>(`http://localhost:8888/projects/`, data).subscribe( resp => {\r\n        this._projects.next([...this._projects.value, resp]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(resp);\r\n      });\r\n\r\n      this.http.get<Project[]>(`http://localhost:8888/projects/`).subscribe( resp => {\r\n        this._projects.next(resp);\r\n        //DEBUG: outputs results of query\r\n        //console.log(this._projects.getValue())\r\n      });\r\n    }\r\n\r\n    updateProjectsList(resp: Project[] = []) {\r\n      const myProjs = resp.length !== 0\r\n        ? resp\r\n        : this._projects.value;\r\n  \r\n      this._deletingProjects.value.length !== 0\r\n        ? this._projects.next(myProjs.map(p => {\r\n          const deletingProj = this._deletingProjects.value.find(dp => dp.id === p.id);\r\n          return deletingProj\r\n            ? deletingProj\r\n            : p;\r\n        }))\r\n        : this._projects.next(myProjs);\r\n    }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     console.log(resp)\r\n     this.updateProjectsList(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   }, error => {\r\n    this.notificationsService.showErrorToast(\"Error importing files Design Safe, GeoAPI might be down\")\r\n  });\r\n  }\r\n\r\n  create(data: ProjectRequest): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      // Spread operator, just pushes the new project into the array\r\n      //console.log(data)\r\n      this._projects.next([...this._projects.value, proj]);\r\n      \r\n      //Awkward as hell, but this ensures we actually transition to the newly created project\r\n\t    //Without this, the screen flickers briefly to the new project, but ends up stuck on the old project\r\n      this.setActiveProject(proj);\r\n      this.setActiveProject(proj);\r\n    });\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    //saves change as last visited project\r\n    window.localStorage.setItem(\"lastProj\", JSON.stringify(proj))\r\n    try {\r\n      this._activeProject.next(proj);\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n  \r\n  update(data: ProjectRequest): void{\r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.project.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared.\r\n  delete(data: Project):void{\r\n    window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n    console.log(\"We are in the function...\")\r\n    this._deletingProjects.next([...this._deletingProjects.value, {...data, deleting: true}]);\r\n    this.updateProjectsList();\r\n\r\n    this.http.delete(environment.apiUrl  + `projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n\r\n        this._deletingProjects.next(this._deletingProjects.value.filter(p => p.id !== data.id));\r\n        //These next two lines might be causing problems. Adding getProjects causes duplicates during project creation,\r\n        //So I'm thinking that calling these here might be the root of my delete woes, as they're restoring the project I just\r\n        //deleted...\r\n        this.updateProjectsList();\r\n        this.getProjects();\r\n        //As elegant as a brick to the face, but this solves the delete issues...\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      }, error => {\r\n        window.localStorage.setItem(\"lastProj\", JSON.stringify(\"none\"))\r\n        \r\n        this._deletingProjects.next(this._deletingProjects.value.map(p => {\r\n          return p.id === data.id\r\n            ? {...p, deleting: false, deletingFailed: true}\r\n            : p;\r\n        }));\r\n        this.updateProjectsList();\r\n\r\n        this.getProjects();\r\n\r\n        this.notificationsService.showErrorToast('Could not delete project!');\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  private _itemsSelected: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public itemsSelected: Observable<boolean> = this._itemsSelected.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t  icon: group.icon\r\n\t\t\t}\r\n\t\t  }\r\n\t\t//   console.log(tempGroupList[group.name].features)\r\n\t\t  let index = tempGroupList[group.name].features.findIndex(item => (item == feat))\r\n\t\t  if(index == -1){\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\t\t  }\r\n\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n\tthis._itemsSelected.next(!select);\r\n  }\r\n\r\n  setItemsSelected(select: boolean): void {\r\n\tthis._itemsSelected.next(select)\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Component, Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProjectsService } from './projects.service';\r\nimport { GeoDataService } from './geo-data.service';\r\nimport { prepareSyntheticListenerFunctionName } from '@angular/compiler/src/render3/util';\r\nimport { fadeInItems } from '@angular/material';\r\nimport { Feature, FeatureCollection } from 'geojson';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n  \r\n\r\n  private activeGroup\r\n  private groupList\r\n  private featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n  private selectedProject\r\n  private selectedFeatureID\r\n  private selectedFeature\r\n  tempGroup: Array<Feature>;\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService) {\r\n\r\n\t\t\t\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t\t\t\t\tthis.activeGroup = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.groups.subscribe((next) => {\r\n\t\t\t\t\tthis.groupList = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\t\t\t\tthis.selectedProject = next;\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tthis.groupsService.activeFeatureId.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeatureID = next\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.groupsService.activeFeature.subscribe(next => {\r\n\t\t\t\t\tthis.selectedFeature = next\r\n\t\t\t\t});\r\n\t\t\t\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\t\t\t\tthis.features = fc;\r\n\t\t\t  \r\n\t\t\t\t\tif (this.features != undefined) {\r\n\t\t\t\t\t  this.featureList = this.features.features;\r\n\t\t\t\t\t}\r\n\t\t\t\t  });\r\n\t\t\t  }\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current);/*console.log(\"AYA\"); console.log(this._forms); console.log(current)*/});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  checkDefault(selectedColor:string){\r\n\tif(selectedColor === \"default\") {\r\n\t\ttry {\r\n\t\t\tselectedColor = this.selectedFeature.styles.color\r\n\t\t} catch (error) {\r\n\t\t\tselectedColor = \"#00C8FF\"\r\n\t\t}\r\n\t}\r\n\treturn selectedColor\r\n  }\r\n\r\n  //Inputs:\r\n  //color:string A 7 digit hexadecimal string (#RRGGBB) passed in from a color tag\r\n  //This method accesses group services to retrive the current group's icon as well\r\n  saveStyles(selectedColor:string, currentID:number){\r\n\tlet icon:string\r\n\tlet payload\r\n\tlet style\r\n\r\n\t//A check to see if the color isn't supposed to be changed\r\n\tselectedColor = this.checkDefault(selectedColor)\r\n\r\n\t//Cycles through each group until it finds one that matches the active group\r\n\tthis.groupList.forEach(group => {\r\n\t\tif ((group.name === this.activeGroup)) {\r\n\t\t\ticon = group.icon\r\n\r\n\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\tlet tempGroup = [{\r\n\t\t\t\tname: group.name,\r\n\t\t\t\tcolor: group.color,\r\n\t\t\t\ticon: group.icon\r\n\t\t\t}]\r\n\t\t\t\r\n\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\tpayload = {\r\n\t\t\t\tgroup: tempGroup,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\tcolor: selectedColor\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstyle = {\r\n\t\t\t\tfaIcon: icon,\r\n\t\t\t\tcolor: selectedColor\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t//Finally, sends the payload and projectID to GeoAPI to update the feature\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, currentID, payload)\r\n\tthis.geoDataService.updateFeatureStyle(this.selectedProject.id, currentID, style)\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current);});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n  userTag: tags = {type: \"text\", groupName: \"car\", label:\"Title\", options: [], feature: \"\", extra: []};\r\n  tagData = []\r\n  checkedOptions = []\r\n  chosenTag = [{option:\"\", id: 0},\"\",\"\"]; //chosen option of both Radio Buttons and Color tags. Radio info is stored at [0], Color at [1]\r\n  notebook = []; //Var for storing note tags\r\n\r\n  saveTag(gName: string, tag: tags, tLabel: string): void{\r\n\tconst index = this.tempData.findIndex(item => item.groupName === gName  && item.label === tLabel && item.feature === tag.feature);\r\n\r\n\tif (index > -1) {\r\n\t\tthis.tempData[index].label = tag.label;\r\n\t}\r\n\telse {\r\n\t\ttag.groupName = gName;\r\n\t\tthis.tempData.push(tag);\r\n\t}\r\n}\r\n\r\ntempData = [];\r\ngetTags(): tags[]{\r\n\tthis.tempData = [];\r\n\tlet count = 0\r\n\r\n\tthis.tempData = this.tagData\r\n\twhile(true){\r\n\t\tconst index = this.tempData.findIndex(item => item.groupName === \"building\" );\r\n\t\t// delete this.exampleNote[index];\r\n\t\tif (index > -1) {\r\n\t\tthis.tempData.splice(index, 1);\r\n\t\t}else{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tconst index = this.tempData.findIndex(item => item.groupName === tag.groupName  && item.label === tag.label && item.feature === tag.feature);\r\n\t\t\t\tif(index == -1){\r\n\t\t\t\t\tthis.tempData.push(tag)\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\r\n\treturn this.tempData;\r\n}\r\n\r\nnewTag: object[] = [];\r\ndeleteTag(gName: string, tag: tags): void{\r\n\r\n\tlet data = this.tempData;\r\n\twhile(true){\r\n\t\tconst index = data.findIndex(item => item.groupName === gName && item.label === tag.label && item.type === tag.type);\r\n\t\t// delete this.exampleNote[index];\r\n\t\tif (index > -1) {\r\n\t\tdata.splice(index, 1);\r\n\t\t}else{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tthis.tempData = data;\r\n\tconsole.log(this.tempData)\r\n}\r\n\r\n\r\noptData = []\r\ndeleteOpt(gName:string, opt:object, tag: tags): void {\r\n\tconst index = this.optData.findIndex(item => item.groupName === gName && item.label === tag.label);\r\n\tif (index > -1) {\r\n\t\tconst ind = this.optData[index].options.findIndex(item => item === opt)\r\n\t\tif (ind > -1){\r\n\t\t\tthis.optData[index].options.splice(ind,1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\naddCheckedOpt(opt:object, id: number, group: string, label:string): void {\r\n\tlet option = { key: opt['key'], label: opt['label'], choice: opt['key'], id: id , group: group, title: label}\r\n\tthis.checkedOptions.push(option)\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tempData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\r\n\t\t\t\t\t\ttag.extra.push(option)\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\ndeleteCheckedOpt(opt:object, id:number, group: string, label: string): void{\r\n\tconst index = this.checkedOptions.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\r\n\tthis.checkedOptions.splice(index,1)\r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t});\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tempData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === id && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group && item.title === label)\r\n\t\t\t\t\t\ttag.extra.splice(index,1)\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\nnewOpt: object[] = [];\r\ngetCheckedOpt(): any[]{\r\n\tthis.newOpt = []\r\n\tfor (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tthis.newOpt.push(tag.extra)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\treturn this.newOpt;\r\n}\r\n\r\n//Functions for radio buttons componentId=0 is for the radio component, componentId=1 is for color\r\nupdateSelectedRadio(selection:string, componentId: number, feature: number, group: string, label: string){ \r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\t\t\t  // code from here is a mess\r\n\t\t\t  //Which means my problem is probably somewhere in here\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tagData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compId'] === componentId && item['groupName'] === group && item['label'] === label);\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = selection\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlet rOption = {option: selection, id: feature, compId: componentId, groupName: group, label: label}\r\n\t\t\t\t\t\t\ttag.extra.push(rOption)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t}\r\n}\r\n\r\n//TODO: Rename this function, it's called getSelectedRadio, but it's used as the getter for every tag type\r\ngetSelectedRadio(): any[] {\r\n\tthis.newOpt = []\r\n\tfor (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tthis.newOpt.push(tag.extra)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\treturn this.newOpt;\r\n }\r\n\r\n//Notes tag functions\r\nupdateNotes(change, componentID: number, feature: number, group:string, label:string){\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(tGroup => {\r\n\t\tif (tGroup.name == group) {\r\n\t\t\tthis.tempGroup = tGroup.features;\r\n\t\t\t\ticon = tGroup.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: tGroup.name,\r\n\t\t\t\t\tcolor: tGroup.color,\r\n\t\t\t\t\ticon: tGroup.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: this.checkDefault(\"default\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t});\r\n\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t  \r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t\tthis.tagData.forEach(tag => {\r\n\t\t\t\t\tif(tag.feature === feature && tag.groupName === group){\r\n\t\t\t\t\t\tconst index = tag.extra.findIndex(item => item['id'] === feature && item['compID'] === componentID && item['groupName'] === group  && item['label'] === label);\r\n\t\t\t\t\t\t// const index = tag.extra.findIndex(item => item.label === opt['label'] && item.id === id && item.group === group)\r\n\r\n\t\t\t\t\t\tif(index > -1){\r\n\t\t\t\t\t\t\t// console.log(tag.extra)\r\n\t\t\t\t\t\t\t// console.log(tag.extra[index])\r\n\t\t\t\t\t\t\ttag.extra[index]['option'] = change\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlet rOption = {option: change, id: feature, groupName: group, compID: componentID, label:label} \r\n\t\t\t\t\t\t\t// console.log(rOption)\r\n\t\t\t\t\t\t\ttag.extra.push(rOption);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t  payload.tag.push(tag)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\tpayload.tag = []\r\n\t\t}\r\n\t// if (index > -1) {\r\n\t// \t// console.log(\"IT WORKED\")\r\n\t// \tthis.notebook[index]['option'] = change\r\n\t// }\r\n\t// else {\r\n\t// \tlet rOption = {option: change, id: feature, groupName: group} \r\n\t// \tthis.notebook.push(rOption);\r\n\t// \t// console.log(this.tagData)\r\n\t// }\r\n}\r\n\r\ngetNotes(): any[]{ return this.notebook }\r\n\r\n}\r\n\r\n\r\n\r\nexport interface tags {\r\n\ttype: string,\r\n\tgroupName: string,\r\n\tlabel: string,\r\n\toptions: Array<Group>,\r\n\tfeature: string | number,\r\n\textra: Array<Group>\r\n}","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature, Project } from 'src/app/models/models';\r\nimport { feature } from '@turf/turf';\r\nimport { GeoDataService } from 'src/app/services/geo-data.service';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { FeatureCollection } from 'geojson';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n  groupList: Array<any>;\r\n  groups$: Subscription;\r\n  tempGroup: Array<Feature>;\r\n  private selectedProject;\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n  newTag: object[] = [];\r\n  newGroup:object[] = [];\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router,\r\n\tprivate geoDataService: GeoDataService,\r\n\tprivate projectsService: ProjectsService,) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t  });\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\tthis.selectedProject = next;\r\n\t\t//retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t\t// this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t//   this.groupsService.setActiveProject(this.featureList[0]);\r\n  \r\n\t\t  // TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t  //\r\n\t\t//   this.groupsService.setGroupProperties(this.featureList);\r\n  \r\n\t\t  // console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t  // this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t\t}\r\n\t  });\r\n\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\", \"Color\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\tlet icon:string\r\n\tlet payload\r\n\t// let formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\t// if (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\t\ticon = group.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: group.name,\r\n\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\ticon: group.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag:[]\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(payload)\r\n\t\t\t\r\n\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log(this.groupList)\r\n\r\n\r\n\t\tconsole.log(this.tempGroup)\r\n\t\tfor (let feat of this.tempGroup) {\r\n\r\n\t\t\t// console.log(this.groupList)\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\t// feat.properties.tag.forEach(tag => {\r\n\t\t\t\t//   this.newTag.push(tag)\r\n\t\t\t\t// });\r\n\t\t\t\tconsole.log(feat.properties)\r\n\t\t\t\tconsole.log(this.activeGroup)\r\n\t\t\t\tif(feat.properties.group.length > 1){\r\n\t\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(tempGroup)\r\n\t\t\t\t\t\tpayload.group.push(tempGroup)\r\n\t\t\t\t\t\t// console.log(this.groupList)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpayload.group = []\r\n\t\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\t\tif(group.name == this.activeGroup){\r\n\t\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(tempGroup)\r\n\t\t\t\t\t\tpayload.group.push(tempGroup)\r\n\t\t\t\t\t\t// console.log(this.groupList)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(\"duck\")\r\n\t\t\t\t\tconsole.log(payload.group)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log(this.newGroup)\r\n\t\t\t// console.log(this.newTag)\r\n\t\t\t  \r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: this.formType,\r\n\t\t\t\tgroupName: this.formName,\r\n\t\t\t\tlabel: this.formLabel,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: [],\r\n\t\t\t\tfeature: feat.id,\r\n\t\t\t\textra: []\r\n\t\t\t}\r\n\t\t\tthis.openOption[this.formLabel] = false;\r\n\r\n\t\t\tif (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\t\t\tlet myOpts = [];\r\n\t\t\t\tfor (const opt of this.formOptions) {\r\n\t\t\t\t  myOpts.push({\r\n\t\t\t\t\tkey: opt[0],\r\n\t\t\t\t\tlabel: opt,\r\n\t\t\t\t\t// image:\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tformItem.options = this.formOptions;\r\n\t\t\t  }\r\n\r\n\t\t\t  payload.tag = this.formsService.getTags();\r\n\r\n\t\t\t  // code from here is a mess\r\n\t\t\t//   if(feat.properties.tag != undefined){\r\n\t\t\t// \tfeat.properties.tag.forEach(tag => {\r\n\t\t\t// \t\tconst index = payload.tag.findIndex(item => item.groupName === tag.groupName  && item.label === tag.label && item.feature === tag.feature);\r\n\t\t\t// \t  \tif(index == -1) {payload.tag.push(tag)}\r\n\r\n\t\t\t// \t});\r\n\t\t\t// }\r\n\r\n\t\t\t// payload.group.push(this.groupList)\r\n\r\n\t\t\t// feat.properties.group.forEach(groupList => {\r\n\t\t\t// \tpayload.group.push(groupList)\r\n\t\t\t// });\r\n\r\n\t\t\t// console.log(this.groupList)\r\n\r\n\t\t\t//   console.log(payload)\r\n\t\t\t//   console.log(feat.id)\r\n\t\t\t// console.log(typeof(formItem))\r\n\t\t\t// payload.tag.push(this.newTag)\r\n\t\t\t// console.log(payload.tag[0])\r\n\t\t\t// console.log(!payload.tag[0].hasOwnProperty(\"groupName\"))\r\n\t\t\t// if(payload.tag[0] == undefined ){\r\n\t\t\t// \tpayload.tag[0] = formItem\r\n\t\t\t// }else{\r\n\t\t\t// \tif(!payload.tag[0].hasOwnProperty(\"groupName\")){payload.tag[0] = formItem}\r\n\t\t\t// \telse {payload.tag.push(formItem)}\r\n\t\t\t// }\r\n\t\t\t// console.log(typeof(payload.tag))\r\n\t\t\tconsole.log(payload)\r\n\r\n\t\t\t// console.log(this.groupList)\r\n\r\n\t\t\tthis.formItemList.push(formItem);\r\n\t\t\t// this.formsService.addForm(this.activeGroup, formItem);\r\n\t\t\t  this.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\t// Clear out the tag section\r\n\t\t\t\r\n\t\t\t// console.log(this.groupList)\r\n\t\t\t\r\n\t\t\tpayload.tag = []\r\n\t\t\tthis.newGroup = []\r\n\t}\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\t  \r\n\t//   console.log(this.featureList)\r\n\t  \r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t// }\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService, tags } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { GeoDataService } from 'src/app/services/geo-data.service';\r\nimport { Feature, FeatureCollection } from 'geojson';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { tag } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  private groupList;\r\n  private selectedProject\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n  tagList: tags[] = this.formsService.getTags();\r\n  newTag: tags[] = [];\r\n  newTagValue = \"\"\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n  tempGroup: Array<Feature>;\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router,\r\n\tprivate projectsService: ProjectsService,\r\n\tprivate geoDataService: GeoDataService,) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\t});\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t\tthis.selectedProject = next;\r\n\t});\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t}\r\n\t  });\r\n\r\n\t  // this is to get the list of tags so far\r\n\t  for (let feat of this.featureList){\r\n\t\t  if(feat.properties.tag != undefined){\r\n\t\t\t  feat.properties.tag.forEach(tag => {\r\n\t\t\t\tthis.newTag.push(tag)\r\n\t\t\t  });\r\n\t\t  }\r\n\t  }\r\n\t  console.log(this.tagList)\r\n\t  console.log(this.newTag)\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n  \r\n  deleteTag(gName: string, tag: tags){\r\n\tlet data = this.tagList;\r\n\twhile(true){\r\n\t\tconst index = data.findIndex(item => item.groupName === gName && item.label === tag.label && item.type === tag.type);\r\n\t\t// delete this.exampleNote[index];\r\n\t\tif (index > -1) {\r\n\t\tdata.splice(index, 1);\r\n\t\t}else{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.tagList = data;\r\n\r\n\tlet icon:string\r\n\tlet payload\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\t\ticon = group.icon\r\n\t\r\n\t\t\t\t//Creates a temporary group with a copy of the current groups info\r\n\t\t\t\tlet tempGroup = [{\r\n\t\t\t\t\tname: group.name,\r\n\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\ticon: group.icon\r\n\t\t\t\t}]\r\n\t\t\t\t\r\n\t\t\t\t//And adds the temp group to a payload along with the necessary style infromation\r\n\t\t\t\tpayload = {\r\n\t\t\t\t\tgroup: tempGroup,\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfaIcon: icon,\r\n\t\t\t\t\t\tcolor: '#00C8FF'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttag: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (let feat of this.tempGroup){\r\n\r\n\t\t\tif(feat.properties.tag != undefined || feat.properties.tag != []){\r\n\t\t\t\tfeat.properties.group.forEach(group => {\r\n\t\t\t\t\tif(feat.properties.group.length > 1){\r\n\t\t\t\t\t\tif(group.name != this.activeGroup){\r\n\t\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpayload.group = []\r\n\t\t\t\t\t\tif(group.name == this.activeGroup){\r\n\t\t\t\t\t\t\tlet tempGroup = {\r\n\t\t\t\t\t\t\t\tname: group.name,\r\n\t\t\t\t\t\t\t\tcolor: group.color,\r\n\t\t\t\t\t\t\t\ticon: group.icon\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpayload.group.push(tempGroup)}\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tconsole.log(data)\r\n\t\t\tpayload.tag = data;\r\n\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), payload)\r\n\t\t\tpayload.tag = []\r\n\t\t}\r\n   }\r\n\r\n  //submits a tag's name change to geoAPI\r\n\trenameTag(tagLabel) {\r\n\t\tlet activeTag = this.tagList.find(tag => tag.label === tagLabel)\r\n\t\tlet activeFeature = this.featureList.find(feature => feature.id === +activeTag.feature)\r\n\r\n\t\t//Remove any tags not in the active group from the working tag list\r\n\t\tlet oldTags = this.tagList.filter(item =>  item.groupName == this.activeGroup )\r\n\r\n\t\t//update the name of every tag that needs changing\r\n\t\toldTags.forEach(tag => {\r\n\t\t\tif ( tag.label == tagLabel ) {\r\n\t\t\t\ttag.label = this.newTagValue\r\n\t\t\t}\r\n\t\t})\r\n\t\t//Reset newTagValue for the next rename\r\n\t\tthis.newTagValue = ''\r\n\r\n\t\t//Update each feature's tag list and send it to the API for update\r\n\t\tthis.featureList.forEach(feature =>{\r\n\t\t\tfeature.properties.tag = oldTags\r\n\t\t\tthis.geoDataService.updateFeatureProperty(activeFeature.project_id, feature.id, feature.properties)\r\n\t\t})\r\n\r\n\t\tthis.dialog.closeAll() //Ensures the window closes when using enter-submission\r\n  \t}\r\n\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\tconsole.log(this.tagList)\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\tconsole.log(this.tagList)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { SystemSummary} from 'ng-tapis';\r\n//import { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n  public lastSystem:SystemSummary //The last filesystem the user was browsing\r\n  public lastFile:RemoteFile; //The last directory the user was browsing\r\n  public noPreviousSelections:boolean\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string, offset: number, limit: number) {\r\n    return this.tapis.filesList({systemId: system, filePath: path, offset, limit});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n\r\n  //Saves the current file directory and file system to Local Storage\r\n  saveState() {\r\n    let sysStr = JSON.stringify(this.lastSystem)\r\n    let fileStr = JSON.stringify(this.lastFile)\r\n    window.localStorage.setItem(\"system\", sysStr)\r\n    window.localStorage.setItem(\"file\", fileStr)\r\n  }\r\n\r\n  //Attempts to retrieve the last used state\r\n  getState() {\r\n    try {\r\n      this.lastSystem = JSON.parse(window.localStorage.getItem(\"system\"));\r\n      this.lastFile = JSON.parse(window.localStorage.getItem(\"file\"));\r\n      this.noPreviousSelections = this.lastFile == null;\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public selectedPath;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public retrievalError = false;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  private offset:number;\r\n  public firstFileIndex: number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t//retrive state data\r\n\t//this.tapisFilesService.getState()\r\n\r\n\t// This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.tapisFilesService.lastSystem\r\n\r\n\tif (this.selectedSystem == null) {\r\n\t\tthis.selectedSystem = this.myDataSystem\r\n\t\tthis.tapisFilesService.lastSystem = this.myDataSystem\r\n\t}\r\n\r\n\t//If the user has already navigated to a folder, restore those options\r\n\tthis.currentDirectory = this.tapisFilesService.lastFile\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\t//If the user hasn't yet opened the file browser, set the last file to an init file.\r\n\tif ( this.tapisFilesService.noPreviousSelections) {\r\n\t\tthis.selectedSystem = this.myDataSystem;\r\n\t\tthis.tapisFilesService.lastFile = init\r\n\t\tthis.tapisFilesService.noPreviousSelections = false\r\n\t}\r\n\tthis.browse(this.tapisFilesService.lastFile);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.selectedSystem = system\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tthis.selectedPath = file.path\r\n\tthis.selectedSystem = this.selectedSystem //Self-assignment keeps the system name from disappearing while browsing subfolders\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\tthis.tapisFilesService.lastFile = file //Updates the last directory visted\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  toRoot() {\r\n\tlet pth;\r\n\tthis.selectedSystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: this.selectedSystem.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init)\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalFileBrowserComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalFileBrowserComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.retrievalError = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\t//If retrieving the files from DesignSafe bugs out due to the site being down, this is where it ends up\r\n\t\tthis.retrievalError = true;\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(event: any, file: RemoteFile, index: number) {\r\n\tif (event.shiftKey) {\r\n\t\tthis.selectFilesShiftClick(index, file);\r\n\t  }\r\n\telse {\r\n\t\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t\t\tthis.addSelectedFile(file, index);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  selectFilesShiftClick(index: number, file: RemoteFile) {\r\n    // this.selectedFiles.clear();\r\n    this.selectShift(index, file);\r\n  }\r\n\r\n\r\n  addSelectedFile(file: RemoteFile, index: number) {\r\n\tif (index != -1) {\r\n\t\tthis.firstFileIndex = index;\r\n\t  }\r\n\r\n\tif(this.tapisFilesService.checkIfSelectable(file)){\r\n\t\tif (this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.selectedFiles.delete(file.path);\r\n\t\t} else {\r\n\t\t\tthis.selectedFiles.set(file.path, file);\r\n\t\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t\t}\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tthis.tapisFilesService.saveState()\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.tapisFilesService.saveState()\r\n\tthis.tapisFilesService.lastSystem = this.selectedSystem\r\n\tthis.dialogRef.close()\r\n  }\r\n\r\n  selectAll(){\r\n\t  let indexTmp = -1\r\n\t  let count = 0\r\n\t  for(let file of this.filesList){\r\n\t\tif (! this.selectedFiles.has(file.path)) {\r\n\t\t\tthis.select(\"\",file,indexTmp)\r\n\t\t\tcount += 1\r\n\t\t}\r\n\t  }\r\n\t  if (count == 1){\r\n\t\tthis.selectedFiles.clear();\r\n\t  }\r\n  }\r\n\r\n  selectShift(index: number, file: RemoteFile) {\r\n    if (this.firstFileIndex != undefined && this.firstFileIndex != index) {\r\n      this.addRangeFiles(this.firstFileIndex, index, true);\r\n    } else {\r\n      this.addSelectedFile(file, index);\r\n    }\r\n  }\r\n\r\n  addRangeFiles(firstFileIndex: number, lastFileIndex: number, again: boolean) {\r\n    let maxIndex = Math.max(firstFileIndex, lastFileIndex);\r\n    let minIndex = Math.min(firstFileIndex, lastFileIndex);\r\n\r\n    for (let i = minIndex; i < maxIndex + 1; ++i) {\r\n      this.addSelectedFile(this.filesList[i], -1);\r\n    }\r\n\r\n    if (again) {\r\n      this.addSelectedFile(this.filesList[firstFileIndex], -1);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n\t\r\n  static limit = 200; //Limits maximum amount of files displayed\r\n\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n  private offset:number;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.offset = 0\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tlet hasMoreFiles = (this.offset % ModalDownloadSelectorComponent.limit) === 0\r\n\r\n\tif (this.inProgress || !hasMoreFiles){\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path, this.offset, ModalDownloadSelectorComponent.limit)\r\n\t.subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t\t  this.offset = this.offset + files.length\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project, ProjectRequest } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  public readonly onClose: Subject<any> = new Subject<any>();\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close(project: Project) {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\t//Watch content we can set to false, for our project, we don't need this yet.\r\n\t//Watch content refers to syncing files created in a folder with a hazmapper map\r\n\t//Set observable to true, Hazmapper doesn't let users define that value for some reason.\r\n\tconst proj = new Project();\r\n\tconst projRqst = new ProjectRequest();\r\n\r\n\t//Retrieve project name and description\r\n\tproj.description = this.projCreateForm.get('description').value;\r\n\tproj.name = this.projCreateForm.get('name').value;\r\n\r\n\tprojRqst.project = proj\r\n\r\n\tthis.projectsService.create(projRqst)\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n  onlyOne:boolean; //if only one user is present == TRUE \r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n      this.onlyOne = (this.projectUsers.length == 1)\r\n      console.log(this.onlyOne)\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project, ProjectRequest } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    //The project is being properly assembled, but the problem is that the returned project isn't updating.\r\n    //Do I need more data in my projects?\r\n    /*\r\n      export interface Project {\r\n      description: string;\r\n      id?: number;\r\n      name: string;\r\n      ds_id?: string;\r\n      title?: string;\r\n      uuid?: string;\r\n      public?: boolean;\r\n      system_file?: string;\r\n      system_id?: string;\r\n      system_path?: string;\r\n      deleting?: boolean;\r\n      deletingFailed?: boolean;\r\n    }\r\n     */\r\n    const p = new Project();\r\n    const projRqst = new ProjectRequest();\r\n\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    \r\n    projRqst.project = p\r\n\r\n    this.projectsService.update(projRqst);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport { NotificationsService } from 'src/app/services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n  itemsSelected:boolean = false;\r\n  foundFilePaths = []\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService,\r\n\t\t\t  private notificationsService: NotificationsService) {}\r\n\r\n  ngOnInit() {\r\n\t  this.filesService.getState()\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\t  console.log(this.features)\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\t(this.notificationsService.notifications.subscribe(next => {\r\n\t\tlet hasSuccessNotification = next.some(note => note.status === 'success');\r\n\t\tlet hasFailureNotification = next.some(note => note.status === 'error');\r\n\t\tif (hasSuccessNotification) {\r\n\t\t  this.geoDataService.getFeatures(this.selectedProject.id);\r\n\t\t  console.log(\"Features Got\")\r\n\t\t}\r\n\t\tif (hasFailureNotification) {\r\n\t\t\tnext.forEach(item => {\r\n\t\t\t\t//Compiles a list of all necessary files to import via the alt method\r\n\t\t\t\t//The substring from 0 to 16 contains the phrase \"Error importing\", everything after this is the file path\r\n\t\t\t\tif( (item.message.substring(0,16) == \"Error importing \") && !( this.foundFilePaths.some(filePath => filePath === item.message.substring(16)) ) ) {\r\n\t\t\t\t\tlet path = item.message.substring(16)\r\n\t\t\t\t\tthis.geoDataService.uploadNewFeature(this.selectedProject.id, this.createBlankFeature(), path)\r\n\t\t\t\t\tthis.foundFilePaths.push(path)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n\t\t}\r\n\t}));\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tlet lastProj\r\n\t\ttry {\r\n\t\t\t//restores view to the last visited project from local storage\r\n\t\t\tlastProj = JSON.parse(window.localStorage.getItem(\"lastProj\"))\r\n\t\t\tconsole.log(lastProj)\r\n\t\t} catch (error) {\r\n\t\t\tlastProj = this.projectsService.setActiveProject(this.projects[0]);\r\n\t\t}\r\n\r\n\t\t//If lastProj is null, then there is no project saved, or can be found, default to the first project in the list\r\n\t\tif(lastProj == \"none\" || lastProj == null) {\r\n\t\t\tlastProj = this.projects[0];\r\n\t\t}\r\n\r\n\t\tthis.projectsService.setActiveProject(lastProj);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.itemsSelected.subscribe((next) => {\r\n\t\tthis.itemsSelected = next;\r\n\t  })\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  clearAll(){\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.groupsService.setItemsSelected(false);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  //Similar to setLiveRefresh, but it runs the time out once and then unsubscribes from the timer\r\n  startRefreshTimer(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); this.setLiveRefresh(false)}) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\t//Refreshes the list of found paths used in importing images without Geo tagging\r\n\tthis.foundFilePaths = []\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t});\r\n}\r\n\r\n  //Creates a feature with a long/lat value of 0,0 and no associated image.\r\n  //I think if we want a placeholder image, we can add it here.\r\n  createBlankFeature() {\r\n\tlet blankFeature:Feature = {\r\n\t\t\"type\": \"Feature\",\r\n\t\t\"geometry\": {\r\n\t\t  \"type\": \"Point\",\r\n\t\t  \"coordinates\": [0, 0]\r\n\t\t},\r\n\t\t\"properties\": {\r\n\t\t}\r\n\t  }\r\n\treturn blankFeature\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\tthis.dialog.afterAllClosed.subscribe((resp) =>{\r\n\t\t//Close the sidebar and return to the gallery screen if the sidebar's open\r\n\t\tif(this.showSidebar){\r\n\t\t\tthis.openSidebar()\r\n\t\t}\r\n\t})\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tlet modal = this.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0])\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  icon: \"fa-house-damage\"\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\tconsole.log(this.groupList)\r\n\t\tconsole.log(this.tempGroup)\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\t\t  console.log(feat.properties)\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t  icon: \"fa-house-damage\"\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n\tthis.dialog.closeAll()\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tif( !this.showSidebar) {\r\n\t\tthis.scrollService.setScrollPosition()\r\n\t} else {\r\n\t\tthis.scrollService.setScrollRestored(true)\r\n\t}\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\t\r\n\tthis.reloadFeatures();\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  //This is unused\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  //What there is TODO with this, I don't know. Probably nothing at all...\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"FeatureID,longitude,latitude,src\"\r\n\t  let JSONHolder:String = \"\"\r\n\t  let projID = \"\"\r\n\t  let tagsPresent = true\r\n\t  let headerComplete = false //If true, then the full csv header info has been compiled\r\n\t  let headerTagOptions = 0 //Controls how many tagOption columns are in the final CSV\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet group, styles, tag\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tgroup = element.properties['group']\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tgroup = [{\r\n\t\t\t\t\t\t\"color\": \"#000000\",\r\n\t\t\t\t\t\t\"name\": \"N/A\",\r\n\t\t\t\t\t\t\"icon\": \"fa-house-damage\"\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\tstyles = element.properties['style']\r\n\t\t\t\t} catch{\r\n\t\t\t\t\tstyles = []\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\ttag = element.properties['tag']\r\n\t\t\t\t} catch{\r\n\t\t\t\t\ttag = []\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If groups are present on the data, add header data\r\n\t\t\t\tif( group.length > 0 && !headerComplete){\r\n\t\t\t\t\tCSVHolder += \",groupName,groupColor,groupIcon\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Check if the tag var has any data, if so, add new lines to the header\r\n\t\t\t\tif ( tag != undefined && tagsPresent && !headerComplete) {\r\n\t\t\t\t\t//Add a few more lines to the holder to accomodate tags\r\n\t\t\t\t\tCSVHolder += \",Icon,Color,tagType,tagSelection\"\r\n\t\t\t\t\ttag.forEach(tag => {\r\n\t\t\t\t\t\tlet tempTagOptionNum = 0\r\n\t\t\t\t\t\ttag.options.forEach(option => {\r\n\t\t\t\t\t\t\ttempTagOptionNum++\r\n\t\t\t\t\t\t\tif (tempTagOptionNum > headerTagOptions) {\r\n\t\t\t\t\t\t\t\tCSVHolder += \",tagOption\"\r\n\t\t\t\t\t\t\t\theaderTagOptions = tempTagOptionNum\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!headerComplete) {\r\n\t\t\t\t\t\tCSVHolder += \"\\r\\n\"\r\n\t\t\t\t\t\ttagsPresent = false\r\n\t\t\t\t\t\theaderComplete = true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(!headerComplete) {\r\n\t\t\t\t\t//If not, indent the last line.\r\n\t\t\t\t\tCSVHolder +=\"\\r\\n\"\r\n\t\t\t\t\theaderComplete = true\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error) {}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Compile the data it into a JSON\r\n\t\t\t\tJSONHolder += this.compileJSON(coordinates, element.id, featureSource, group, tag, styles) + \", \\n\"\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\t\t\t\t\r\n\t\t\t\t//If there is no groups for the feature, output without group info\r\n\t\t\t\tif( group == undefined ){\r\n\t\t\t\t\t//Indents CSV header.\r\n\t\t\t\t\tCSVHolder +=\"\\r\\n\"\r\n\t\t\t\t\t//Compiles data to a line of a CSV, and adds it to a growing full CSV file\r\n\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \"\\r\\n\"\r\n\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgroup.forEach(group => {\r\n\t\t\t\t\t\tconsole.log(group)\r\n\t\t\t\t\t\t//If tags exist, try to add each tag to the CSV\r\n\t\t\t\t\t\tif ( tag != undefined) {\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\ttag.forEach(tag => {\r\n\t\t\t\t\t\t\t\t//If the tag is in the group, compile a row\r\n\t\t\t\t\t\t\t\t//TODO: If a group doesn't have a tag, it doesn't get printed at all\r\n\t\t\t\t\t\t\t\tif(true){//(tag.groupName === group.name) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(tag);\r\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\r\n\t\t\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\t\t   Icon\t\t\t\t\t Color\r\n\t\t\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \",\" + styles.faIcon + \",\" + styles.color + \",\"\r\n\t\t\t\t\t\t\t\t\t// tagType\t\t\ttagOption(This is repeated a lot)\r\n\t\t\t\t\t\t\t\t\t+ tag.type + \",\" + tag.extra[0].option\r\n\t\t\t\t\t\t\t\t\ttag.options.forEach(option => {\r\n\t\t\t\t\t\t\t\t\t\t//Save each option in the tag to the CSV\r\n\t\t\t\t\t\t\t\t\t\t//Adds just the label to the CSV, we can reconstruct the key from that.\r\n\t\t\t\t\t\t\t\t\t\ttempCSV += \",\" + option.label\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\ttempCSV += \"\\r\\n\"\r\n\t\t\t\t\t\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} catch{\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t//If the above fails, attempt to construct a line with group data\r\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\r\n\t\t\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\r\n\t\t\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \"\\r\\n\"\r\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\t//If all else fails, It writes no data on an error, so output the groupless data\r\n\t\t\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \"\\r\\n\"\r\n\t\t\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//Compiles data to a line of a CSV\r\n\t\t\t\t\t\t\t//\t\t\t  featureID\t\t\t Longitude\t\t\t\tLatitude\t\t\t   src\r\n\t\t\t\t\t\t\tlet tempCSV = element.id + \",\" + coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\"\r\n\t\t\t\t\t\t\t//groupName\t\t\tgroupColor\t\t\tgroupIcon\r\n\t\t\t\t\t\t\t+ group.name+ \",\" + group.color + \",\" + group.icon + \"\\r\\n\"\r\n\t\t\t\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\r\n  \tcompileJSON(coordinates, featureID, featureSource:string, groups = [], tags = [], style){\r\n\t\tlet compiledJSON = ''\r\n\t    let transferJSON\r\n\r\n\t\t//Add the most basic information to the compiled JSON\r\n\t\ttransferJSON = {\r\n\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\"src\": featureSource\r\n\t\t}\r\n\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\r\n\t\tif( groups.length != 0 ){\r\n\t\t\tgroups.forEach(group => {\r\n\t\t\t\t//At this point, group info should be added, \r\n\t\t\t\t//If tags are set to a default value, there are none present, compile without tag information\r\n\t\t\t\ttransferJSON = {\r\n\t\t\t\t\t\"groupName\": group.name,\r\n\t\t\t\t\t\"groupColor\": group.color\r\n\t\t\t\t}\r\n\t\t\t\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\t\t\t\tif( tags.length > 0) { //Compile a JSON with full tag information\r\n\t\t\t\t\ttags.forEach( tag => {\r\n\t\t\t\t\t\tif ( tag.feature == featureID ) {\r\n\t\t\t\t\t\t\ttransferJSON = {\r\n\t\t\t\t\t\t\t\t\"icon\": style.faIcon,\r\n\t\t\t\t\t\t\t\t\"icon color\": style.color,\r\n\t\t\t\t\t\t\t\t\"tag name\": tag.label,\r\n\t\t\t\t\t\t\t\t\"tag type\": tag.type,\r\n\t\t\t\t\t\t\t\t\"tag selection\": tag.extra[0].option,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t//If the above failed, compile the minimum JSON\r\n\t\tif( compiledJSON == \"\" ){\r\n\t\t\ttransferJSON = {\r\n\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\"src\": featureSource\r\n\t\t\t}\r\n\t\t\tcompiledJSON += JSON.stringify(transferJSON)\r\n\t\t}\r\n\t\treturn compiledJSON\r\n\t}\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\t//Its a quirk of those browsers that they don't allow same-page downloads\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {AfterViewChecked, Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCreateProjectComponent } from '../modal-create-project/modal-create-project.component';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit, AfterViewChecked {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private scrollService: ScrollService) { }\r\n\r\n  \r\n\r\n  ngAfterViewChecked() {\r\n\tif ( this.scrollService.scrollRestored) {\r\n\t\tthis.scrollService.scroll()\r\n\t}\r\n  }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t  this.loaded = e;\r\n\t}, error => {\r\n\t\tthis.projectsExist = false;\r\n\t  });\r\n\r\n\t//I think doing a more natural refresh in here will cause a dynamic reload\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t\tthis.featureList = fc.features.filter(feature => {\r\n\t\t\t  try{\r\n\t\t\t\treturn feature.assets[0].asset_type === \"image\";\r\n\t\t  \t  } catch (error) {\r\n\t\t\t\t//If a feature has no asset, it ends up in this catch\r\n\t\t\t  \tconsole.error(error)\r\n\t\t\t\t//After outputting the error, add an \"image not found\" placeholder,\r\n\t\t\t\t//Allowing users to still select their errored import\r\n\t\t\t\tfeature.assets.push({\r\n\t\t\t\t\t\"path\": \"../../images/Image-not-found.png\"\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t  \t  }\r\n\t\t\t});\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t} else {\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t\t//If scrollSum is larger than the length of the feature list, curtail it to just be the length\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n\r\n  \r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormsService, tags } from 'src/app/services/forms.service';\r\nimport { ScrollService } from 'src/app/services/scroll.service';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false; //Controls the whether or not an image box is selected or not\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  tagList: tags[] = this.formsService.getTags();\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private formsService: FormsService,\r\n\t\t\t   private dialog: MatDialog,\r\n\t\t\t   private scrollService: ScrollService\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource\r\n\tif( this.feature.assets[0].path != \"../../images/Image-not-found.png\") {\r\n\t\tfeatureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\t} else {\r\n\t\tfeatureSource = this.feature.assets[0].path\r\n\t}\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\t// console.log(this.groupList)\r\n\t\t\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t\t// console.log(e)\r\n\t\t\te.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t  this.tempGroup = []\r\n\t}\r\n\tthis.status = !this.status;\r\n\tif(this.status) {\r\n\t\tthis.groupsService.setItemsSelected(this.status)\r\n\t}\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t  this.groupsService.setItemsSelected(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\tconst geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n\t//Resets contents of temp group\r\n\tthis.groupsService.addTempGroup([])\r\n\tthis.scrollService.setScrollRestored(true)\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\tthis.scrollService.setScrollPosition()\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\t// console.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\tthis.scrollService.setScrollPosition()\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string, feat: Feature) {\r\n\tlet color = \"\";\r\n\tlet icon = \"\"\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\t//   console.log(this.feature)\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t\ticon = e.icon\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = feat.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t  icon: icon,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t\ticon: icon,\r\n\t  });\r\n\t}\r\n\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t\tthis.tempGroup = e.features;\t\r\n\t\t}\r\n\t\t});\r\n\t\r\n\tfor (let tag of this.tagList){\r\n\t\tif (tag.feature === this.tempGroup[0].id && tag.groupName === name){\r\n\t\t\tlet formItem: tags = {\r\n\t\t\t\ttype: tag.type,\r\n\t\t\t\tgroupName: name,\r\n\t\t\t\tlabel: tag.label,\r\n\t\t\t\t// value: this.formValue,\r\n\t\t\t\t// required: this.formRequired,\r\n\t\t\t\toptions: tag.options,\r\n\t\t\t\tfeature: this.feature.id,\r\n\t\t\t\textra: []\r\n\t\t\t}\r\n\t\t\tthis.formsService.saveTag(this.activeGroup, formItem, formItem.label)\r\n\t\t}\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\t//Yes, I know there are two identical lines here. It doesn't work unless it does it twice\r\n\t//I don't know why that is, but if you can figure out a better way, go ahead.\r\n\tthis.geoDataService.getFeatures(Number(feat.project_id));\r\n\tthis.geoDataService.getFeatures(Number(feat.project_id));\r\n  }\r\n\r\n  addGroups(name: string) {\r\n\t  this.tempGroup.forEach( (feat) => {\r\n\t\t  this.selectGroupForm(name, feat)\r\n\t  })\r\n\t  this.groupsService.setUnselectAll(true);\r\n\t  this.scrollService.setScrollRestored(true)\r\n\t}\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n  checked: boolean = false;\r\n  checkedOpt: object [] = this.formsService.getCheckedOpt();\r\n  colorArray: Array<string> = []\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  // console.log(this.formsService.getCheckedOpt())\r\n  // this.formsService.addCheckedOpt(this.field.options[0]);\r\n\r\n  // this.field.options.forEach(function (value) {\r\n    \r\n  // console.log(\"GOT HERE\")\r\n  //   if(this.formsService.getCheckedOpt().length != 0){\r\n  //     console.log(\"GOT HERE\")\r\n  //     const index = this.formsService.getCheckedOpt().findIndex(item => item === value);\r\n  //     if (index > -1){\r\n  //       this.checked = true\r\n  //     }\r\n  //   }});\r\n\r\n  //   console.log(\"GOT HERE\")\r\n  \r\n    this.generateColors()\r\n  }\r\n \r\n  //Generates a key:value list of colors ranging from green (#00FF00) to red (#FF0000) based on passed in info\r\n  generateColors(){\r\n    let itemCount = this.field.options.length\r\n    let isOdd = false\r\n    if( itemCount % 2 === 1 ) {\r\n      //if there are an odd number of items in the collection, mark it and decriment the counter\r\n      isOdd = true\r\n      itemCount --\r\n    }\r\n    //Subtract 2 from item count (first entry is always green, #00FF00, last entry is always red, #FF0000\r\n    //Then half the item count, and use it to divide 255, this gives the amount we have to increment the colors\r\n    itemCount = (itemCount - 2)/2\r\n    let incrementVal = Math.floor(255/itemCount)\r\n    if (incrementVal === 255) { incrementVal = Math.floor(incrementVal/2) }\r\n    this.colorArray.push(\"#00FF00\")\r\n    let baseNum = 0\r\n    let temp\r\n    //First loop, counts up from zero towards 255\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum + incrementVal\r\n      temp = baseNum.toString(16)\r\n      this.colorArray.push(`#${temp}FF00`)\r\n    }\r\n    //if there is an odd number of selections, push full yellow as a midpoint in the gradient\r\n    if( isOdd ) { this.colorArray.push(\"#FFFF00\"); }\r\n    baseNum = 255 //Resets baseNum to 255 for the count down\r\n    //Second loop, counts down from 255 towards zero\r\n    for (let index = 0; index < itemCount; index++) {\r\n      baseNum = baseNum - incrementVal\r\n      temp = baseNum.toString(16)\r\n      if (temp.length != 2) { temp = \"0\" + temp; }\r\n      this.colorArray.push(`#FF${temp}00`)\r\n    }\r\n    //Finally, pushes the color code for red onto the stack for the last entry\r\n    this.colorArray.push('#FF0000')\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  // get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService} from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { templateJitUrl } from '@angular/compiler';\r\nimport { Feature, tag } from '@turf/turf';\r\nimport { group } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n  features: FeatureCollection;\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n  \r\n  currentIcon: string = \"fa-house-damage\";\r\n  choice: string;\r\n  tempGroup: Array<Feature>;\r\n\r\n  iconList: Array<any> = [{\"id\":\"fa-house-damage\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf6f1; house-damage\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-car\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1b9; car\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-tree\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1bb; tree\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-archway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf557; archway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-building\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ad; building\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bus\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf207; bus\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-church\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf51d; church\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-helicopter\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf533; helicopter\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hospital-alt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf47d; hospital\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-hotel\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf594; hotel\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-igloo\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf7ae; igloo\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-motorcycle\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21c; motorcycle\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-place-of-worship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf67f; place-of-worship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-plane\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf072; plane\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-school\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf549; school\"},\r\n\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-rocket\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf135; rocket\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-ship\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf21a; ship\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shopping-cart\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf07a; shopping-cart\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-shuttle-van\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5b6; shuttle-van\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-monument\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf5a6; monument\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-store\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf54e; store\"},\r\n\r\n\t\t\t\t\t\t\t{\"id\":\"fa-subway\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf239; subway\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-taxi\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf1ba; taxi\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-train\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf238; train\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0d1; truck\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-truck-pickup\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf63c; truck-pickup\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-university\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf19c; university\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-warehouse\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf494; warehouse\"},\r\n\t\t\t\t\t\t\t{\"id\":\"fa-bolt\",\r\n\t\t\t\t\t\t\t\"unicode\": \"&#xf0e7; bolt\"},\r\n\t\t\t\t\t\t];\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t\tthis.features = fc;\r\n  \r\n\t\tif (this.features != undefined) {\r\n\t\t  this.featureList = this.features.features;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup(name: string) {\r\n\r\n\tlet data = this.formsService.getTags();\r\n\twhile(true){\r\n\t\tconst index = data.findIndex(item => item.groupName === name);\r\n\t\t// delete this.exampleNote[index];\r\n\t\tif (index > -1) {\r\n\t\tdata.splice(index, 1);\r\n\t\t}else{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == name){\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\tthis.groupList = this.groupList.filter(e => e.name != name);\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let feat of this.tempGroup){\r\n\r\n\t\tlet featProp = feat.properties;\r\n\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != name);\r\n\r\n\t\tfeatProp.tag = data\r\n\t\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openIconSelection(template: TemplateRef<any>, name:string){\r\n\tthis.selectedGroup =  name;\r\n\t//Set the default icon to be the group's icon\r\n\tthis.groupList.forEach(e => {\r\n\t\tif (e.name == this.activeGroup) {\r\n\t\t  this.choice = e.icon;\r\n\t\t}\r\n\t  });\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  saveIcon(icon: string){\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.icon = icon;\r\n\t\tthis.tempGroup = e.features;\t\r\n\t  }\r\n\t});\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tlet index = 0\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\t console.log(feat.id)\t\t\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\t\tthis.formsService.saveStyles(\"default\", Number(feat.id))\r\n\t}\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n\r\n  renameGroup(name: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\te.name = name;\r\n\t\tthis.tempGroup = e.features;\r\n\t  }\r\n\tthis.dialog.closeAll()\r\n\t});\r\n\t\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\t//Loops through every feature in tempGroup, trying to match them to the features in the group list\r\n\tfor (let feat of this.tempGroup) {\r\n\t\tlet featProp = feat.properties;\r\n\t\tfeatProp.group.forEach(group => {\r\n\t\t\tif ( group.name == this.selectedGroup ) {\r\n\t\t\t\tgroup.name = name\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Finds every tag with the old group name and changes it to the new name\r\n\t\ttry{\r\n\t\t\tfeatProp.tag.forEach(tag => {\r\n\t\t\t\tif( tag.groupName == this.selectedGroup ) {\r\n\t\t\t\t\ttag.groupName = name\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch {}\r\n\r\n\r\n\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id, Number(feat.id), featProp );\r\n\t}\t\r\n\tthis.groupsService.setActiveGroup(name);\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Feature } from '@turf/turf';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n  tempGroup: Array<Feature>;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup(name: string) {\r\n\t\r\n\tthis.groupList.forEach(group => {\r\n\t\tif (group.name == name){\r\n\t\t\tthis.tempGroup = group.features;\r\n\t\t\tthis.groupList = this.groupList.filter(e => e.name != name);\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let feat of this.tempGroup){\r\n\r\n\t\tlet featProp = feat.properties;\r\n\r\n\t\tfeatProp.group = featProp.group.filter(e => e.name != name);\r\n\t\r\n\t\t\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tthis.tempGroup = group.features;\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup(group.name);\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tfor (let feat of this.tempGroup){\r\n\r\n\tlet featProp = feat.properties;\r\n\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\t}}\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-fields',\r\n  templateUrl: './form-fields.component.html',\r\n})\r\nexport class FormFieldsComponent implements OnInit {\r\n  @Input() field:any;\r\n  @Input() form:any;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  // get isValid() { return true }\r\n  // get isDirty() { return false }\r\n\r\n\r\n  constructor() { }\r\n\r\n  // This file and the HTML connected to this is useless so don't worry about it \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-checkbox',\r\n  templateUrl: 'form-checkbox.component.html'\r\n})\r\nexport class FormCheckBoxComponent {\r\n  @Input() field:any;\r\n  @Input() form:FormGroup;\r\n  isChecked: boolean = false;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n  private activeGroup$: Subscription;\r\n  activeGroup: string;\r\n  // get isValid() { return this.form.controls[this.field.name].valid; }\r\n  // get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  checkedOpt: any [] = this.formsService.getCheckedOpt()\r\n\r\n  ngOnInit() {\r\n    // console.log(this.field)\r\n    // console.log(this.form)\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    \r\n      this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n    });\r\n\r\n    // this code checks if the option has been checked or not\r\n    if(this.formsService.getCheckedOpt().length != 0){\r\n \r\n      let index \r\n      this.checkedOpt.forEach(opt => {      \r\n\r\n        if(opt != undefined){index = opt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label && item.group === this.activeGroup && item.title === this.form['label']);\r\n\r\n          if (index > -1){\r\n            this.isChecked = true\r\n          }}\r\n      })\r\n      // const index = this.checkedOpt.findIndex(item => item.id === this.activeFeatureId && item.label === this.field.label );\r\n\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeFeatureId$.unsubscribe();\r\n    }\r\n\r\n  // adds/deletes to/from the list of checked options\r\n  selected(e:any, option:object){\r\n    if(e.target.checked){\r\n      console.log(\"Checked\")\r\n      this.formsService.addCheckedOpt(option, this.activeFeatureId, this.activeGroup, this.form['label']);\r\n\r\n    }else{\r\n      console.log(\"Unchecked\")\r\n      this.formsService.deleteCheckedOpt(option, this.activeFeatureId, this.activeGroup, this.form['label']);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-dropdown',\r\n  templateUrl: './form-dropdown.component.html',\r\n})\r\n\r\nexport class FormDropDownComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  chosenTag:string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  //The problem is that I don't actually know the shape of the data here, I've never actually looked at the dropdown box, so I don't know how\r\n  //it operates. Is it one value? A list of values? How should I access them? What should be accessed? \r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compId === 2 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.chosenTag = opt[index].option\r\n        }}\r\n      \r\n      \r\n    });\r\n\r\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 2);\r\n    // if (index > -1){\r\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    // }\r\n    \r\n    // console.log(this.chosenTag)\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 2, this.activeFeatureId, this.activeGroup, this.form['label']);}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-file',\r\n  templateUrl: './form-file.component.html',\r\n  styleUrls: ['./form-file.component.scss'],\r\n})\r\nexport class FormFileComponent {\r\n\t@Input() field:any = {};\r\n\t@Input() form:FormGroup;\r\n\tget isValid() { return this.form.controls[this.field.name].valid; }\r\n\tget isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tngOnChange(){\r\n\t  console.log(this.field.value);\r\n\t  // this.field.value.\r\n\t}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n})\r\nexport class FormRadioComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() label:String;\r\n  public chosenTag: string;\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compId === 0 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        if (index > -1){\r\n          this.chosenTag = opt[index].option\r\n        }}\r\n      \r\n      \r\n    });\r\n    // if(this.formsService.getSelectedRadio(0)['id'] === this.activeFeatureId){\r\n    // const index = this.formsService.getSelectedRadio().findIndex(item => item.id === this.activeFeatureId && item.compId === 0);\r\n    // console.log(index)\r\n    // if (index > -1){\r\n    //   this.chosenTag = this.formsService.getSelectedRadio()[index]['option']\r\n    // }\r\n  // }\r\n  }\r\n\r\n  updateCheckedTag(){ this.formsService.updateSelectedRadio(this.chosenTag, 0, this.activeFeatureId, this.activeGroup,this.form['label']);}\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n// text,email,tel,textarea,password,\r\n@Component({\r\n  selector: 'app-form-textbox',\r\n  templateUrl: './form-textbox.component.html',\r\n})\r\nexport class FormTextBoxComponent {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  note:string;\r\n  notes:string = \"notes\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  get isValid() { return this.form.controls[this.field.name].valid; }\r\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      // console.log(opt)\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compID === 3&&item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        // console.log(index)\r\n        if (index > -1){\r\n          // console.log(opt[index].option)\r\n          this.note = opt[index].option\r\n        }\r\n      }\r\n      \r\n      \r\n    });\r\n\r\n    // const index = this.formsService.getNotes().findIndex(item => item.id === this.activeFeatureId);\r\n    // if (index > -1){\r\n    //   this.note = this.formsService.getNotes()[index]['option']\r\n    // }\r\n  }\r\n\r\n  updateNotes(){ \r\n    // console.log(this.form['label'])\r\n    // console.log(this.form.name)\r\n    this.formsService.updateNotes(this.note, 3, this.activeFeatureId, this.activeGroup, this.form['label']); }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormsService } from 'src/app/services/forms.service';\r\nimport { GroupsService } from 'src/app/services/groups.service';\r\n\r\n@Component({\r\n  selector: 'app-form-color',\r\n  templateUrl: './form-color.component.html',\r\n  styleUrls: ['./form-color.component.scss']\r\n})\r\nexport class FormColorComponent implements OnInit {\r\n  @Input() field:any = {};\r\n  @Input() form:FormGroup;\r\n  @Input() color:string;\r\n  @Input() label:String;\r\n\r\n  public chosenTag: string;\r\n  public chosenColor = \"#ffffff\";\r\n  private activeFeatureId$: Subscription;\r\n  activeFeatureId: number;\r\n\r\n  activeGroup: string;\r\n  private activeGroup$: Subscription;\r\n\r\n  constructor(private formsService: FormsService,\r\n    private groupsService: GroupsService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n      this.activeFeatureId = next;\r\n    });\r\n\r\n    this.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n      this.activeGroup = next;\r\n    });\r\n\r\n    let index\r\n    this.formsService.getSelectedRadio().forEach(opt=> {\r\n      if(opt != undefined){\r\n        index = opt.findIndex(item => item.id === this.activeFeatureId && item.compId === 1 && item.groupName === this.activeGroup && item.label === this.form['label']);\r\n        if (index > -1){\r\n          this.chosenTag = opt[index].option\r\n        }\r\n      }\r\n      \r\n      this.chosenColor = this.color \r\n      \r\n    });\r\n  }\r\n\r\n  updateCheckedTag(){ \r\n    this.formsService.saveStyles(this.chosenColor, this.activeFeatureId)\r\n    this.formsService.updateSelectedRadio(this.chosenTag, 1, this.activeFeatureId, this.activeGroup, this.form['label']); }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { FormFieldsComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-fields.component';\r\nimport { FormCheckBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-checkbox/form-checkbox.component';\r\nimport { FormDropDownComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-dropdown/form-dropdown.component';\r\nimport { FormFileComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-file/form-file.component';\r\nimport { FormRadioComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-radio/form-radio.component';\r\nimport { FormTextBoxComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-textbox/form-textbox.component';\r\nimport { FormColorComponent } from './components/side-bar/tag-images/form-generator/form-fields/form-color/form-color.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tFormFieldsComponent,\r\n\tFormCheckBoxComponent,\r\n\tFormDropDownComponent,\r\n\tFormFileComponent,\r\n\tFormRadioComponent,\r\n\tFormTextBoxComponent,\r\n\tModalShareProjectComponent,\r\n\tFormColorComponent\r\n\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tToastrModule.forRoot(),\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t  <div class=\\\"subitem-scroll\\\">\\r\\n\\t\\t  <div *ngFor = \\\"let tag of tagList\\\">\\r\\n\\t\\t\\t<div *ngIf = \\\"tag.groupName == activeGroup\\\">\\r\\n\\t\\t\\t\\t<div *ngIf = \\\"tag.feature == activeFeatureId\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">  \\r\\n\\t\\t\\t\\t<div class=\\\"name-group\\\"> {{tag.label}} ({{tag.type}})</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"deleteTag(activeGroup, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- delete button -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- <div *ngIf=\\\"tag.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"openOptionToggle(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t  \\r\\n\\t\\t\\t\\t\\t  </div> three dots -->\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"newTagValue\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tvalue={{tag.label}}\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Rename Form Item\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(keyup.enter)=\\\"renameTag(tag.label)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\" (click)=\\\"renameTag(tag.label)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename modal -->\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- button group -->\\r\\n\\t\\t\\t</div> <!-- form-item-container -->\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"tag.type != 'text' && openOption[tag.label]\\\" class=\\\"options-container\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let opt of tag.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t{{opt.label}}\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div (click)=\\\"formsService.deleteOpt(activeGroup, opt, tag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t  </div>  <!-- delete opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  </div> <!-- rename opt button -->\\r\\n\\r\\n\\t\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"opt.label\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  >Rename</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </ng-template> <!-- rename opt modal -->\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</div> <!-- opt loop-->\\r\\n\\t\\t\\t  </div> <!-- opt container-->\\r\\n\\t\\t\\t  <!-- <app-form-generator [field]=\\\"tagList\\\"></app-form-generator> -->\\r\\n\\t\\t\\t  <app-form-generator [field]=\\\"tag\\\"></app-form-generator>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<!-- <div [formGroup]=\\\"form\\\"> -->\\r\\n<div>\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<ng-container *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  \\t<app-form-textbox [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-textbox>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  \\t<app-form-dropdown [field]=\\\"field.options\\\" [form]=\\\"field\\\"></app-form-dropdown>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\t\\r\\n\\t  \\t<app-form-radio [field]=\\\"opt\\\" [form]=\\\"field\\\" label={{field.label}}></app-form-radio>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<app-form-checkbox [field]=\\\"opt\\\" [form]=\\\"field\\\"></app-form-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'color'\\\">\\r\\n\\t\\t<div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t\\t<app-form-color [field]=\\\"opt\\\" [form]=\\\"field\\\" label={{field.label}} [color]=\\\"colorArray[field.options.indexOf(opt)]\\\"></app-form-color>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\"></div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}