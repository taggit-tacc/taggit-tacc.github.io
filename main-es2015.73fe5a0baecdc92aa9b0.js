(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"/WLi":function(e,t,n){"use strict";n.r(t),t.default='<div>\n  <select\n    class="form-control"\n    [(ngModel)]="value"\n    id="field.name"\n    name="field.name"\n    (change)="updateCheckedTag()"\n  >\n    <option *ngFor="let opt of field" [value]="opt.label">\n      {{ opt.label }}\n    </option>\n  </select>\n</div>\n'},0:function(e,t,n){e.exports=n("zUnb")},"033P":function(e,t,n){"use strict";n.r(t),t.default='<div class="asset-list">\n  <div class="subitem-title" (click)="expandPanel()">Image List</div>\n\n  <div *ngIf="showSubitem" class="subitem asset-subitem">\n    <div\n      *ngFor="let feature of getActiveFeatures()"\n      (click)="jumpToImage(feature)"\n      class="asset-container"\n      [ngClass]="{ highlight: isActiveFeature(feature) }"\n    >\n      <div class="name-group">\n        {{ getFeaturePath(feature) }}\n      </div>\n\n      <div class="button-group">\n        <div (click)="deleteFeature(feature)">\n          <i\n            class="fas fa-minus"\n            matTooltip="Delete"\n            matTooltipPosition="above"\n          >\n          </i>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},"0NOL":function(e,t,n){"use strict";n.r(t),t.default='<h4>Select Files</h4>\n<small\n  ><em>\n    Note: Only files are selectable, not folders. Double click on a folder to\n    navigate into it.\n  </em></small\n>\n<hr />\n<select (ngModelChange)="selectSystem($event)" [(ngModel)]="selectedSystem">\n  <option [ngValue]="myDataSystem">My Data</option>\n  <option [ngValue]="communityDataSystem">Community Data</option>\n  <option [ngValue]="publishedDataSystem">Published Data</option>\n  <optgroup label="My Projects">\n    <option *ngFor="let project of projects" [ngValue]="project">\n      {{ project.description }}\n    </option>\n  </optgroup>\n</select>\n\n<div\n  class="fileslisting"\n  infiniteScroll\n  [infiniteScrollDistance]="2"\n  [infiniteScrollThrottle]="100"\n  [scrollWindow]="false"\n  (scrolled)="getFiles()"\n>\n  <div class="clickable" class="grid-x file-row" (dblclick)="toRoot()">\n    <i class="fas fa-folder"></i>\n    <span> Home </span>\n  </div>\n  <div class="clickable" class="grid-x file-row">\n    <i class="fas fa-folder-open"></i>\n    <span class="lineBreak"> {{ selectedPath }} </span>\n  </div>\n  <div *ngIf="retrievalError" class="grid-x file-row" class="error">\n    Error retrieving files\n  </div>\n  <div\n    class="grid-x file-row"\n    *ngFor="let file of filesList; let fileIndex = index"\n    [ngClass]="{ selected: selectedFiles.has(file.path) }"\n  >\n    <div\n      class="clickable"\n      (click)="select($event, file, fileIndex)"\n      (dblclick)="browse(file)"\n    >\n      <i class="fas fa-folder" *ngIf="file.type === \'dir\'"></i>\n      <i class="far fa-file" *ngIf="file.type !== \'dir\'"></i>\n      <span> {{ file.name }} </span>\n    </div>\n    <div class="size">\n      {{ file.length | filesize }}\n    </div>\n  </div>\n  <div class="grid-x" *ngIf="inProgress">\n    <div class="cell medium-12">\n      <i class="fas fa-spin fa-atom"></i>\n    </div>\n  </div>\n</div>\n\n<div class="button-group">\n  <button mat-raised-button color="basic" (click)="selectAll()">\n    Select all\n  </button>\n  <button\n    mat-raised-button\n    color="warn"\n    class="button warning"\n    (click)="cancel()"\n  >\n    Done\n  </button>\n  <button\n    mat-raised-button\n    color="primary"\n    class="button"\n    [disabled]="!selectedFiles.size"\n    (click)="chooseFiles()"\n  >\n    Import\n  </button>\n</div>\n'},"1NWJ":function(e,t,n){"use strict";n.r(t),t.default=":host .drop-container {\n  background: #fff;\n  border-radius: 6px;\n  height: 150px;\n  width: 100%;\n  box-shadow: 1px 2px 20px rgba(10, 10, 10, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed #c0c4c7;\n}\n:host p {\n  font-size: 16px;\n  font-weight: 400;\n  color: #c0c4c7;\n}\n:host .upload-button {\n  display: inline-block;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: #5754a3;\n}\n:host .upload-button input {\n  display: none;\n}\n:host .dropzone {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border-radius: 5px;\n  background: white;\n  margin: 10px 0;\n}\n:host .dropzone.hovering {\n  border: 2px solid #f16624;\n  color: #dadada !important;\n}\n:host progress::-webkit-progress-value {\n  transition: width 0.1s ease;\n}"},"503e":function(e,t,n){"use strict";n.r(t),t.default='<div [formGroup]="form">\n  <div\n    *ngIf="!field.value"\n    class="drop-container dropzone"\n    dropZone\n    (hovered)="toggleHover($event)"\n    (dropped)="field.onUpload($event)"\n    [class.hovering]="isHovering"\n  >\n    <p class="m-0">\n      Drag a file here or\n      <label class="upload-button">\n        <input\n          type="file"\n          multiple=""\n          (change)="field.onUpload($event.target.files)"\n        />\n        browse\n      </label>\n      to upload.\n    </p>\n  </div>\n  <div *ngIf="field.value">\n    \x3c!-- <button type="button" class="btn btn-primary">Change</button> --\x3e\n    <div class="card">\n      <img class="card-img-top" [src]="field.value" />\n    </div>\n  </div>\n</div>\n'},"6CRC":function(e,t,n){"use strict";n.r(t),t.default=""},"7E2L":function(e,t,n){"use strict";n.r(t),t.default='<h4>Select Files</h4>\n<small\n  ><em>\n    If no folder is selected, the file will be saved in the root of your\n    selected system.\n  </em></small\n>\n<hr />\n<select (ngModelChange)="selectSystem($event)" [(ngModel)]="selectedSystem">\n  <option [ngValue]="myDataSystem">My Data</option>\n  <option [ngValue]="communityDataSystem">Community Data</option>\n  <option [ngValue]="publishedDataSystem">Published Data</option>\n  <optgroup label="My Galleries">\n    <option *ngFor="let project of projects" [ngValue]="project">\n      {{ project.description }}\n    </option>\n  </optgroup>\n</select>\n<div\n  class="fileslisting"\n  infiniteScroll\n  [infiniteScrollDistance]="2"\n  [infiniteScrollThrottle]="100"\n  [scrollWindow]="false"\n  (scrolled)="getFiles()"\n>\n  <div\n    class="grid-x file-row"\n    *ngFor="let file of filesList"\n    [ngClass]="{ selected: selectedFiles.has(file.path) }"\n  >\n    <div class="clickable" (dblclick)="browse(file)">\n      <i class="fas fa-folder" *ngIf="file.type === \'dir\'"></i>\n      <i class="far fa-file" *ngIf="file.type !== \'dir\'"></i>\n      <span> {{ file.name }} </span>\n    </div>\n    <div class="size">\n      {{ file.length | filesize }}\n    </div>\n  </div>\n  <div class="grid-x" *ngIf="inProgress">\n    <div class="cell medium-12">\n      <i class="fas fa-spin fa-atom"></i>\n    </div>\n  </div>\n</div>\n\n<form\n  [formGroup]="downloadSelectForm"\n  (ngSubmit)="update()"\n  id="current-project-form"\n>\n  <div>\n    <small\n      ><em>\n        If no filename is specified, it will default to the Gallery ID number.\n      </em></small\n    >\n  </div>\n\n  <mat-form-field>\n    <input\n      matInput\n      type="text"\n      formControlName="Name"\n      appearance="filled"\n      required="false"\n    />\n  </mat-form-field>\n</form>\n<span class="radio-box">\n  <mat-radio-group [(ngModel)]="fileExtension">\n    <mat-radio-button value=".csv">.csv</mat-radio-button>\n    <mat-radio-button value=".json">.json</mat-radio-button>\n  </mat-radio-group>\n</span>\n\n<div class="button-group">\n  <button\n    mat-raised-button\n    color="warn"\n    class="button warning"\n    (click)="cancel()"\n  >\n    Cancel\n  </button>\n  <button\n    mat-raised-button\n    color="primary"\n    class="button"\n    (click)="chooseFiles()"\n  >\n    Save\n  </button>\n</div>\n'},"8lyn":function(e,t,n){"use strict";n.r(t),t.default=":host .top-bar {\n  height: 40px;\n  padding: 5px;\n  padding-left: 0.5em;\n  flex-wrap: nowrap;\n  position: fixed;\n  overflow: hidden;\n  width: 100%;\n  z-index: 999;\n}\n:host .top-bar-right .top-bar-left {\n  -webkit-box-flex: 0;\n  flex-wrap: nowrap;\n  flex: 0 1 auto;\n  max-width: 100%;\n}\n@media print, screen and (min-width: 40em) {\n  :host .top-bar {\n    flex-wrap: nowrap;\n    flex: 0 1 auto;\n  }\n}"},AZwa:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- <div class="grid-x"> --\x3e\n\n\x3c!--   <div class="top-bar" style="background-color: black" id="navbar"> --\x3e\n\n\x3c!--\t<div class="top-bar-left"> --\x3e\n\x3c!--\t  <img src="assets/logo.svg" width="30PX"> --\x3e\n\x3c!--\t  <span style="color: white">Taggit</span> --\x3e\n\x3c!--\t</div> --\x3e\n\n\x3c!--\t<div class="top-bar-right"> --\x3e\n\x3c!--\t  <div class="light-blue" *ngIf="currentUser">{{ currentUser.username }}</div> --\x3e\n\x3c!--\t</div> --\x3e\n\n\x3c!--   </div> --\x3e\n\n\x3c!--   <\\!-- <div class="cell control-bar"> -\\-> --\x3e\n\x3c!--   <\\!--\t<app-control-bar></app-control-bar> -\\-> --\x3e\n\x3c!--   <\\!-- </div> -\\-> --\x3e\n\x3c!-- </div> --\x3e\n\n<app-control-bar></app-control-bar>\n\x3c!-- NOTE Router Outlet was here --\x3e\n<app-image-gallery></app-image-gallery>\n\n\x3c!-- NOTE Leaflet was here --\x3e\n'},Af46:function(e,t,n){"use strict";n.r(t),t.default="<p>notfound works!</p>\n"},"Ag+R":function(e,t,n){"use strict";n.r(t),t.default=":host {\n  min-height: 20em;\n}\n:host .fileslisting {\n  height: 20em;\n  overflow-y: scroll;\n  padding: 0px 20px;\n}\n:host .file-row {\n  display: flex;\n  background: #f9f9f9;\n  border: 1px solid transparent;\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n}\n:host .clickable {\n  flex: 1;\n  max-width: 20em;\n}\n:host .size {\n  align-items: flex-end;\n}\n:host .file-row:hover {\n  border: 1px solid;\n}\n:host .file-row.selected {\n  background: #d3d3d3;\n}\n:host .mat-radio-button ~ .mat-radio-button {\n  margin-left: 16px;\n}\n:host .radio-box {\n  position: relative;\n  bottom: 45px;\n  left: 45%;\n}"},FN4D:function(e,t,n){"use strict";n.r(t),t.default=""},I57P:function(e,t,n){"use strict";n.r(t),t.default=':host {\n  overflow-y: scroll;\n}\n:host .select-group {\n  overflow: hidden;\n  max-height: 20%;\n}\n:host .subitem-title {\n  text-align: left;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #f1f1f1;\n  display: flex;\n  justify-content: space-between;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #f1f1f1;\n  border-style: solid;\n  overflow-y: scroll;\n  background-color: #ffffff;\n  height: 100%;\n}\n:host .group-subitem {\n  height: 100px;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .boxed input[type=radio] {\n  display: none;\n}\n:host .boxed label {\n  background-color: #fff;\n  transition: all 0.3s;\n}\n:host .boxed input[type=radio]:checked + label {\n  background-color: #b3e5ff;\n}\n:host .group-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .name-group {\n  display: inline-block;\n  padding: 3px;\n}\n:host .button-group {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n}\n:host .button-group div {\n  padding: 3px;\n}\n:host .fa {\n  font-weight: 900;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  font-family: "FontAwesome";\n  line-height: 1;\n}\n:host .fa option {\n  font-weight: 900;\n}'},IElf:function(e,t,n){"use strict";n.r(t),t.default=":host {\n  background-color: #f1f1f1;\n}"},MHpZ:function(e,t,n){"use strict";n.r(t),t.default='<div class="create-prompt">\n  <div class="subitem-title" (click)="expandPanel()">\n    <span> Create Tag </span>\n  </div>\n  \x3c!-- subitem-title --\x3e\n\n  <div *ngIf="showSubitem" class="subitem">\n    <form class="form-type-form">\n      <div\n        *ngFor="let control of enabledControls; let idx = index"\n        class="box form"\n      >\n        <input\n          type="radio"\n          [id]="control"\n          value="control.toLowerCase()"\n          name="form-type"\n          [checked]="idx === 0"\n          (change)="selectInputForm(control.toLowerCase())"\n        />\n        <label\n          style="cursor: pointer; margin: 3px; padding: 3px; font-size: 10px"\n          [for]="control"\n          >{{ control }}</label\n        >\n      </div>\n      \x3c!-- form-type-form --\x3e\n    </form>\n\n    <div class="form-name">\n      <mat-form-field class="input-label-group">\n        <mat-label>Label</mat-label>\n        <input\n          matInput\n          placeholder="Label"\n          #labelValue\n          [(ngModel)]="labelFilter"\n          (keyup)="inputFormLabel($event)"\n          name="labelFilter"\n          class="tiny"\n          type="text"\n        />\n      </mat-form-field>\n\n      <ng-container *ngIf="formType != \'text\'">\n        <ng-container *ngIf="formType == \'color\'">\n          <mat-form-field class="input-label-group">\n            <mat-label>Option Color</mat-label>\n            <input\n              matInput\n              #optionColorValue\n              placeholder="Option Color"\n              #labelValue\n              [(ngModel)]="optionColorFilter"\n              (change)="inputFormColor($event)"\n              name="optionColorilter"\n              class="tiny"\n              type="color"\n            />\n          </mat-form-field>\n        </ng-container>\n\n        <mat-form-field class="input-label-group">\n          <mat-label>Options</mat-label>\n          <div class="input-group">\n            <input\n              matInput\n              #optionValue\n              class="input-group-field"\n              placeholder="Option"\n              type="text"\n              [(ngModel)]="optionFilter"\n              name="optionFilter"\n              (keyup.enter)="\n                addOptionItem(optionValue.value);\n                optionValue.value = \'\';\n                optionColorValue.value = \'\';\n                clearOption();\n                clearOptionColor()\n              "\n            />\n          </div>\n          \x3c!-- input-group --\x3e\n        </mat-form-field>\n\n        <div class="input-group-button">\n          <button\n            mat-button\n            color="accent"\n            class="button"\n            (click)="\n              addOptionItem(optionValue.value);\n              optionValue.value = \'\';\n              clearOption()\n            "\n          >\n            <i class="fas fa-plus"></i>\n          </button>\n        </div>\n        \x3c!-- input-group-button --\x3e\n\n        <ul class="form-option-container">\n          <li *ngFor="let opt of formOptions" class="list-group">\n            <div>\n              {{ opt.label }}\n              <ng-container *ngIf="formType == \'color\'">\n                <svg class="box" width="10px" height="10px">\n                  <rect width="10px" height="10px" style="fill: #ffffff" />\n                  <rect\n                    width="8px"\n                    height="8px"\n                    x="1px"\n                    y="1px"\n                    [style.fill]="opt.color"\n                  />\n                </svg>\n              </ng-container>\n            </div>\n            \x3c!-- showopt --\x3e\n            <div class="button-group">\n              <div (click)="deleteOption(opt)">\n                <i\n                  class="fas fa-minus"\n                  matTooltip="Delete"\n                  matTooltipPosition="above"\n                  style="cursor: pointer"\n                >\n                </i>\n              </div>\n              \x3c!-- delete opt --\x3e\n\n              <div (click)="openRenameOptionModal(renameOptionModal)">\n                <i\n                  class="fas fa-edit"\n                  style="cursor: pointer"\n                  matTooltip="Rename"\n                  matTooltipPosition="above"\n                >\n                </i>\n              </div>\n\n              <ng-template #renameOptionModal>\n                <input matInput #optionRename placeholder="Rename Option" />\n                <br />\n                <br />\n                <div class="button-group">\n                  <button\n                    matDialogClose\n                    mat-raised-button\n                    color="primary"\n                    (click)="renameOption(opt, optionRename.value)"\n                  >\n                    Rename\n                  </button>\n                  <button matDialogClose mat-button>Cancel</button>\n                </div>\n              </ng-template>\n            </div>\n            \x3c!-- button group --\x3e\n          </li>\n        </ul>\n      </ng-container>\n    </div>\n    \x3c!-- form-name --\x3e\n\n    <button mat-raised-button color="primary" (click)="addFormItem()">\n      Save\n    </button>\n    <button mat-button color="primary" (click)="cancelCreate()">Cancel</button>\n  </div>\n  \x3c!-- subitem --\x3e\n</div>\n\x3c!-- create-group --\x3e\n'},N3QO:function(e,t,n){"use strict";n.r(t),t.default=":host .img-list-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 1em;\n  height: 100%;\n  padding: 1em;\n}\n:host #no-img {\n  font-size: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n}\n:host #no-proj {\n  font-size: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n}\n:host #new-proj {\n  font-size: 32px;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n:host app-image-box {\n  height: 100%;\n}\n:host .masonry-item {\n  width: 200px;\n}\n:host img-spin {\n  position: relative;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100px;\n  background: #fff;\n}\n:host load-spin {\n  position: relative;\n  width: 100%;\n  height: 100px;\n  background: #fff;\n}\n:host .side-bar-container {\n  background-color: #f1f1f1;\n  position: fixed;\n  width: 25%;\n  margin-right: 0px;\n  height: calc(100vh - 50px);\n  right: 0;\n}\n:host .success {\n  margin-right: 20%;\n}\n:host .danger {\n  margin-right: 0%;\n}\n:host #gallery-container-container {\n  position: relative;\n  width: 100%;\n  height: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  margin-top: 0px;\n}\n:host #loading-load {\n  position: relative;\n  width: 100%;\n  height: auto;\n  text-align: center;\n  flex-direction: column;\n  margin-top: 50px;\n}\n:host #gallery-container {\n  position: relative;\n  width: 100%;\n  height: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n}\n:host #gallery-container .gallery-image {\n  height: 100%;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n:host #gallery-container .gallery-image img {\n  max-width: 100%;\n  max-height: 100%;\n  margin: 0 auto;\n}\n:host .imager {\n  width: 75%;\n  height: calc(100vh - 50px);\n  background-color: #fefefe;\n}\n:host .view-image {\n  max-width: 100%;\n  height: auto;\n}\n:host .gallery-btn {\n  width: 35px;\n  height: 35px;\n  background: #000;\n  color: #fff;\n  text-align: center;\n  line-height: 35px;\n  cursor: pointer;\n  transition: all 0.4s ease;\n  font-size: 20px;\n  box-sizing: border-box;\n  padding-left: 2px;\n  position: fixed;\n  bottom: 10px;\n}\n:host .gallery-btn:hover {\n  background: #222;\n}\n:host .gallery-close {\n  top: 10px;\n}\n:host .gallery-close .gallery-next {\n  right: 10px;\n}\n:host .gallery-prev {\n  right: 50px;\n}\n:host .gallery-prev .gallery-next {\n  bottom: 10px;\n}\n@media (min-width: 478px) {\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\n    grid-row-end: span 2;\n  }\n}\n@media (max-width: 768px) {\n  :host .img-list-container {\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  }\n}\n@media (max-width: 450px) {\n  :host .img-list-container {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n}"},P1jy:function(e,t,n){"use strict";n.r(t),t.default='<h4>Share this project</h4>\n<small\n  ><em>\n    People you share your project with will have full ability to edit and delete\n    this project on Taggit and on HazMapper.\n  </em></small\n>\n\n<form [formGroup]="projShareForm" (ngSubmit)="submit()" id="share-project-form">\n  <mat-form-field>\n    <mat-label>Username:</mat-label>\n    <input matInput type="text" formControlName="name" required="true" />\n  </mat-form-field>\n\n  <div class="button-group small">\n    <button\n      mat-raised-button\n      color="warn"\n      class="button small warning"\n      type="button"\n      (click)="close()"\n    >\n      Close\n    </button>\n    <button\n      mat-raised-button\n      color="primary"\n      class="button small align-right"\n      type="submit"\n      [disabled]="!projShareForm.valid"\n    >\n      Add Member\n    </button>\n  </div>\n\n  <br />\n  <h5>Current Users</h5>\n  <div *ngFor="let user of projectUsers">\n    <br />\n    <mat-card class="card-container">\n      <span class="card-item">\n        {{ user.username }}\n      </span>\n      <span class="card-buttons">\n        <button\n          mat-raised-button\n          color="warn"\n          class="button small warning"\n          type="button"\n          [disabled]="onlyOne"\n          (click)="delete(user.username)"\n        >\n          <i class="fas fa-trash"></i>\n        </button>\n      </span>\n    </mat-card>\n  </div>\n</form>\n'},Pwca:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="loaded; else loader" id="loading-load">\n  <div *ngIf="projectsExist; else noProjWarn" id="gallery-container">\n    <div *ngIf="imagesExist; else noImgWarn" id="gallery-container-container">\n      <div\n        [ngClass]="scrollStatus"\n        infiniteScroll\n        [infiniteScrollDistance]="1"\n        [infiniteScrollThrottle]="1500"\n        (scrolled)="onScroll()"\n        class="img-list-container"\n        *ngIf="!showTagger; else tagger"\n      >\n        <app-image-box *ngFor="let feat of featureListScroll" [feature]="feat">\n        </app-image-box>\n      </div>\n\n      <ngx-spinner\n        bdOpacity="0.9"\n        bdColor=""\n        size="default"\n        color="#3ADB76"\n        type="line-scale-pulse-out"\n        id="img-spin"\n        [fullScreen]="false"\n      >\n      </ngx-spinner>\n      <ng-template #tagger>\n        <div>\n          <div class="imager">\n            <img class="view-image" [src]="getPath()" />\n          </div>\n        </div>\n      </ng-template>\n      <div *ngIf="showTagger" class="side-bar-container">\n        <app-side-bar></app-side-bar>\n      </div>\n    </div>\n    <ng-template #noImgWarn>\n      <div id="no-img">\n        No images have been imported!<br />Please import images through the\n        menu.\n      </div>\n    </ng-template>\n  </div>\n\n  <ng-template #noProjWarn>\n    <div id="no-proj">\n      No project has been created!<br />Please create a project through the\n      menu.\n    </div>\n  </ng-template>\n</div>\n\n<ng-template #loader>\n  <div *ngIf="projectsExist; else createProj" id="loader">Loading...</div>\n\n  <ng-template #createProj>\n    <div id="new-proj" (click)="openCreateProjectModal()">\n      Start a new project\n    </div>\n  </ng-template>\n</ng-template>\n'},"T+fY":function(e,t,n){"use strict";n.r(t),t.default='<div class="form-group row" *ngFor="let tag of field">\n  <label class="col-md-3 form-control-label" [attr.for]="tag.label">\n    {{ field.label }}\n    <strong class="text-danger" *ngIf="tag.required">*</strong>\n  </label>\n  <div class="col-md-9" [ngSwitch]="tag.type">\n    <app-form-color\n      *ngSwitchCase="\'color\'"\n      [field]="field"\n      [form]="form"\n    ></app-form-color>\n    <app-form-textbox\n      *ngSwitchCase="\'text\'"\n      [field]="field"\n      [form]="form"\n    ></app-form-textbox>\n    <app-form-dropdown\n      *ngSwitchCase="\'dropdown\'"\n      [field]="field"\n      [form]="form"\n    ></app-form-dropdown>\n    <app-form-checkbox\n      *ngSwitchCase="\'checkbox\'"\n      [field]="field"\n      [form]="form"\n    ></app-form-checkbox>\n    <app-form-radio\n      *ngSwitchCase="\'radio\'"\n      [field]="field"\n      [form]="form"\n    ></app-form-radio>\n  </div>\n</div>\n'},T7o7:function(e,t,n){"use strict";n.r(t),t.default=":host .subitem-title {\n  text-align: left;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #f1f1f1;\n  display: flex;\n  justify-content: space-between;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #f1f1f1;\n  border-style: solid;\n  overflow-y: scroll;\n  background-color: #ffffff;\n  height: 100%;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .asset-list {\n  max-height: 20%;\n  overflow: hidden;\n}\n:host .asset-subitem {\n  height: 100px;\n}\n:host .asset-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n}\n:host .highlight {\n  background-color: #b3e5ff;\n}\n:host .name-group {\n  display: inline-block;\n  padding: 3px;\n}\n:host .button-group {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n}\n:host .button-group div {\n  padding: 3px;\n  padding-right: 5px;\n}"},VzVu:function(e,t,n){"use strict";n.r(t),t.default="\x3c!--The content below is only a placeholder and can be replaced.--\x3e\n<router-outlet></router-outlet>\n"},X9m5:function(e,t,n){"use strict";n.r(t),t.default='<div id="callback">\n  <div>\n    <i class="fas fa-spinner"></i>\n  </div>\n</div>\n'},"ay+3":function(e,t,n){"use strict";n.r(t),t.default='<div class="img-container">\n  <img\n    [ngClass]="imageSelected"\n    [src]="featureSource"\n    (click)="imageSelect()"\n    class="img-responsive img-target"\n    title="{{ featurePath }}"\n  />\n  <div class="top-overlay">\n    <div\n      class="image-option"\n      matTooltip="Zoom"\n      matTooltipPosition="below"\n      (click)="imageZoom(diffSizes)"\n    >\n      <i class="fas fa-search-plus"></i>\n    </div>\n\n    <ng-template #diffSizes>\n      <div class="zoom-content">\n        <div class="img-container">\n          <img [src]="featureSource" title="{{ featurePath }}" />\n        </div>\n        <div class="img-details">\n          <div class="detail-container">\n            <div class="title">Coordinates</div>\n            <div class="detail-contents">\n              <div class="detail-item">{{ coordinates[0] }},</div>\n              <div class="detail-item">\n                {{ coordinates[1] }}\n              </div>\n            </div>\n          </div>\n          <div class="detail-container">\n            <div class="title">Image Source</div>\n            <div class="detail-contents">\n              <div class="detail-item">\n                {{ featurePath }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <button\n          mat-button\n          class="close-button"\n          matDialogClose\n          aria-label="Close modal"\n          type="button"\n        >\n          <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n\n    <div\n      class="image-option"\n      matTooltip="Remove"\n      matTooltipPosition="below"\n      (click)="openPreserveScrollModal(deleteImage)"\n    >\n      <i class="fas fa-trash"></i>\n    </div>\n\n    <ng-template #deleteImage>\n      <div *ngIf="selectedImages.length === 1">\n        This image will be deleted from the current project. It will not be\n        deleted from the Data Depot.\n      </div>\n\n      <div *ngIf="selectedImages.length > 1">\n        {{ selectedImages.length }} images will be deleted from the current\n        project. They will not be deleted from the Data Depot.\n      </div>\n\n      <button\n        mat-raised-button\n        color="primary"\n        matDialogClose\n        (click)="imageDelete()"\n      >\n        Delete Image\n      </button>\n      <button mat-button matDialogClose>Cancel</button>\n    </ng-template>\n\n    <div\n      class="image-option"\n      matTooltip="Add To Group"\n      matTooltipPosition="below"\n      (click)="openPreserveScrollModal(addMoreToGroup)"\n    >\n      <i class="fas fa-plus"></i>\n    </div>\n\n    <ng-template #addMoreToGroup>\n      <mat-form-field appearance="fill">\n        <mat-label>Groups</mat-label>\n        <mat-select\n          matNativeControl\n          required\n          [value]="groupToAdd"\n          [compareWith]="compareGroup"\n          (selectionChange)="changeGroupToAdd($event)"\n        >\n          <mat-option\n            *ngFor="let group of groups | keyvalue"\n            [value]="group.value"\n          >\n            {{ group.key }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <p>\n        <button\n          mat-raised-button\n          color="primary"\n          matDialogClose\n          (click)="addGroup(groupToAdd)"\n          [disabled]="!groupToAdd"\n        >\n          Add To Group\n        </button>\n        <button mat-button color="secondary" matDialogClose>Cancel</button>\n      </p>\n    </ng-template>\n  </div>\n\n  <div class="bottom-overlay">\n    <div\n      *ngIf="feature.properties.group && feature.properties.group.length > 0"\n    >\n      <div\n        *ngIf="feature.properties.group.length < 5; else dotdot"\n        class="group-tags"\n      >\n        <div\n          *ngFor="let group of feature.properties.group"\n          class="center"\n          (mouseover)="(group.name)"\n          [matTooltip]="group.name"\n          matTooltipPosition="above"\n        >\n          <svg\n            class="box"\n            width="25px"\n            height="75px"\n            (click)="deleteFromGroup(feature, group)"\n          >\n            <rect\n              width="15px"\n              height="15px"\n              x="5"\n              y="30"\n              [style.fill]="group.color"\n            />\n            <rect\n              class="inner-del"\n              width="25px"\n              height="15px"\n              rx="3"\n              x="0"\n              y="0"\n              style="fill: #ffffff"\n            />\n            <rect\n              class="inner-del"\n              width="15px"\n              height="5px"\n              x="5"\n              y="5"\n              style="fill: #de6363"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <ng-template #dotdot class="text">\n        <div\n          class="image-option"\n          (click)="openModal(moreGroupsModal)"\n        >\n          <i class="fas fa-ellipsis-h"></i>\n        </div>\n      </ng-template>\n\n      \x3c!-- TODO Should close modal once zero groups --\x3e\n      <ng-template #moreGroupsModal>\n        <div\n          style="display: flex; justify-content: center; align-items: center"\n        >\n          <div\n            *ngFor="let group of feature.properties.group"\n            class="center-temp"\n            style="display: flex"\n            (mouseover)="(group.name)"\n            [matTooltip]="group.name"\n            matTooltipPosition="right"\n          >\n            <svg\n              style="padding: 1"\n              (click)="deleteFromGroup(feature, group)"\n              width="15px"\n              height="15px"\n            >\n              <rect width="15px" height="15px" [style.fill]="group.color" />\n              <rect\n                class="inner-del-temp"\n                width="8px"\n                height="4px"\n                x="3.3"\n                y="5.5"\n                style="fill: #000"\n              />\n            </svg>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n'},c6cR:function(e,t,n){"use strict";n.r(t),t.default='<ng-container *ngIf="!loadingFeatureProperties; else loading">\n  <app-select-group></app-select-group>\n  <app-select-image></app-select-image>\n\n  <app-tag-generator\n    *ngIf="showTagGenerator; else tagImages"\n  ></app-tag-generator>\n  <ng-template #tagImages>\n    <app-tag-images></app-tag-images>\n  </ng-template>\n</ng-container>\n<ng-template #loading>\n  <div\n    style="\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n    "\n  >\n    <span>\n      Updating Group Data\n      <i class="fas fa-circle-notch fa-spin"></i>\n    </span>\n  </div>\n</ng-template>\n'},crnd:function(e,t){function n(e){return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="crnd"},"dTB+":function(e,t,n){"use strict";n.r(t),t.default=":host {\n  display: block;\n  font-size: 0.8em;\n  height: calc(100vh - 50px);\n}\n:host .lat-lon-label {\n  font-size: 0.8em;\n  color: #4d4d4d;\n}\n:host .active-project {\n  background-color: #1aff8c;\n}\n:host .menu button.dropdown.button {\n  padding: 0.85em 1em;\n}\n:host .switch {\n  margin: 0;\n}\n:host .button.tiny {\n  margin: 0;\n}\n:host .create-prompt {\n  max-height: 500px;\n  height: 500px;\n}\n:host .select-group {\n  max-height: 20%;\n  height: 20%;\n}\n:host .subitem-title {\n  text-align: left;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #f1f1f1;\n  display: flex;\n  justify-content: space-between;\n}\n:host .input-label-group {\n  padding: 10px;\n  display: block;\n}\n:host .input-group {\n  display: inline-block;\n}\n:host .form-name {\n  text-align: center;\n}\n:host .input-group-button {\n  display: inline-block;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #f1f1f1;\n  border-style: solid;\n  overflow-y: auto;\n  background-color: #ffffff;\n  height: 40vh;\n  padding: 20px;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .preset-descriptions {\n  max-height: 20%;\n  height: 20%;\n}\n:host .boxed input[type=radio] {\n  display: none;\n}\n:host .boxed label {\n  background-color: #fff;\n  transition: all 0.3s;\n}\n:host .boxed input[type=radio]:checked + label {\n  background-color: #b3e5ff;\n}\n:host .group-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .button-group {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n}\n:host .form-option-container {\n  padding: 0px;\n}\n:host .list-group {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .list-suboptions {\n  background-color: #f0f0f0;\n}\n:host .button-group div {\n  padding: 3px;\n}\n:host .name-group {\n  display: inline-block;\n  padding: 3px;\n}\n:host .form-item-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .form-type-form {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 5px;\n  margin-bottom: 15px;\n}\n:host .form-type-form input[type=radio] {\n  display: none;\n}\n:host .form-type-form label {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #ddd;\n  transition: all 0.3s;\n}\n:host .form-type-form input[type=radio]:checked + label {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #000;\n}\n:host .changed {\n  color: #f07575;\n}\n:host .unchanged {\n  color: #555555;\n}\n:host .asset-list {\n  max-height: 20%;\n  height: 20%;\n}\n:host .asset-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n}\n:host .highlight {\n  background-color: #b3e5ff;\n}"},dagV:function(e,t,n){"use strict";n.r(t),t.default='<div>\n  <textarea\n    [id]="field.name"\n    rows="9"\n    class="form-control"\n    [placeholder]="\'notes\'"\n    [(ngModel)]="value"\n    (keyup)="updateValue()"\n  ></textarea>\n</div>\n'},dp4s:function(e,t,n){"use strict";n.r(t),t.default=":host #share-project-form {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 5em;\n}\n\n.card-container {\n  display: flex;\n  justify-content: space-between;\n  width: 99%;\n}\n\n.card-item {\n  text-align: center;\n  align-items: center;\n}\n\n.card-buttons {\n  align-items: flex-end;\n}"},eC1z:function(e,t,n){"use strict";n.r(t),t.default='<div id="map" style="min-height: calc(100vh - 67px)"></div>\n'},fIZ9:function(e,t,n){"use strict";n.r(t),t.default='<div *ngFor="let opt of form.options" [id]="form.label" class="input-group">\n  <div class="form-check form-check">\n    <label class="form-check-label">\n      <input\n        class="form-check-input"\n        [(ngModel)]="value"\n        type="radio"\n        id="inlineCheckbox2"\n        name="{{ label }}"\n        value="{{ opt.label }}"\n        (change)="updateCheckedTag()"\n      />\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n'},fWOx:function(e,t,n){"use strict";n.r(t),t.default=":host #create-project-form {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 5em;\n}"},if2z:function(e,t,n){"use strict";n.r(t),t.default=":host .img-container {\n  position: relative;\n}\n:host .img-container img {\n  -o-object-fit: cover;\n     object-fit: cover;\n  cursor: default;\n  width: 100%;\n  height: 100%;\n  transition: opacity 0.3s ease;\n  backface-visibility: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  margin: 0 auto;\n}\n:host .top-overlay {\n  display: flex;\n  flex-direction: row;\n  transition: 0.3s ease;\n  opacity: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n  text-align: center;\n}\n:host .bottom-overlay {\n  display: flex;\n  flex-direction: row;\n  transition: 0.3s ease;\n  opacity: 1;\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  text-align: center;\n}\n:host .img-container:hover img {\n  opacity: 0.9;\n}\n:host .img-container:hover .top-overlay {\n  opacity: 0.9;\n}\n:host .img-container:hover .top-overlay:hover {\n  opacity: 1;\n}\n:host .image-option {\n  opacity: 0.9;\n  background-color: white;\n  display: flex;\n  color: black;\n  width: 40px;\n  height: 30px;\n  border-radius: 5px;\n  font-size: 16px;\n  margin: 3px;\n  justify-content: center;\n  align-items: center;\n}\n:host .image-option:hover {\n  opacity: 1;\n}\n:host .image-option .fas {\n  top: 5px;\n}\n:host .img-selected {\n  border: solid #0191ff;\n  border-width: 5px;\n}\n:host .img-unselected {\n  border: solid #fff;\n  border-width: 5px;\n}\n:host .group-tags {\n  opacity: 0.9;\n  background-color: white;\n  display: flex;\n  flex-direction: row;\n  width: auto;\n  height: 30px;\n  border-radius: 5px;\n  padding: 5px;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n:host .center {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  transition: 0.3s ease;\n  align-items: center;\n}\n:host .center .inner-del {\n  opacity: 0;\n  transition: 0.3s ease;\n  cursor: pointer;\n}\n:host .center:hover .inner-del {\n  opacity: 1;\n}\n:host .box {\n  padding: 1px;\n}\n.center-temp {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.center-temp .inner-del-temp {\n  opacity: 0;\n  transition: 0.3s ease;\n  cursor: pointer;\n}\n.center-temp:hover .inner-del-temp {\n  opacity: 0.5;\n}\n.zoom-content {\n  display: flex;\n  flex-direction: column;\n  max-height: 700px;\n}\n.zoom-content .img-container {\n  overflow-y: scroll;\n  width: 100%;\n  height: 100%;\n  background-color: #e7e7e7;\n}\n.zoom-content .img-details {\n  display: flex;\n  flex-direction: row;\n  margin-top: 24px;\n  background-color: #e7e7e7;\n  align-items: center;\n  text-align: center;\n}\n.zoom-content .title {\n  background-color: #ccc;\n  padding: 5px;\n}\n.zoom-content .detail-container {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  padding: 5px;\n}\n.zoom-content .detail-contents {\n  display: flex;\n  flex-direction: row;\n  padding: 5px;\n  background-color: #fff;\n}\n.zoom-content .detail-item {\n  padding: 5px;\n}"},ld75:function(e,t,n){"use strict";n.r(t),t.default=":host {\n  text-align: left;\n}\n:host .mat-form-field {\n  width: 100%;\n  text-align: left;\n}\n:host .input-group {\n  padding: 5px;\n}\n:host label {\n  padding: 5px;\n}\n:host input {\n  padding: 5px;\n  vertical-align: middle;\n}\n:host .radio-group {\n  display: flex;\n  flex-direction: column;\n}\n:host .form-controls {\n  padding: 20px;\n}"},"m/u+":function(e,t,n){"use strict";n.r(t),t.default='<div *ngFor="let opt of form.options" [id]="form.label" class="input-group">\n  <div class="form-check form-check">\n    <label class="form-check-label">\n      <input\n        class="form-check-input"\n        [(ngModel)]="chosenTag"\n        type="radio"\n        id="inlineCheckbox3"\n        name="{{ label }}"\n        value="{{ opt.label }}"\n        (change)="updateCheckedTag()"\n      />\n      {{ opt.label }}\n\n      <svg class="box" width="10px" height="10px">\n        <rect width="10px" height="10px" style="fill: #ffffff" />\n        <rect\n          width="8px"\n          height="8px"\n          x="1px"\n          y="1px"\n          [style.fill]="opt.color"\n        />\n      </svg>\n    </label>\n  </div>\n</div>\n'},moaK:function(e,t,n){"use strict";n.r(t),t.default='<h4>Current Gallery</h4>\n<form\n  [formGroup]="projCreateForm"\n  id="current-project-form"\n>\n  <mat-form-field>\n    <mat-label>Name:</mat-label>\n    <input\n      matInput\n      type="text"\n      formControlName="name"\n      appearance="filled"\n      required="true"\n    />\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <textarea matInput formControlName="description" required="true"></textarea>\n  </mat-form-field>\n\n  <div class="button-group small">\n    <button\n      mat-raised-button\n      color="basic"\n      class="button small warning"\n      type="button"\n      (click)="close()"\n    >\n      Close\n    </button>\n    <button\n      *ngIf="activeProject.deletable"\n      mat-raised-button\n      color="warn"\n      class="button small warning"\n      type="delete"\n      (click)="delete()"\n    >\n      Delete\n    </button>\n    <button\n      mat-raised-button\n      color="primary"\n      class="button small align-right"\n      type="submit"\n      (click)="update()"\n      [disabled]="!projCreateForm.valid"\n    >\n      Update\n    </button>\n  </div>\n</form>\n'},nOsy:function(e,t,n){"use strict";n.r(t),t.default='<h4>Create a new Gallery</h4>\n<form\n  [formGroup]="projCreateForm"\n  (ngSubmit)="submit()"\n  id="create-project-form"\n>\n  <mat-form-field>\n    <mat-label>Name:</mat-label>\n    <input matInput type="text" formControlName="name" required="true" />\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <textarea matInput formControlName="description" required="true"></textarea>\n  </mat-form-field>\n\n  <div class="button-group small">\n    <button\n      mat-raised-button\n      color="warn"\n      class="button small warning"\n      type="button"\n      (click)="close()"\n    >\n      Close\n    </button>\n    <button\n      mat-raised-button\n      color="primary"\n      class="button small align-right"\n      type="submit"\n      [disabled]="!projCreateForm.valid"\n    >\n      Submit\n    </button>\n  </div>\n</form>\n'},obZR:function(e,t,n){"use strict";n.r(t),t.default=""},qk7I:function(e,t,n){"use strict";n.r(t),t.default=":host {\n  font-size: 0.8em;\n  display: block;\n}\n:host .subitem-title {\n  text-align: left;\n  display: flex;\n  justify-content: space-between;\n  color: #555;\n  font-size: 14px;\n  padding: 10px;\n  background-color: #f1f1f1;\n}\n:host .subitem {\n  border-width: 0px 10px;\n  border-color: #f1f1f1;\n  border-style: solid;\n  padding: 10px;\n  overflow-y: auto;\n  background-color: #ffffff;\n  height: 40vh;\n}\n:host .main-form-container {\n  padding: 10px;\n}\n:host .subitem-scroll {\n  padding: 10px;\n}\n:host .subitem-scroll {\n  border-width: 5px;\n}\n:host .highlight {\n  background-color: #b3e5ff;\n}\n:host .boxed input[type=radio] {\n  display: none;\n}\n:host .boxed label {\n  background-color: #fff;\n  transition: all 0.3s;\n}\n:host .boxed input[type=radio]:checked + label {\n  background-color: #b3e5ff;\n}\n:host .group-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .select-group {\n  max-height: 20%;\n  height: 20%;\n}\n:host .tag-forms {\n  height: 500px;\n}\n:host .asset-list {\n  max-height: 20%;\n  height: 20%;\n}\n:host .asset-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n}\n:host .preset-descriptions {\n  max-height: 20%;\n  height: 20%;\n}\n:host .form-item-container {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .button-group {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n}\n:host .button-group div {\n  padding: 3px;\n}\n:host .name-group {\n  padding: 3px;\n  font-size: 17px;\n  font-weight: bold;\n}\n:host .list-group {\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  justify-content: space-between;\n}\n:host .list-suboptions {\n  background-color: #f0f0f0;\n}"},s9wi:function(e,t,n){"use strict";n.r(t),t.default='<div class="select-group">\n  <div class="subitem-title" (click)="expandPanel()">Groups</div>\n  <div *ngIf="showSubitem" class="subitem group-subitem">\n    \x3c!-- TODO redundant functionality radio is just for style --\x3e\n    <form class="boxed">\n      <div\n        *ngFor="let group of groups | keyvalue"\n        (click)="selectGroupForm(group.value)"\n        class="box form"\n      >\n        <input\n          type="radio"\n          [id]="group.key"\n          [value]="group.key"\n          name="skills"\n          [checked]="isChecked(group.key)"\n        />\n        <label\n          class="group-container"\n          style="cursor: pointer"\n          [for]="group.key"\n        >\n          <div class="name-group">\n            {{ group.key }}\n            <svg class="box" width="10px" height="10px">\n              <rect width="10px" height="10px" style="fill: #ffffff" />\n              <rect\n                width="8px"\n                height="8px"\n                x="1px"\n                y="1px"\n                [style.fill]="group.value.color"\n              />\n            </svg>\n          </div>\n          <div class="button-group">\n            <div (click)="deleteGroup(group.value)">\n              <i\n                class="fas fa-minus"\n                matTooltip="Delete"\n                matTooltipPosition="below"\n              >\n              </i>\n            </div>\n            <div (click)="openRenameModal(renameModal, group.value)">\n              <i\n                class="fas fa-edit"\n                matTooltip="Rename"\n                matTooltipPosition="below"\n              >\n              </i>\n            </div>\n            <div (click)="openIconSelection(iconModal, group.value)">\n              <span\n                class="fa {{ group.value.icon }}"\n                matTooltip="icons"\n                matTooltipPosition="below"\n              ></span>\n            </div>\n          </div>\n        </label>\n      </div>\n    </form>\n\n    <ng-template #renameModal>\n      <input\n        matInput\n        #groupRename\n        placeholder="Rename Group"\n        (keyup.enter)="renameGroup(groupRename.value)"\n      />\n      <br />\n      <br />\n      <div class="button-group">\n        <button\n          matDialogClose\n          color="primary"\n          mat-raised-button\n          (click)="renameGroup(groupRename.value)"\n        >\n          Rename\n        </button>\n        <button matDialogClose mat-button>Cancel</button>\n      </div>\n    </ng-template>\n\n    <ng-template #iconModal>\n      <div class="iconDropdown">\n        <select class="fa" [(ngModel)]="selectedIcon">\n          <option\n            class="fa"\n            *ngFor="let icon of iconList"\n            value="{{ icon.id }}"\n            [innerHTML]="icon.unicode"\n          ></option>\n        </select>\n        <br />\n        <br />\n        <div class="button-group">\n          <button\n            matDialogClose\n            color="primary"\n            mat-raised-button\n            (click)="saveIcon(selectedIcon)"\n          >\n            Save\n          </button>\n          <button matDialogClose mat-button>Cancel</button>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n  \x3c!-- subitem --\x3e\n</div>\n\x3c!-- select-group --\x3e\n'},tw4j:function(e,t,n){"use strict";n.r(t),t.default=":host #current-project-form {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 5em;\n}"},u61n:function(e,t,n){"use strict";n.r(t),t.default=""},u6lZ:function(e,t,n){"use strict";n.r(t),t.default=":host {\n  min-height: 20em;\n}\n:host .fileslisting {\n  height: 20em;\n  overflow-y: scroll;\n  padding: 0px 20px;\n}\n:host .file-row {\n  display: flex;\n  background: #f9f9f9;\n  border: 1px solid transparent;\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n}\n:host .clickable {\n  flex: 1;\n  max-width: 20em;\n}\n:host .size {\n  align-items: flex-end;\n}\n:host .file-row:hover {\n  border: 1px solid;\n}\n:host .file-row.selected {\n  background: #d3d3d3;\n}\n.error {\n  background-color: red;\n  color: white;\n}\n.lineBreak {\n  max-width: 350px;\n  word-break: break-word;\n}"},uV4w:function(e,t,n){"use strict";n.r(t),t.default=":host .active-project {\n  background-color: #1aff8c;\n}\n:host .menu button.dropdown.button {\n  padding: 0.85em 1em;\n}\n:host .button.tiny {\n  margin: 0;\n}\n:host .current-project {\n  padding: 30px;\n  font-size: 14px;\n}\n:host .goods {\n  height: 27px;\n  margin: 0px;\n  padding: 0px;\n}\n:host .toggler {\n  margin-left: 10px;\n}\n:host .picker {\n  display: inline-block;\n}\n:host .group-bar {\n  display: flex;\n  flex-direction: row;\n}\n:host .path-buttons {\n  text-align: center;\n}\n:host .project-menu {\n  margin-left: 10px;\n}\n:host .top-bar {\n  position: fixed;\n  margin-top: -50px;\n  height: 50px;\n  z-index: 999;\n}\n:host .top-bar-right .top-bar-left {\n  -webkit-box-flex: 0;\n  flex-wrap: nowrap;\n  flex: 0 1 auto;\n  max-width: 100%;\n}\n:host .my-button {\n  border-radius: 5px;\n  padding: 5px;\n}\n:host .button-spacing {\n  margin-right: 15px;\n}\n@media print, screen and (min-width: 40em) {\n  :host .top-bar {\n    flex-wrap: nowrap;\n    flex: 0 1 auto;\n  }\n}\n:host .example-spacer {\n  flex: 1 1 auto;\n}"},vlUF:function(e,t,n){"use strict";n.r(t),t.default='<mat-toolbar class="top-bar" color="primary">\n  <img src="assets/logo.svg" width="40PX" />\n  <span style="color: white">Taggit</span>\n\n  <button\n    mat-icon-button\n    [matMenuTriggerFor]="project"\n    color="foreground"\n    class="project-menu"\n  >\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <mat-menu #project="matMenu">\n    <span\n      mat-menu-item\n      *ngIf="selectedProject"\n      (click)="openProjectModal(selectedProject)"\n    >\n      Current Gallery : {{ selectedProject.name }}\n    </span>\n    <button mat-menu-item (click)="openCreateProjectModal()">\n      Create Gallery\n    </button>\n    <button mat-menu-item [matMenuTriggerFor]="projectList">\n      Select Gallery\n    </button>\n    <button mat-menu-item (click)="openFilePicker(test)">File Browser</button>\n    <button mat-menu-item [matMenuTriggerFor]="saveOptions">Save as</button>\n  </mat-menu>\n\n  <mat-menu #projectList="matMenu">\n    <button\n      mat-menu-item\n      class="clickable"\n      *ngFor="let p of projects"\n      (click)="selectProject(p)"\n      [ngClass]="{ \'active-project\': p === selectedProject }"\n    >\n      {{ p.name }}\n    </button>\n  </mat-menu>\n\n  <mat-menu #saveOptions="matMenu">\n    <button mat-menu-item (click)="saveFile(0)">CSV file</button>\n    <button mat-menu-item (click)="saveFile(1)">JSON file</button>\n    <button mat-menu-item (click)="openDownloadSelector()">\n      Export to DesignSafe\n    </button>\n  </mat-menu>\n\n  <span class="example-spacer"></span>\n\n  <div *ngIf="showTagger" class="path-buttons">\n    <div class="slides" style="line-height: 1; font-size: 12px">\n      {{ getAssetDisplay() }}\n      <div class="lr-buttons" style="margin-top: 5px">\n        <i\n          (click)="otherPath(false)"\n          style="margin-right: 10px; cursor: pointer"\n          class="fas fa-angle-left"\n        ></i>\n        <i\n          (click)="otherPath(true)"\n          style="margin-left: 10px; cursor: pointer"\n          class="fas fa-angle-right"\n        ></i>\n      </div>\n    </div>\n  </div>\n\n  <span class="example-spacer"></span>\n\n  <div class="group-bar grid-x align-right">\n    <button\n      mat-raised-button\n      class="button-spacing"\n      [disabled]="selectedImages.length === 0"\n      (click)="clearAll()"\n    >\n      Clear Selected\n    </button>\n\n    \x3c!-- A link that looks like a button, links to Hazmapper--\x3e\n    <a\n      class="button-spacing"\n      mat-raised-button\n      href="{{ hazmapperLink }}"\n      title="Open your gallery in HazMapper"\n      target="_blank"\n    >\n      <img src="assets/hazmapper-header-logo.png" width="100PX" />\n    </a>\n\n    <button\n      mat-raised-button\n      (click)="openAddGroupModal(addToGroupModal)"\n      *ngIf="selectedImages.length > 0 && groupsExist && !showTagger"\n      class="button-spacing"\n    >\n      Add To Group\n    </button>\n\n    <button\n      mat-raised-button\n      (click)="openAddGroupModal(addGroupModal)"\n      *ngIf="selectedImages.length > 0 && !showTagger"\n    >\n      Create Group\n    </button>\n\n    <ng-template #addGroupModal>\n      <mat-form-field>\n        <mat-label>Group Name</mat-label>\n        <input\n          matInput\n          placeholder="Group Name"\n          (keyup.enter)="addGroup(groupInput.value)"\n          #groupInput\n        />\n      </mat-form-field>\n\n      <div style="color: #ff0000" *ngIf="invalidNameError">Invalid Name!</div>\n      <div style="color: #ff0000" *ngIf="existingNameError">Existing Name!</div>\n      <br />\n      <br />\n      <button\n        mat-raised-button\n        color="primary"\n        (click)="addGroup(groupInput.value)"\n      >\n        Add Group\n      </button>\n      <button mat-button matDialogClose color="secondary">Cancel</button>\n    </ng-template>\n\n    <ng-template #addToGroupModal>\n      <mat-form-field appearance="fill">\n        <mat-label>Groups</mat-label>\n        <mat-select\n          matNativeControl\n          required\n          [value]="groupToAdd"\n          [compareWith]="compareGroup"\n          (selectionChange)="changeGroupToAdd($event)"\n        >\n          <mat-option\n            *ngFor="let group of groups | keyvalue"\n            [value]="group.value"\n          >\n            {{ group.key }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <p>\n        <button\n          mat-raised-button\n          color="primary"\n          matDialogClose\n          (click)="addToGroup(groupToAdd)"\n          [disabled]="!groupToAdd"\n        >\n          Add To Group\n        </button>\n        <button mat-button color="secondary" matDialogClose>Cancel</button>\n      </p>\n    </ng-template>\n  </div>\n\n  <button\n    *ngIf="showTagger && updatedTagValues.length > 0"\n    mat-raised-button\n    style="margin-left: 15px"\n    (click)="saveTags()"\n  >\n    <i class="fas fa-save"></i>\n    Save Tags\n  </button>\n\n  <button\n    *ngIf="groupsExist && !showTagger"\n    mat-raised-button\n    style="margin-left: 15px"\n    (click)="toggleTagger()"\n  >\n    Taggit!\n  </button>\n\n  <button\n    *ngIf="showTagger"\n    mat-raised-button\n    style="margin-left: 15px"\n    (click)="toggleTagger()"\n  >\n    Gallery\n  </button>\n</mat-toolbar>\n'},yXUO:function(e,t,n){"use strict";n.r(t),t.default='<div *ngFor="let opt of form.options" [id]="form.label" class="input-group">\n  <div class="form-check form-check">\n    <label class="form-check-label">\n      <input\n        class="form-check-input"\n        type="checkbox"\n        [checked]="isChecked(opt)"\n        id="inlineCheckbox1"\n        value="{{ opt.label }}"\n        (change)="selected($event, opt)"\n      />\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n'},ynWL:function(e,t,n){"use strict";n.r(t),t.default=""},zUnb:function(e,t,n){"use strict";n.r(t);n("yLV6");var s=n("8Y7J"),i=n("wAiw"),o=n("mrSG"),a=n("cUpR"),r=n("omvX"),l=n("IheW"),c=n("SVse"),p=n("MNke"),u=n("7g+E"),d=n("neit"),h=n("gavF"),g=n("BzsH"),m=n("Fwaw"),f=n("s6ns"),b=n("Mz6y"),v=n("ZwOa"),y=n("Gi4r"),x=n("r0V8"),S=n("elxJ"),w=n("JjoW"),j=n("jGvI"),F=n("EApP"),k=n("vO5K"),P=n("nqmK"),O=n("iInd");let T=class{constructor(){}ngOnInit(){}};T=o.a([Object(s.n)({selector:"app-notfound",template:o.b(n("Af46")).default,styles:[o.b(n("6CRC")).default]}),o.c("design:paramtypes",[])],T);class G{}class I{constructor(){this.bbox=[],this.assetType=new Set}updateAssetTypes(e){this.assetType.has(e)?this.assetType.delete(e):this.assetType.add(e)}updateBBox(e){this.bbox=e}toJson(){return{assetType:[...this.assetType],bbox:this.bbox}}}class D{}class C{}class _{constructor(e,t){this.token=e,this.expires=new Date(t)}static fromExpiresIn(e,t){const n=new Date((new Date).getTime()+1e3*t);return new _(e,n)}isExpired(){return(new Date).getTime()>this.expires.getTime()}}class E{constructor(e){this.geometry=e.geometry,this.properties=e.properties,this.id=e.id,this.type=e.type,this.assets=e.assets,this.styles=e.styles,this.project_id=e.project_id}initialAsset(){return this.assets[0]}featureType(){return this.assets&&1===this.assets.length?this.initialAsset().asset_type:this.assets&&this.assets.length>1?"collection":this.assets.length?void 0:this.geometry.type}featurePath(){const e=this.initialAsset();return e.display_path?e.display_path:e.path?e.path:this.id.toString()}featureShortPath(){const[e]=this.assets;if(e.display_path)return/[^/]*$/.exec(e.display_path)[0];if(e.path){return/[^/]*$/.exec(e.path)[0].slice(0,15)+"..."}return this.id.toString()}}var L;!function(e){e.Production="production",e.Staging="staging",e.Local="local"}(L||(L={}));const A={production:!0,apiUrl:"https://agave.designsafe-ci.org/geo/v2/",clientId:"jHXnvsmQQcmP43qlrG7ATaxFXHQa",baseHref:"/",backend:L.Production};var M=n("jtHE");class U{constructor(e,t){this.username=e,this.email=t}}let R=class{constructor(e,t){this.http=e,this.router=t,this._currentUser=new M.a(1),this.currentUser=this._currentUser.asObservable(),this.LS_TOKEN_KEY="hazmapperToken",this.LS_USER_KEY="hazmapperUser"}login(){const e=localStorage.getItem(this.LS_TOKEN_KEY);if(e){const t=JSON.parse(e);this.userToken=new _(t.token,new Date(t.expires)),this.userToken&&!this.userToken.isExpired()||(this.logout(),this.redirectToauthenticaor()),this.getUserInfo()}else this.redirectToauthenticaor()}redirectToauthenticaor(){const e=`https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${A.clientId}&response_type=token&redirect_uri=${location.origin+A.baseHref+"callback"}&state=${Math.random().toString(36)}`;window.location.href=e}isLoggedIn(){return this.userToken&&!this.userToken.isExpired()}logout(){this.userToken=null,localStorage.removeItem(this.LS_TOKEN_KEY),localStorage.removeItem(this.LS_USER_KEY)}setToken(e,t){this.userToken=_.fromExpiresIn(e,t),localStorage.setItem(this.LS_TOKEN_KEY,JSON.stringify(this.userToken)),this.router.navigate(["/"])}getUserInfo(){const e=localStorage.getItem(this.LS_USER_KEY),t=JSON.parse(e);null!==t?this._currentUser.next(new U(t.username,t.email)):this.http.get("https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid").subscribe(e=>{const t=new U(e.name,e.email);localStorage.setItem(this.LS_USER_KEY,JSON.stringify(t)),this._currentUser.next(t)})}};R.ctorParameters=()=>[{type:l.b},{type:O.b}],R=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[l.b,O.b])],R);var N=n("2Vo4"),z=n("SxV6"),$=n("IzEk"),V=n("r8II"),J=n("l5mm");let H=class{constructor(e,t,n){if(this.toastr=e,this.http=t,this.authService=n,this.TIMEOUT=5e3,this._notifications=new M.a(1),this.notifications=this._notifications.asObservable(),this.authService.isLoggedIn()){Object(J.a)(this.TIMEOUT).subscribe(e=>{this.getRecent()})}}getRecent(){const e=A.apiUrl+"notifications/",t=new Date,n=new Date(t.getTime()-this.TIMEOUT);this.http.get(e+"?startDate="+n.toISOString()).subscribe(e=>{this._notifications.next(e),e.forEach(e=>{switch(e.status){case"success":this.showSuccessToast(e.message);break;case"error":this.showErrorToast(e.message)}})})}showSuccessToast(e){this.toastr.success(e)}showImportErrorToast(e){this.toastr.error(e+", trying alternate method")}showErrorToast(e){this.toastr.error(e)}};H.ctorParameters=()=>[{type:F.b},{type:l.b},{type:R}],H=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[F.b,l.b,R])],H);let B=class{constructor(){this.scrollRestored=!0,this.scrollPosition=0}setScrollRestored(e){this.scrollRestored=e}setScrollPosition(){this.scrollPosition=document.documentElement.scrollTop}scroll(){document.documentElement.scroll({top:this.scrollPosition}),document.documentElement.scrollTop==this.scrollPosition&&(this.scrollRestored=!1)}};B=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[])],B);var W=n("EcEN");let Z=class{constructor(e,t,n){this.http=e,this.notificationsService=t,this.scrollService=n,this._pointClouds=new N.a(null),this.pointClouds=this._pointClouds.asObservable(),this._loaded=new N.a(null),this.loaded=this._loaded.asObservable(),this._activeGroupId=new N.a(null),this.activeGroupId=this._activeGroupId.asObservable(),this._activeGroup=new N.a(null),this.activeGroup=this._activeGroup.asObservable(),this._updatedTagFeatures=new N.a([]),this.updatedTagFeatures=this._updatedTagFeatures.asObservable(),this._loadingFeatureProperties=new N.a(!1),this.loadingFeatureProperties=this._loadingFeatureProperties.asObservable(),this._activeGroupFeature=new N.a(null),this.activeGroupFeature=this._activeGroupFeature.asObservable(),this._groups=new N.a(null),this.groups=this._groups.asObservable(),this._groupsFeatures=new N.a(null),this.groupsFeatures=this._groupsFeatures.asObservable(),this._features=new N.a({type:"FeatureCollection",features:[]}),this.features$=this._features.asObservable(),this._activeFeature=new N.a(null),this._mapMouseLocation=new N.a(null),this._basemap=new N.a("roads"),this._overlays=new N.a(null),this._activeOverlay=new N.a(null)}getFeature(e,t){return this.http.get(A.apiUrl+`/projects/${e}/features/${t.id}/`)}setFeatures(e){e.features=e.features.map(e=>new E(e)),this.getGroups(e.features),this._features.next(e)}setFeatureProperties(e,t){this.features.pipe(Object(z.a)()).subscribe(n=>{n.features=n.features.map(n=>(n.id===e&&(n.properties=t),n)),this.setFeatures(n)})}updateFeatureTags(e){this._updatedTagFeatures.value.forEach(t=>{const n=this._features.value.features.find(e=>e.id==t);this.updateFeatureProperty(e,t,n.properties)}),this.resetUpdatedTagFeatures()}setFeatureStyles(e,t){this.features.pipe(Object(z.a)()).subscribe(n=>{n.features=n.features.map(n=>(n.id===e&&(n.styles=t),n)),this.setFeatures(n)})}getFeatures(e,t=new I,n=!1){const s=V.stringify(t.toJson());this.http.get(A.apiUrl+`/projects/${e}/features/?`+s).subscribe(e=>{this.setFeatures(e),this._loaded.next(!0),n&&this.scrollService.setScrollRestored(!0)},e=>{this.notificationsService.showErrorToast("Failed to retrieve project data! Geoapi might be down.")})}deleteFeature(e){this.http.delete(A.apiUrl+`projects/${e.project_id}/features/${e.id}/`).subscribe(t=>{this.getFeatures(e.project_id,new I,!0)})}getPointClouds(e){this.http.get(A.apiUrl+`/projects/${e}/point-cloud/`).subscribe(e=>{this._pointClouds.next(e)})}setActiveGroup(e){if(this._activeGroup.next(e),e){const t=this._groupsFeatures.value.get(e.name);this._activeGroupFeature.value&&t.some(e=>this._activeGroupFeature.value.id===e.id)||this.setActiveGroupFeature(t[0])}else this.setActiveGroupFeature(null)}setFeatureTag(e,t){const n=this._updatedTagFeatures.value,s=this._features.value;s.features.map(n=>(e==n.id&&(n.properties.tags.some(e=>t.id==e.id)?n.properties.tags.map(e=>(e.id==t.id&&(e.value=t.value),e)):n.properties.tags=n.properties.tags.length?[...n.properties.tags,t]:[t]),n)),n.includes(e)||n.push(e),this._updatedTagFeatures.next(n),this._features.next(s)}resetUpdatedTagFeatures(){this._updatedTagFeatures.next([])}setActiveGroupFeature(e){this._activeGroupFeature.next(e)}addFeature(e){this.features$.pipe(Object($.a)(1)).subscribe(t=>{t.features.push(e),this._features.next(t)})}addPointCloud(e,t,n){const s={description:t,conversion_parameters:n};this.http.post(A.apiUrl+`/projects/${e}/point-cloud/`,s).subscribe(t=>{this.getPointClouds(e)},e=>{this.notificationsService.showErrorToast("Failed to update image property!")})}updateFeatureProperty(e,t,n){this._loadingFeatureProperties.next(!0),this.http.post(A.apiUrl+`projects/${e}/features/${t}/properties/`,n).subscribe(e=>{this.features.pipe(Object(z.a)()).subscribe(e=>{this.setFeatureProperties(t,n),this._loadingFeatureProperties.next(!1)})},e=>{this.notificationsService.showErrorToast("Failed to save tag values!")})}updateFeatureStyles(e,t,n){this.http.post(A.apiUrl+`/projects/${e}/features/${t}/styles/`,n).subscribe(e=>{this.features.pipe(Object(z.a)()).subscribe(e=>{this.setFeatureStyles(t,n)})},e=>{this.notificationsService.showErrorToast("Failed to update image style!")})}deletePointCloud(e){this.http.delete(A.apiUrl+`/projects/${e.project_id}/point-cloud/${e.id}/`).subscribe(t=>{this.getPointClouds(e.project_id)})}addFileToPointCloud(e,t){const n=new FormData;n.append("file",t),this.http.post(A.apiUrl+`/projects/${e.project_id}/point-cloud/${e.id}/`,n).subscribe(e=>{console.log(e)})}importFileFromTapis(e,t){const n=t.map(e=>({system:e.system,path:e.path})),s={files:n};this.fileList=n,this.http.post(A.apiUrl+`projects/${e}/features/files/import/`,s).subscribe(e=>{this.notificationsService.showSuccessToast("Import started!")},e=>{this.notificationsService.showImportErrorToast("Import failed! Try again?")})}importImage(e,t,n){const s=t.id;let i;this.fileList.forEach(e=>{e.path==n&&(i=e)});const o={system_id:i.system,path:i.path};this.http.post(A.apiUrl+`projects/${e}/features/${s}/assets/`,o).subscribe(e=>{this.notificationsService.showSuccessToast("Import started!")})}uploadNewFeature(e,t,n){const s=t;let i;this.http.post(A.apiUrl+`projects/${e}/features/`,s).subscribe(t=>{i=new E(t[0]),this.importImage(e,i,n)})}downloadGeoJSON(e,t=new I){const n=V.stringify(t.toJson()),s=document.createElement("a");this.http.get(A.apiUrl+`/projects/${e}/features/?`+n).subscribe(e=>{const t=new Blob([JSON.stringify(e)],{type:"application/json"});s.href=URL.createObjectURL(t),s.setAttribute("download","hazmapper.json"),document.body.appendChild(s),s.click(),document.body.removeChild(s)})}uploadFile(e,t){const n=new FormData;n.append("file",t,t.name),this.http.post(A.apiUrl+`/projects/${e}/features/files/`,n).subscribe(e=>{e.forEach(e=>{this.addFeature(new E(e))})},e=>{})}uploadAssetFile(e,t,n){const s=new FormData;s.append("file",n,n.name),this.http.post(A.apiUrl+`/api/projects/${e}/features/${t}/assets/`,s).subscribe(n=>{const s=this._activeFeature.getValue();s&&s.id===t&&(this.activeFeature=new E(n),this.getFeatures(e))},e=>{})}getOverlays(e){this.http.get(A.apiUrl+`/projects/${e}/overlays/`).subscribe(e=>{this._overlays.next(e)})}addOverlay(e,t,n,s,i,o,a){const r=new FormData;r.append("file",t),r.append("label",n),r.append("minLat",s.toFixed(6)),r.append("maxLat",i.toFixed(6)),r.append("minLon",o.toFixed(6)),r.append("maxLon",a.toFixed(6)),this.http.post(A.apiUrl+`/projects/${e}/overlays/`,r).subscribe(t=>{this.getOverlays(e)})}getGroups(e){const t=new Map,n=new Map;e.filter(e=>e.properties.group&&e.properties.group.length>0).forEach(e=>{e.properties.group.forEach(s=>{n.set(s.name,n.has(s.name)?[...n.get(s.name),e]:[e]),t.set(s.name,s)})}),this._groups.next(t),this._groupsFeatures.next(n);const s=this._activeGroup.value;s&&this.setActiveGroup(t.get(s.name))}getGroup(e){return this._groups.value.get(e)}getGroupFeatures(e,t){return e.filter(e=>e.properties.group&&e.properties.group.length&&e.properties.group.some(e=>e.id===t.id))}createGroup(e,t,n){return e.map(e=>{let s=e.properties.group?e.properties.group:[];return s=s.filter(e=>e.id!==t.id),s.push(t),e.properties.group=s,e.properties.style=n||(e.properties.style?e.properties.style:{}),e})}updateGroup(e,t,n){return this.getGroupFeatures(e,t).map(e=>{const s=e.properties.group.filter(e=>e.id!==t.id);return s.push(t),e.properties.group=s,e.properties.style=n||(e.properties.style?e.properties.style:{}),e})}deleteGroup(e,t){return this.getGroupFeatures(e,t).map(e=>(e.properties.group=e.properties.group.filter(e=>e.id!==t.id),e))}createNewGroup(e,t,n){const s=Object(W.v4)(),i=function(){let e="#";for(let t=0;t<6;t++)e+="0123456789ABCDEF"[Math.floor(16*Math.random())];return e}(),o={id:s,name:n,color:i,icon:"fa-house-damage"},a={color:i,faIcon:"fa-house-damage"};return this.createGroupFeatures(e,t,o,a),o}createGroupFeatures(e,t,n,s){s?this.createGroup(t,n,s).forEach(t=>{this.updateFeatureProperty(e,t.id,t.properties)}):this.createGroup(t,n).forEach(t=>{this.updateFeatureProperty(e,t.id,t.properties)})}deleteGroupFeatures(e,t,n){this.deleteGroup(t,n).forEach(t=>{this.updateFeatureProperty(e,t.id,t.properties)})}updateGroupFeatures(e,t,n,s){s?this.updateGroup(t,n,s).forEach(t=>{this.updateFeatureProperty(e,t.id,t.properties)}):this.updateGroup(t,n).forEach(t=>{this.updateFeatureProperty(e,t.id,t.properties)})}renameGroup(e,t,n,s){const i=Object.assign({},n,{name:s});this.updateGroupFeatures(e,t,i)}reiconGroup(e,t,n,s){const i=Object.assign({},n,{icon:s}),o={faIcon:s,color:n.color?n.color:"#00C8FF"};this.updateGroupFeatures(e,t,i,o)}get overlays(){return this._overlays.asObservable()}get features(){return this._features.asObservable()}get activeFeature(){return this._activeFeature.asObservable()}set activeFeature(e){e?e===this._activeFeature.getValue()?this._activeFeature.next(null):this._activeFeature.next(e):this._activeFeature.next(null)}get activeOverlay(){return this._activeOverlay.asObservable()}set activeOverlay(e){this._activeOverlay.next(e)}get mapMouseLocation(){return this._mapMouseLocation.asObservable()}set mapMouseLocation(e){this._mapMouseLocation.next(e)}set basemap(e){this._basemap.next(e)}get basemap(){return this._basemap.asObservable()}};Z.ctorParameters=()=>[{type:l.b},{type:H},{type:B}],Z=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[l.b,H,B])],Z);let K=class{constructor(e,t,n){this.geoDataService=e,this.authService=t,this.bsModalService=n}ngOnInit(){}};K.ctorParameters=()=>[{type:Z},{type:R},{type:d.c}],K=o.a([Object(s.n)({selector:"app-main",template:o.b(n("AZwa")).default,styles:[o.b(n("8lyn")).default]}),o.c("design:paramtypes",[Z,R,d.c])],K);let X=class{constructor(e,t){this.route=e,this.auth=t}ngOnInit(){const e=this.route.snapshot.fragment,t=new URLSearchParams(e),n=t.get("access_token"),s=+t.get("expires_in");this.auth.setToken(n,s)}};X.ctorParameters=()=>[{type:O.a},{type:R}],X=o.a([Object(s.n)({selector:"app-callback",template:o.b(n("X9m5")).default,styles:[o.b(n("u61n")).default]}),o.c("design:paramtypes",[O.a,R])],X);let q=class{constructor(e){this.geoDataService=e}deleteForm(e,t,n,s){const i=Object.assign({},n,{forms:n.forms.filter(e=>e.id!==t.id)});this.geoDataService.updateGroupFeatures(e,s,i)}renameForm(e,t,n,s,i){const o=Object.assign({},n,{forms:[...n.forms.filter(e=>e.id!==t.id),Object.assign({},t,{label:i})]});this.geoDataService.updateGroupFeatures(e,s,o)}createForm(e,t,n,s){const i=Object(W.v4)();t=Object.assign({},t,{id:i});const o=Object.assign({},n,{forms:n.forms?[...n.forms,t]:[t]});this.geoDataService.updateGroupFeatures(e,s,o)}checkDefault(e,t){if("default"===e)try{e=t.styles.color}catch(n){e="#00C8FF"}return e}saveStyles(e,t,n,s,i){i||n.icon}updateTagValue(e,t,n,s){let i=t.properties.tags?t.properties.tags:[];i=i.filter(e=>n.id!==e.id);const o={id:n.id,value:s};t.properties.tags=[...i,o],this.geoDataService.updateFeatureProperty(e.id,t.id,t.properties)}updateTagValues(e,t,n){t.properties.tags=n,this.geoDataService.updateFeatureProperty(e.id,t.id,t.properties)}getTagValue(e,t){if(e.properties.tags){const n=e.properties.tags.find(e=>e.id&&e.id===t.id);if(n)return n.value}return"checkbox"===t.type?[]:""}};q.ctorParameters=()=>[{type:Z}],q=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[Z])],q);let Y=class{constructor(){this._selectedImages=new N.a([]),this.selectedImages=this._selectedImages.asObservable(),this._showTagger=new N.a(!1),this.showTagger=this._showTagger.asObservable(),this._showTagGenerator=new N.a(!1),this.showTagGenerator=this._showTagGenerator.asObservable(),this._groupToAdd=new N.a({name:void 0}),this.groupToAdd=this._groupToAdd.asObservable()}imageSelected(e){return this._selectedImages.value.some(t=>t.id===e.id)}unselectAllImages(){this._selectedImages.next([])}toggleImageSelect(e){const t=this._selectedImages.value,n=this.imageSelected(e)?t.filter(t=>t.id!==e.id):[e,...t];this._selectedImages.next(n)}setSelectedImages(e){this._selectedImages.next(e)}setGroupToAdd(e){this._groupToAdd.next(e)}toggleTagger(){this._showTagger.next(!this._showTagger.value)}setShowTagGenerator(e){this._showTagGenerator.next(e)}};Y=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[])],Y);var Q=n("vkgz");let ee=class{constructor(e,t,n){this.http=e,this.authService=t,this.notificationsService=n,this._projects=new N.a([]),this.projects=this._projects.asObservable(),this._activeProject=new M.a(1),this.activeProject=this._activeProject.asObservable(),this._projectUsers=new M.a(1),this.projectUsers$=this._projectUsers.asObservable()}testGeoApi(){this.http.post("http://localhost:8888/projects/",{name:"Awesome Project",description:"Cool project"}).subscribe(e=>{this._projects.next([...this._projects.value,e]),this._activeProject.next(e)});this.http.get("http://localhost:8888/projects/").subscribe(e=>{this._projects.next(e)})}getProjects(){this.http.get(A.apiUrl+"/projects/").subscribe(e=>{this._projects.next(e)},e=>{this.notificationsService.showErrorToast("Error getting projects DesignSafe or GeoAPI might be down")})}create(e){this.http.post(A.apiUrl+"/projects/",e).subscribe(e=>{e=Object.assign({},e,{deletable:!0}),this.setActiveProject(e),this._projects.next([...this._projects.value,e])})}setActiveProject(e){window.localStorage.setItem("lastProj",JSON.stringify(e));try{this._activeProject.next(e)}catch(t){return t}}update(e){this.http.put(A.apiUrl+`/projects/${e.project.id}/`,e).subscribe(e=>{this._activeProject.next(e),this.getProjects()})}delete(e){this.http.delete(A.apiUrl+`projects/${e.id}/`).subscribe(e=>{window.localStorage.removeItem("lastProj"),this.getProjects()},e=>{this.notificationsService.showErrorToast("Could not delete project!"),console.error(e)})}getProjectUsers(e){return this.http.get(A.apiUrl+`/projects/${e.id}/users/`).pipe(Object(Q.a)(e=>{this._projectUsers.next(e)}))}addUserToProject(e,t){const n={username:t};this.http.post(A.apiUrl+`/projects/${e.id}/users/`,n).subscribe(t=>{this.getProjectUsers(e).subscribe()})}deleteUserFromProject(e,t){this.http.delete(A.apiUrl+`/projects/${e.id}/users/${t}/`).subscribe(t=>{this.getProjectUsers(e).subscribe()},e=>{console.log(e)})}};ee.ctorParameters=()=>[{type:l.b},{type:R},{type:H}],ee=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[l.b,R,H])],ee);let te=class{constructor(e,t,n,s,i,o){this.formsService=e,this.groupsService=t,this.dialog=n,this.router=s,this.geoDataService=i,this.projectsService=o,this.formOptions=[],this.optionColorFilter="#000000",this.openOption={},this.enabledControls=[],this.showSubitem=!0}ngOnInit(){this.geoDataService.activeGroup.subscribe(e=>{this.activeGroup=e}),this.geoDataService.groups.subscribe(e=>{this.groups=e}),this.geoDataService.groupsFeatures.subscribe(e=>{this.groupsFeatures=e}),this.projectsService.activeProject.subscribe(e=>{this.activeProject=e}),this.formOptions=[],this.formType="text",this.formName="",this.formLabel="",this.formValue="",this.formRequired=!1,this.enabledControls=["Text","Checkbox","Radio","Dropdown","Color"]}inputFormLabel(e){this.formLabel=e.target.value}inputFormColor(e){this.formColor=e.target.value}addOptionItem(e){if(e){0==this.formOptions.filter(t=>t.label==e).length&&0!=e.length&&this.formOptions.push({label:e,color:this.optionColorFilter})}}deleteOption(e){this.formOptions=this.formOptions.filter(t=>t.label!=e.label)}openRenameModal(e,t){this.selectedGroup=t,this.dialog.open(e)}openRenameOptionModal(e){this.dialog.open(e)}renameOption(e,t){t=t.toLowerCase(),this.formOptions.forEach(n=>{n.label==e.label&&(n.label=t)})}selectInputForm(e){this.formType=e,this.formLabel="",this.formOptions=[]}clearOption(){this.optionFilter=""}clearLabel(){this.labelFilter=""}clearOptionColor(){this.optionColorFilter="#000000"}clear(){this.clearLabel(),this.clearOptionColor(),this.clearOption()}addFormItem(){const e={type:this.formType,groupName:this.activeGroup.name,label:this.formLabel,options:[]};if(this.openOption[this.formLabel]=!1,"text"!==this.formType&&0!=this.formOptions.length){const t=[];for(const e of this.formOptions)t.push({label:e});e.options=this.formOptions}this.formsService.createForm(this.activeProject.id,e,this.groups.get(this.activeGroup.name),this.groupsFeatures.get(this.activeGroup.name)),this.formLabel="",this.formColor="",this.formOptions=[],this.groupsService.setShowTagGenerator(!1),this.clear()}cancelCreate(){this.groupsService.setShowTagGenerator(!1),this.clear()}expandPanel(){this.showSubitem=!this.showSubitem}};te.ctorParameters=()=>[{type:q},{type:Y},{type:f.b},{type:O.b},{type:Z},{type:ee}],te=o.a([Object(s.n)({selector:"app-tag-generator",template:o.b(n("MHpZ")).default,styles:[o.b(n("dTB+")).default]}),o.c("design:paramtypes",[q,Y,f.b,O.b,Z,ee])],te);var ne=n("itXk");let se=class{constructor(e,t,n,s,i){this.groupsService=e,this.formsService=t,this.dialog=n,this.projectsService=s,this.geoDataService=i,this.showSubitem=!0,this.formList=[],this.tagName="",this.tagValues=[],this.newTagValue=""}ngOnInit(){Object(ne.a)(this.geoDataService.activeGroup,this.geoDataService.groupsFeatures,this.geoDataService.groups).subscribe(([e,t,n])=>{this.activeGroup=e,this.groupsFeatures=t,this.groups=n,e&&(this.formList=e.forms)}),this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e}),this.projectsService.activeProject.subscribe(e=>{this.activeProject=e})}openRenameModal(e){this.dialog.open(e)}deleteForm(e){this.formsService.deleteForm(this.activeProject.id,e,this.groups.get(this.activeGroup.name),this.groupsFeatures.get(this.activeGroup.name))}renameForm(e){this.formsService.renameForm(this.activeProject.id,e,this.groups.get(this.activeGroup.name),this.groupsFeatures.get(this.activeGroup.name),this.tagName),this.tagName="",this.dialog.closeAll()}showTagGenerator(){this.groupsService.setShowTagGenerator(!0)}expandPanel(){this.showSubitem=!this.showSubitem}};se.ctorParameters=()=>[{type:Y},{type:q},{type:f.b},{type:ee},{type:Z}],se=o.a([Object(s.n)({selector:"app-tag-images",template:o.b(n("zXfM")).default,styles:[o.b(n("qk7I")).default]}),o.c("design:paramtypes",[Y,q,f.b,ee,Z])],se);let ie=class{constructor(e){this.authSvc=e}canActivate(e,t){if(this.authSvc.isLoggedIn())return!0;this.authSvc.login()}};ie.ctorParameters=()=>[{type:R}],ie=o.a([Object(s.C)(),o.c("design:paramtypes",[R])],ie);const oe=[{path:"",component:K,canActivate:[ie],children:[{path:"tagger",component:se,canActivateChild:[ie]},{path:"preset",component:te,canActivateChild:[ie]}]},{path:"callback",component:X},{path:"404",component:T}];let ae=class{};ae=o.a([Object(s.K)({imports:[O.c.forRoot(oe,{onSameUrlNavigation:"reload"})],exports:[O.c],providers:[ie]})],ae);let re=class{constructor(e){this.authService=e,this.title="viewer"}ngOnInit(){this.authService.login()}};re.ctorParameters=()=>[{type:R}],re=o.a([Object(s.n)({selector:"app-root",template:o.b(n("VzVu")).default,styles:[o.b(n("ynWL")).default]}),o.c("design:paramtypes",[R])],re);var le=n("4R65");n("JXP8");function ce(e,t){let n;return n="image"==e.featureType()?function(e,t){const n=Object(le.divIcon)({className:"leaflet-fa-marker-icon",html:"<i class='fas fa-camera-retro fa-2x light-blue'></i>"});return Object(le.marker)(t,{icon:n})}(0,t):"collection"==e.featureType()?function(e,t){const n=Object(le.divIcon)({className:"icon-marker",html:'<i class="fa fa-folder-open fa-2x light-blue"></i>'});return Object(le.marker)(t,{icon:n})}(0,t):"video"==e.featureType()?function(e,t){const n=Object(le.divIcon)({className:"leaflet-fa-marker-icon",html:"<i class='fas fa-video fa-2x light-blue'></i>"});return Object(le.marker)(t,{icon:n})}(0,t):function(e,t){return Object(le.circleMarker)(t,{radius:8,fillColor:"#d3d3d3",color:"black",weight:1,opacity:1,fillOpacity:.8})}(0,t),n}var pe=n("WVt+"),ue=n("zP0r"),de=n("pLZG");let he=class{constructor(e,t){this.GeoDataService=e,this.route=t,this.mapType="normal",this.features=new le.FeatureGroup,this.featureClickHandler.bind(this),this.mouseEventHandler.bind(this)}ngOnInit(){this.environment=A,this.overlays=new Map,this.map=new le.Map("map",{center:[40,-80],zoom:9});const e=le.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}),t=le.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"});this.map.addLayer(e),this.loadFeatures(),this.map.on("mousemove",e=>this.mouseEventHandler(e)),this.GeoDataService.activeOverlay.pipe(Object(ue.a)(1)).subscribe(e=>{this.addRemoveOverlay(e)}),this.GeoDataService.activeFeature.pipe(Object(de.a)(e=>null!=e)).subscribe(e=>{this.activeFeature=e;const t=pe.bbox(e);this.map.fitBounds([[t[1],t[0]],[t[3],t[2]]])}),this.GeoDataService.basemap.pipe(Object(ue.a)(1)).subscribe(n=>{"sat"==n&&(this.map.removeLayer(e),this.map.addLayer(t)),"roads"==n&&(this.map.removeLayer(t),this.map.addLayer(e))})}addRemoveOverlay(e){if(this.overlays.has(e.id))this.features.removeLayer(this.overlays.get(e.id)),this.overlays.delete(e.id);else{const t=le.imageOverlay(A.apiUrl+"/assets/"+e.path,[[e.minLat,e.minLon],[e.maxLat,e.maxLon]]);this.overlays.set(e.id,t),this.features.addLayer(t)}this.map.fitBounds(this.features.getBounds())}mouseEventHandler(e){this.GeoDataService.mapMouseLocation=e.latlng}loadFeatures(){const e={pointToLayer:ce};this.GeoDataService.features.subscribe(t=>{this.features.clearLayers();const n=le.markerClusterGroup({iconCreateFunction:e=>le.divIcon({html:`<div><b>${e.getChildCount()}</b></div>`,className:"marker-cluster"})});t.features.forEach(t=>{const s=le.geoJSON(t,e);s.on("click",e=>{this.featureClickHandler(e)}),"Point"==t.geometry.type?n.addLayer(s):this.features.addLayer(s)}),this.features.addLayer(n),this.map.addLayer(this.features);try{this.map.fitBounds(this.features.getBounds())}catch(s){}})}featureClickHandler(e){const t=e.layer.feature;this.GeoDataService.activeFeature=t}};he.ctorParameters=()=>[{type:Z},{type:O.a}],he=o.a([Object(s.n)({selector:"app-map",template:o.b(n("eC1z")).default,styles:[o.b(n("obZR")).default]}),o.c("design:paramtypes",[Z,O.a])],he);let ge=class{constructor(e){this.tapis=e,this.baseUrl="https://agave.designsafe-ci.org/systems/v2/",this._systems=new M.a(1),this.systems=this._systems.asObservable(),this._projects=new M.a(1),this.projects=this._projects.asObservable()}list(){this.tapis.systemsList({type:"STORAGE"}).subscribe(e=>{this._systems.next(e.result),this._projects.next(e.result.filter(e=>e.id.startsWith("project")))},e=>{this._systems.next(null),this._projects.next(null)})}};ge.ctorParameters=()=>[{type:P.b}],ge=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[P.b])],ge);var me=n("dFDH");let fe=class{constructor(e,t,n,s){this.tapis=e,this.http=t,this.authService=n,this.popup=s,this.baseUrl="https://agave.designsafe-ci.org/files/v2/",this._listing=new N.a([]),this.listing=this._listing.asObservable(),this.IMPORTABLE_TYPES=["jpg","jpeg","las","laz","json","geojson","geotiff","tiff","gpx"]}checkIfSelectable(e){if("dir"===e.type)return!1;const t=this.getFileExtension(e);return this.IMPORTABLE_TYPES.includes(t)}getFileExtension(e){return e.name.split(".").pop().toLowerCase()}listFiles(e,t,n,s){return this.tapis.filesList({systemId:e,filePath:t,offset:n,limit:s})}getParentPath(e){const t=e.replace("//","/").split("/");t.pop();return t.join("/")}export(e,t,n,s,i){const o={duration:3e3,horizontalPosition:"right",verticalPosition:"top"},a=`https://agave.designsafe-ci.org/files/v2/media/system/${e}${t}`;let r="plain/text";r=".csv"==s?"text/csv":"application/json";const l=new Blob([i],{type:r}),c=new Date,p=new File([l],n,{lastModified:c.valueOf()}),u=new FormData;u.append("fileToUpload",p),this.http.post(a,u).subscribe(n=>{console.log(n);const s="Successfully saved file to "+e+t;this.popup.open(s,"",o)},n=>{console.log(n);const s="Faled to save file to "+e+t;this.popup.open(s,"",o)})}saveState(){const e=JSON.stringify(this.lastSystem),t=JSON.stringify(this.lastFile);window.localStorage.setItem("system",e),window.localStorage.setItem("file",t)}getState(){try{this.lastSystem=JSON.parse(window.localStorage.getItem("system")),this.lastFile=JSON.parse(window.localStorage.getItem("file")),this.noPreviousSelections=null==this.lastFile}catch(e){console.log(e)}}};fe.ctorParameters=()=>[{type:P.b},{type:l.b},{type:R},{type:me.a}],fe=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[P.b,l.b,R,me.a])],fe);var be,ve=n("XNiG");let ye=be=class{constructor(e,t,n,i,o){this.tapisFilesService=e,this.dialogRef=t,this.dialog=n,this.authService=i,this.agaveSystemsService=o,this.currentPath=new s.w,this.allowedExtensions=this.tapisFilesService.IMPORTABLE_TYPES,this.filesList=[],this.inProgress=!0,this.retrievalError=!1,this.selectedFiles=new Map,this.onClose=new ve.a}ngOnInit(){this.agaveSystemsService.list(),Object(ne.a)([this.authService.currentUser,this.agaveSystemsService.systems,this.agaveSystemsService.projects]).pipe(Object($.a)(1)).subscribe(([e,t,n])=>{this.myDataSystem=t.find(e=>"designsafe.storage.default"===e.id),this.communityDataSystem=t.find(e=>"designsafe.storage.community"===e.id),this.publishedDataSystem=t.find(e=>"designsafe.storage.published"===e.id),this.selectedSystem=this.tapisFilesService.lastSystem,null==this.selectedSystem&&(this.selectedSystem=this.myDataSystem,this.tapisFilesService.lastSystem=this.myDataSystem),this.currentDirectory=this.tapisFilesService.lastFile,this.projects=n,this.currentUser=e;const s={system:this.myDataSystem.id,type:"dir",path:this.currentUser.username};this.tapisFilesService.noPreviousSelections&&(this.selectedSystem=this.myDataSystem,this.tapisFilesService.lastFile=s,this.tapisFilesService.noPreviousSelections=!1),this.browse(this.tapisFilesService.lastFile)})}selectSystem(e){let t;t=e.id===this.myDataSystem.id?this.currentUser.username:"/";const n={system:e.id,type:"dir",path:t};this.selectedSystem=e,this.tapisFilesService.lastSystem=this.selectedSystem,this.browse(n)}browse(e){this.selectedPath=e.path,this.selectedSystem=this.selectedSystem,"dir"===e.type&&(this.currentDirectory=e,this.tapisFilesService.lastFile=e,this.filesList=[],this.offset=0,this.inProgress=!1,this.getFiles())}toRoot(){let e;e=this.selectedSystem.id===this.myDataSystem.id?this.currentUser.username:"/";const t={system:this.selectedSystem.id,type:"dir",path:e};this.browse(t)}getFiles(){const e=this.offset%be.limit==0;!this.inProgress&&e&&(this.inProgress=!0,this.tapisFilesService.listFiles(this.currentDirectory.system,this.currentDirectory.path,this.offset,be.limit).subscribe(e=>{const t=e.result;if(t.length&&"."===t[0].name){const e=t.shift();this.currentPath.next(e.path),e.path=this.tapisFilesService.getParentPath(e.path),e.name="..",t.unshift(e)}const n=[],s=this.allowedExtensions;t.forEach((function(e,t){("file"==e.type&&s.includes(e.path.split(".").pop().toLowerCase())||"dir"==e.type)&&n.push(e)})),this.inProgress=!1,this.retrievalError=!1,this.filesList=this.filesList.concat(n),this.offset=this.offset+t.length},e=>{this.retrievalError=!0,this.inProgress=!1}))}select(e,t,n){e.shiftKey?this.selectFilesShiftClick(n,t):this.tapisFilesService.checkIfSelectable(t)&&this.addSelectedFile(t,n)}selectFilesShiftClick(e,t){this.selectShift(e,t)}addSelectedFile(e,t){-1!=t&&(this.firstFileIndex=t),this.tapisFilesService.checkIfSelectable(e)&&(this.selectedFiles.has(e.path)?this.selectedFiles.delete(e.path):this.selectedFiles.set(e.path,e))}chooseFiles(){this.tapisFilesService.saveState(),this.tapisFilesService.lastSystem=this.selectedSystem;const e=Array.from(this.selectedFiles.values());this.dialogRef.close(e)}cancel(){this.tapisFilesService.saveState(),this.tapisFilesService.lastSystem=this.selectedSystem,this.dialogRef.close()}selectAll(){let e=0;for(const t of this.filesList)this.selectedFiles.has(t.path)||(this.select("",t,-1),e+=1);1==e&&this.selectedFiles.clear()}selectShift(e,t){null!=this.firstFileIndex&&this.firstFileIndex!=e?this.addRangeFiles(this.firstFileIndex,e,!0):this.addSelectedFile(t,e)}addRangeFiles(e,t,n){const s=Math.max(e,t);for(let i=Math.min(e,t);i<s+1;++i)this.addSelectedFile(this.filesList[i],-1);n&&this.addSelectedFile(this.filesList[e],-1)}};ye.limit=200,ye.ctorParameters=()=>[{type:fe},{type:f.d},{type:f.b},{type:R},{type:ge}],o.a([Object(s.R)(),o.c("design:type",s.w)],ye.prototype,"currentPath",void 0),ye=be=o.a([Object(s.n)({selector:"app-modal-file-browser",template:o.b(n("0NOL")).default,styles:[o.b(n("u6lZ")).default]}),o.c("design:paramtypes",[fe,f.d,f.b,R,ge])],ye);var xe,Se=n("s7LF");let we=xe=class{constructor(e,t,n,i,o){this.tapisFilesService=e,this.dialogRef=t,this.dialog=n,this.authService=i,this.agaveSystemsService=o,this.currentPath=new s.w,this.filesList=[],this.inProgress=!0,this.selectedFiles=new Map,this.onClose=new ve.a,this.passbackData=["","","",""],this.fileName="Custom File Name",this.fileExtension=".csv"}ngOnInit(){this.downloadSelectForm=new Se.c({Name:new Se.b(this.fileName),Extension:new Se.b(this.fileExtension)}),this.agaveSystemsService.list(),Object(ne.a)([this.authService.currentUser,this.agaveSystemsService.systems,this.agaveSystemsService.projects]).pipe(Object($.a)(1)).subscribe(([e,t,n])=>{this.myDataSystem=t.find(e=>"designsafe.storage.default"===e.id),this.communityDataSystem=t.find(e=>"designsafe.storage.community"===e.id),this.publishedDataSystem=t.find(e=>"designsafe.storage.published"===e.id),this.selectedSystem=this.myDataSystem,this.projects=n,this.currentUser=e;const s={system:this.myDataSystem.id,type:"dir",path:this.currentUser.username};this.browse(s)})}selectSystem(e){let t;t=e.id===this.myDataSystem.id?this.currentUser.username:"/";const n={system:e.id,type:"dir",path:t};this.browse(n)}browse(e){"dir"===e.type&&(this.currentDirectory=e,this.filesList=[],this.offset=0,this.inProgress=!1,this.getFiles())}getFiles(){const e=this.offset%xe.limit==0;!this.inProgress&&e&&(this.inProgress=!0,this.tapisFilesService.listFiles(this.currentDirectory.system,this.currentDirectory.path,this.offset,xe.limit).subscribe(e=>{const t=e.result;if(t.length&&"."===t[0].name){const e=t.shift();this.currentPath.next(e.path),this.passbackData[1]=e.path,e.path=this.tapisFilesService.getParentPath(e.path),e.name="..",t.unshift(e)}const n=[];t.forEach((function(e,t){"file"!=e.type&&"dir"!=e.type||n.push(e)})),this.inProgress=!1,this.filesList=this.filesList.concat(n),this.offset=this.offset+t.length},e=>{this.inProgress=!1}))}chooseFiles(){this.passbackData[0]=this.selectedSystem.id,this.downloadSelectForm.dirty?this.passbackData[2]=this.downloadSelectForm.get("Name").value:this.passbackData[2]="",this.passbackData[3]=this.fileExtension,this.dialogRef.close(this.passbackData)}cancel(){this.dialogRef.close()}};we.limit=200,we.ctorParameters=()=>[{type:fe},{type:f.d},{type:f.b},{type:R},{type:ge}],o.a([Object(s.R)(),o.c("design:type",s.w)],we.prototype,"currentPath",void 0),we=xe=o.a([Object(s.n)({selector:"app-modal-download-selector",template:o.b(n("7E2L")).default,styles:[o.b(n("Ag+R")).default]}),o.c("design:paramtypes",[fe,f.d,f.b,R,ge])],we);let je=class{constructor(e,t,n){this.dialogRef=e,this.dialog=t,this.projectsService=n,this.onClose=new ve.a}ngOnInit(){this.projCreateForm=new Se.c({name:new Se.b(""),description:new Se.b("")})}close(e){this.dialogRef.close()}submit(){const e=new D,t=new C;e.description=this.projCreateForm.get("description").value,e.name=this.projCreateForm.get("name").value,t.project=e,this.projectsService.create(t),this.dialogRef.close()}};je.ctorParameters=()=>[{type:f.d},{type:f.b},{type:ee}],je=o.a([Object(s.n)({selector:"app-modal-create-project",template:o.b(n("nOsy")).default,styles:[o.b(n("fWOx")).default]}),o.c("design:paramtypes",[f.d,f.b,ee])],je);let Fe=class{constructor(e,t,n){this.dialogRef=e,this.dialog=t,this.projectsService=n}ngOnInit(){this.projShareForm=new Se.c({name:new Se.b("")}),this.projectsService.activeProject.subscribe(e=>{this.activeProj=e}),this.projectsService.getProjectUsers(this.activeProj).subscribe(e=>{this.projectUsers=e,this.onlyOne=1==this.projectUsers.length})}close(){this.dialogRef.close()}submit(){this.projectsService.addUserToProject(this.activeProj,this.projShareForm.get("name").value),this.dialogRef.close()}delete(e){this.projectsService.deleteUserFromProject(this.activeProj,e),this.dialogRef.close()}};Fe.ctorParameters=()=>[{type:f.d},{type:f.b},{type:ee}],Fe=o.a([Object(s.n)({selector:"app-modal-share-project",template:o.b(n("P1jy")).default,styles:[o.b(n("dp4s")).default]}),o.c("design:paramtypes",[f.d,f.b,ee])],Fe);let ke=class{constructor(e,t,n,s){this.dialogRef=e,this.dialog=t,this.projectsService=n,this.projData=s}ngOnInit(){this.projectsService.activeProject.subscribe(e=>{this.activeProject=e}),this.projCreateForm=new Se.c({name:new Se.b(this.activeProject.name),description:new Se.b(this.activeProject.description)})}close(){this.dialogRef.close()}delete(){confirm("Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.")&&this.projectsService.delete(this.activeProject),this.dialogRef.close()}update(){const e=new D,t=new C;e.description=this.projCreateForm.get("description").value,e.name=this.projCreateForm.get("name").value,e.id=this.activeProject.id,e.uuid=this.activeProject.uuid,t.project=e,this.projectsService.update(t),this.dialogRef.close()}};ke.ctorParameters=()=>[{type:f.d},{type:f.b},{type:ee},{type:void 0,decorators:[{type:s.B,args:[f.a]}]}],ke=o.a([Object(s.n)({selector:"app-modal-current-project",template:o.b(n("moaK")).default,styles:[o.b(n("tw4j")).default]}),o.d(3,Object(s.B)(f.a)),o.c("design:paramtypes",[f.d,f.b,ee,Object])],ke);let Pe=class{constructor(e){this.geoDataService=e,this._features=new N.a({type:"FeatureCollection",features:[]}),this.features$=this._features.asObservable(),this.geoDataService.features.subscribe(e=>{this._features.next(e),this.featureCollection=e})}deleteFeature(e){this.featureCollection.features=this.featureCollection.features.filter(t=>t.id!=e.id),this._features.next(this.featureCollection),this.geoDataService.deleteFeature(e)}bulkFeatureDelete(e){e.forEach(e=>{this.featureCollection.features=this.featureCollection.features.filter(t=>t.id!=e.id),this.geoDataService.deleteFeature(e)}),this._features.next(this.featureCollection)}saveFeature(e){this.geoDataService.updateFeatureProperty(e.project_id,Number(e.id),e.properties)}updateFeatureProperties(e,t=null){null!=t&&(e.properties=t),this.featureCollection.features.forEach(t=>{t.id==e.id&&(t=e)}),this.saveFeature(e)}};Pe.ctorParameters=()=>[{type:Z}],Pe=o.a([Object(s.C)({providedIn:"root"}),o.c("design:paramtypes",[Z])],Pe);var Oe=n("xOOu");let Te=class{constructor(e,t,n,s,i,o,a,r,l,c,p,u,d){this.projectsService=e,this.geoDataService=t,this.bsModalService=n,this.groupsService=s,this.formsService=i,this.authService=o,this.cdr=a,this.filesService=r,this.router=l,this.dialog=c,this.scrollService=p,this.notificationsService=u,this.featureService=d,this.featureList=[],this.mapMouseLocation=new le.LatLng(0,0),this.showTagger=!1,this.invalidNameError=!1,this.existingNameError=!1,this.foundFilePaths=[]}ngOnInit(){this.filesService.getState(),this.groupsService.groupToAdd.subscribe(e=>{console.log(e),this.groupToAdd=e}),this.geoDataService.updatedTagFeatures.subscribe(e=>{this.updatedTagValues=e}),this.featureService.features$.subscribe(e=>{this.features=e,null!=this.features&&(this.featureList=e.features.filter(e=>e.assets.length&&e.initialAsset()&&"image"===e.featureType()))}),this.geoDataService.groups.subscribe(e=>{this.groups=e,this.groupsExist=!(!e||!e.size)}),this.projectsService.activeProject.subscribe(e=>{this.activeProject=e}),Object(ne.a)(this.geoDataService.activeGroup,this.geoDataService.groupsFeatures).subscribe(([e,t])=>{this.activeGroup=e,this.groupsFeatures=t,e&&t&&(this.activeGroupFeatures=t.get(e.name),this.activeGroupFeatures&&(this.activeGroupFeaturesRotate=[...this.activeGroupFeatures]))}),this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e}),this.geoDataService.activeFeature.subscribe(e=>{this.activeFeature=e}),this.notificationsService.notifications.subscribe(e=>{const t=e.some(e=>"success"===e.status),n=e.some(e=>"error"===e.status);t&&this.geoDataService.getFeatures(this.selectedProject.id),n&&(e.forEach(e=>{if("Error importing "==e.message.substring(0,16)&&!this.foundFilePaths.some(t=>t===e.message.substring(16))){const t=e.message.substring(16);this.geoDataService.uploadNewFeature(this.selectedProject.id,this.createBlankFeature(),t),this.foundFilePaths.push(t)}}),this.geoDataService.getFeatures(this.selectedProject.id))}),this.authService.currentUser.subscribe(e=>this.currentUser=e),this.projectsService.getProjects(),this.projectsService.projects.subscribe(e=>{this.projects=e;let t=null;try{t=JSON.parse(window.localStorage.getItem("lastProj"))}catch(n){t=null}if(e.length){const e=t?this.projects.find(e=>e.id===t.id):null;e?this.projectsService.setActiveProject(e):this.projectsService.setActiveProject(this.projects[0])}this.groupsService.selectedImages.subscribe(e=>{this.selectedImages=e}),this.groupsService.showTagger.subscribe(e=>{this.showTagger=e})}),this.projectsService.activeProject.subscribe(e=>{this.selectedProject=e,this.selectedProject&&(this.getDataForProject(this.selectedProject),this.hazmapperLink="https://hazmapper.tacc.utexas.edu/hazmapper/project/"+e.uuid)}),this.geoDataService.mapMouseLocation.pipe(Object(ue.a)(1)).subscribe(e=>{this.mapMouseLocation=e})}ngAfterViewChecked(){this.cdr.detectChanges()}clearAll(){this.groupsService.unselectAllImages()}compareGroup(e,t){return e.name===t.name}changeGroupToAdd(e){this.groupsService.setGroupToAdd(e.value)}selectProject(e){this.projectsService.setActiveProject(e)}getDataForProject(e){this.geoDataService.getFeatures(e.id),this.geoDataService.getOverlays(e.id),this.geoDataService.getPointClouds(e.id)}openFilePicker(){this.foundFilePaths=[];this.dialog.open(ye).afterClosed().subscribe(e=>{null!=e&&this.geoDataService.importFileFromTapis(this.selectedProject.id,e)})}createBlankFeature(){return{type:"Feature",geometry:{type:"Point",coordinates:[0,0]},properties:{}}}openDownloadSelector(e){let t;this.dialog.open(we).afterClosed().subscribe(e=>{t=e,this.saveFile(".json"==t[3],!0,t[0],t[1],t[2])})}openCreateProjectModal(){this.dialog.open(je,{height:"400px",width:"600px"})}openShareProjectModal(){this.dialog.open(Fe,{height:"400px",width:"600px"})}openProjectModal(e){this.dialog.open(ke,{height:"400px",width:"600px",data:{id:e.id,name:e.name,description:e.description,uuid:e.uuid}})}addGroup(e){if(this.groupName=e,e&&0!==e.length)if(this.groups.get(e))this.invalidNameError=!1,this.existingNameError=!0;else{this.invalidNameError=!1,this.existingNameError=!1;this.geoDataService.createNewGroup(this.selectedProject.id,this.selectedImages,e);this.dialog.closeAll(),this.groupsService.unselectAllImages()}else this.invalidNameError=!0,this.existingNameError=!1}addToGroup(e){this.geoDataService.createGroupFeatures(this.activeProject.id,this.selectedImages,this.groups.get(e.name)),this.groupsService.unselectAllImages(),this.scrollService.setScrollRestored(!0)}openAddGroupModal(e){this.dialog.open(e)}toggleTagger(){if(this.showTagger)this.scrollService.setScrollPosition();else{this.scrollService.setScrollRestored(!0);const[e]=this.groupsFeatures.keys(),t=(this.groupsFeatures.get(e),this.groups.get(e));this.geoDataService.setActiveGroup(t),this.groupsService.setShowTagGenerator(!1),this.groupsService.unselectAllImages()}this.groupsService.toggleTagger()}getAssetDisplay(){return this.activeGroupFeature.featureShortPath()}otherPath(e){e?this.activeGroupFeaturesRotate.push(this.activeGroupFeaturesRotate.shift()):this.activeGroupFeaturesRotate.unshift(this.activeGroupFeaturesRotate.pop()),this.activeGroupFeature=this.activeGroupFeaturesRotate[0],this.geoDataService.setActiveGroupFeature(this.activeGroupFeature)}getCSVHeaders(e){let t=[];return e.forEach(e=>{t=[...Object.keys(e)]}),t}exportList(){const e=[];return this.groups.forEach(t=>{const n={};n.groupName=t.name;const s=this.groupsFeatures.get(t.name);n.features=[];const i=t.forms;s.forEach(e=>{let s=A.apiUrl+"/assets/"+e.assets[0].path;s=s.replace(/([^:])(\/{2,})/g,"$1/");const o=e.geometry.coordinates,a=e.properties.tags,r={src:s,id:e.id,longitude:o[0],latitude:o[1],groupName:t.name,icon:t.icon,color:t.color};i&&a&&i.forEach(e=>{const t=a.find(t=>e.id===t.id);if(t){const n=e.label.charAt(0).toUpperCase()+e.label.slice(1);r["Tag"+n+"Type"]=e.type,r["Tag"+n+"Value"]="checkbox"===e.type?t.value.map(e=>e.label).join("|"):t.value}}),n.features.push(r)}),e.push(n)}),e}saveFile(e,t=!1,n="",s="",i){const o=this.exportList(),a="taggit-proj-"+this.selectedProject.name;if(e){const e=JSON.stringify(o),r=new Blob(["\ufeff"+e],{type:"text/json;charset=utf-8;"});t?this.filesService.export(n,s,i,".json",r):this.download(r,".json",a)}else{const e=o.map(e=>{const t=[],n=this.getCSVHeaders(e.features);return t.push(n.join(",")),e.features.forEach(e=>{const s=n.map(t=>e[t]?e[t]:"");t.push(s.join(","))}),t.join("\n")}),r=new Oe;e.forEach((e,t)=>{r.file(`group-${t}.csv`,e)}),r.generateAsync({type:"blob"}).then(e=>{t?this.filesService.export(n,s,i,".zip",e):this.download(e,".zip",a)})}}download(e,t,n){const s=document.createElement("a"),i=window.URL.createObjectURL(e);-1!=navigator.userAgent.indexOf("Safari")&&-1==navigator.userAgent.indexOf("Chrome")&&s.setAttribute("target","_blank"),s.setAttribute("href",i),s.setAttribute("download",n+t),s.style.visibility="hidden",document.body.appendChild(s),s.click(),document.body.removeChild(s),window.URL.revokeObjectURL(i)}saveTags(e){this.geoDataService.updateFeatureTags(this.activeProject.id)}};Te.ctorParameters=()=>[{type:ee},{type:Z},{type:d.c},{type:Y},{type:q},{type:R},{type:s.k},{type:fe},{type:O.b},{type:f.b},{type:B},{type:H},{type:Pe}],Te=o.a([Object(s.n)({selector:"app-control-bar",template:o.b(n("vlUF")).default,styles:[o.b(n("uV4w")).default]}),o.c("design:paramtypes",[ee,Z,d.c,Y,q,R,s.k,fe,O.b,f.b,B,H,Pe])],Te);var Ge=n("z6cu"),Ie=n("JIr8");let De=class{constructor(e){this.authService=e}intercept(e,t){return t.handle(e).pipe(Object(Ie.a)(e=>{401===e.status&&(this.authService.logout(),location.reload());const t=e.error.message||e.statusText;return Object(Ge.a)(t)}))}};De.ctorParameters=()=>[{type:R}],De=o.a([Object(s.C)(),o.c("design:paramtypes",[R])],De);let Ce=class{constructor(e){this.authSvc=e}intercept(e,t){return e.url.indexOf("https://agave.designsafe-ci.org")>-1&&this.authSvc.isLoggedIn()&&(e=e.clone({setHeaders:{Authorization:"Bearer "+this.authSvc.userToken.token}})),e.url.indexOf("http://localhost")>-1&&this.authSvc.isLoggedIn()&&(e=e.clone({setHeaders:{"X-JWT-Assertion-designsafe":A.jwt}})),t.handle(e)}};Ce.ctorParameters=()=>[{type:R}],Ce=o.a([Object(s.C)(),o.c("design:paramtypes",[R])],Ce);let _e=class{constructor(e,t,n,s,i,o,a,r,l){this.geoDataService=e,this.projectsService=t,this.groupsService=n,this.cdr=s,this.renderer=i,this.spinner=o,this.dialog=a,this.scrollService=r,this.featureService=l,this.showTagger=!1,this.scrolling=!1,this.featureList=[],this.scrollSum=15}ngAfterViewChecked(){this.scrollService.scrollRestored&&this.scrollService.scroll(),this.cdr.detectChanges()}ngOnInit(){this.environment=A,this.geoDataService.loaded.subscribe(e=>{this.loaded=e},e=>{this.projectsExist=!1}),this.featureService.features$.subscribe(e=>{e&&(e.features.length>0?(this.imagesExist=!0,this.featureList=e.features.filter(e=>{try{return e.initialAsset()&&"image"===e.featureType()}catch(t){return console.error(t),e.assets.push({path:"../../images/Image-not-found.png"}),!1}}),this.featureListScroll=this.featureList.slice(0,this.scrollSum)):this.imagesExist=!1)}),this.projectsService.projects.subscribe(e=>{this.projects=e,this.projects.length?this.projectsExist=!0:this.projectsExist=!1}),this.geoDataService.groupsFeatures.subscribe(e=>{this.groupsFeatures=e}),this.geoDataService.groups.subscribe(e=>{this.groups=e}),this.geoDataService.activeFeature.subscribe(e=>{e&&(this.activeFeature=e)}),this.geoDataService.activeGroup.subscribe(e=>{this.activeGroup=e}),this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e}),this.geoDataService.groups.subscribe(e=>{this.groups=e}),this.groupsService.showTagger.subscribe(e=>{this.showTagger=e,this.scrollStatus=e?"success":"danger"})}getPath(){return this.environment.apiUrl+"/assets/"+this.activeGroupFeature.assets[0].path.replace(/([^:])(\/{2,})/g,"$1/")}appendSum(){if(0!=this.featureList.length){if(this.scrollSum==this.featureList.length)return this.spinner.hide(),void(this.scrolling=!1);this.scrollSum>this.featureList.length&&(this.scrollSum=this.featureList.length)}this.featureListScroll=this.featureList.slice(0,this.scrollSum),setTimeout(()=>{this.spinner.hide(),this.scrolling=!1},1300)}onScroll(){this.scrolling||(this.spinner.show(),this.scrollSum+=10,this.appendSum(),this.scrolling=!0)}openCreateProjectModal(){this.dialog.open(je,{height:"400px",width:"600px"})}};_e.ctorParameters=()=>[{type:Z},{type:ee},{type:Y},{type:s.k},{type:s.Z},{type:u.b},{type:f.b},{type:B},{type:Pe}],_e=o.a([Object(s.n)({selector:"app-image-gallery",template:o.b(n("Pwca")).default,styles:[o.b(n("N3QO")).default]}),o.c("design:paramtypes",[Z,ee,Y,s.k,s.Z,u.b,f.b,B,Pe])],_e);let Ee=class{constructor(e,t,n,s,i,o){this.geoDataService=e,this.groupsService=t,this.projectsService=n,this.dialog=s,this.scrollService=i,this.featureService=o,this.status=!1,this.imageSelected="img-unselected",this.hasGroup=!1,this.colors=[]}ngOnInit(){let e;this.environment=A,e="../../images/Image-not-found.png"!=this.feature.assets[0].path?this.environment.apiUrl+"/assets/"+this.feature.assets[0].path:this.feature.assets[0].path,e=e.replace(/([^:])(\/{2,})/g,"$1/"),this.featureSource=e,this.coordinates=this.feature.geometry.coordinates,this.projectsService.activeProject.subscribe(e=>{this.activeProject=e}),this.geoDataService.groups.subscribe(e=>{this.groups=e}),this.groupsService.selectedImages.subscribe(e=>{this.selectedImages=e,this.imageSelected=this.groupsService.imageSelected(this.feature)?"img-selected":"img-unselected"}),this.groupsService.groupToAdd.subscribe(e=>{this.groupToAdd=e}),this.featurePath=this.feature.featurePath()}imageSelect(){this.groupsService.toggleImageSelect(this.feature)}compareGroup(e,t){return e.name===t.name}imageZoom(e){this.dialog.open(e)}imageDelete(){const e=this.featureService;this.selectedImages.forEach((function(t){e.deleteFeature(t)})),this.groupsService.unselectAllImages(),this.scrollService.setScrollRestored(!0)}openModal(e){this.dialog.open(e)}openPreserveScrollModal(e){this.scrollService.setScrollPosition(),this.dialog.open(e)}deleteFromGroup(e,t){this.geoDataService.deleteGroupFeatures(this.activeProject.id,[e],t)}openImageAddModal(e){this.scrollService.setScrollPosition(),this.dialog.open(e)}changeGroupToAdd(e){this.groupsService.setGroupToAdd(e.value)}addGroup(e){this.geoDataService.createGroupFeatures(this.activeProject.id,[this.feature],this.groups.get(e.name)),this.groupsService.unselectAllImages(),this.scrollService.setScrollRestored(!0)}};Ee.ctorParameters=()=>[{type:Z},{type:Y},{type:ee},{type:f.b},{type:B},{type:Pe}],o.a([Object(s.F)(),o.c("design:type",Object)],Ee.prototype,"feature",void 0),Ee=o.a([Object(s.n)({selector:"app-image-box",template:o.b(n("ay+3")).default,styles:[o.b(n("if2z")).default]}),o.c("design:paramtypes",[Z,Y,ee,f.b,B,Pe])],Ee);let Le=class{constructor(){this.checked=!1,this.colorArray=[],this.values=[],this.name=new Se.b("")}ngOnInit(){this.generateColors()}generateColors(){let e=this.form.options.length,t=!1;e%2==1&&(t=!0,e--),e=(e-2)/2;let n=Math.floor(255/e);255===n&&(n=Math.floor(n/2)),this.colorArray.push("#00FF00");let s,i=0;for(let o=0;o<e;o++)i+=n,s=i.toString(16),this.colorArray.push(`#${s}FF00`);t&&this.colorArray.push("#FFFF00"),i=255;for(let o=0;o<e;o++)i-=n,s=i.toString(16),2!=s.length&&(s="0"+s),this.colorArray.push(`#FF${s}00`);this.colorArray.push("#FF0000")}};o.a([Object(s.F)(),o.c("design:type",G)],Le.prototype,"form",void 0),Le=o.a([Object(s.n)({selector:"app-form-generator",template:o.b(n("zusP")).default,styles:[o.b(n("ld75")).default]}),o.c("design:paramtypes",[])],Le);let Ae=class{constructor(e,t){this.groupsService=e,this.geoDataService=t,this.showTagGenerator=!1}ngOnInit(){this.groupsService.showTagGenerator.subscribe(e=>{this.showTagGenerator=e}),this.geoDataService.loadingFeatureProperties.subscribe(e=>{this.loadingFeatureProperties=e})}};Ae.ctorParameters=()=>[{type:Y},{type:Z}],Ae=o.a([Object(s.n)({selector:"app-side-bar",template:o.b(n("c6cR")).default,styles:[o.b(n("IElf")).default]}),o.c("design:paramtypes",[Y,Z])],Ae);const Me=[{id:"fa-house-damage",unicode:"&#xf6f1; house-damage"},{id:"fa-car",unicode:"&#xf1b9; car"},{id:"fa-tree",unicode:"&#xf1bb; tree"},{id:"fa-school",unicode:"&#xf549; school"},{id:"fa-archway",unicode:"&#xf557; archway"},{id:"fa-building",unicode:"&#xf1ad; building"},{id:"fa-bus",unicode:"&#xf207; bus"},{id:"fa-church",unicode:"&#xf51d; church"},{id:"fa-helicopter",unicode:"&#xf533; helicopter"},{id:"fa-hospital-alt",unicode:"&#xf47d; hospital"},{id:"fa-hotel",unicode:"&#xf594; hotel"},{id:"fa-igloo",unicode:"&#xf7ae; igloo"},{id:"fa-motorcycle",unicode:"&#xf21c; motorcycle"},{id:"fa-place-of-worship",unicode:"&#xf67f; place-of-worship"},{id:"fa-plane",unicode:"&#xf072; plane"},{id:"fa-school",unicode:"&#xf549; school"},{id:"fa-rocket",unicode:"&#xf135; rocket"},{id:"fa-ship",unicode:"&#xf21a; ship"},{id:"fa-shopping-cart",unicode:"&#xf07a; shopping-cart"},{id:"fa-shuttle-van",unicode:"&#xf5b6; shuttle-van"},{id:"fa-monument",unicode:"&#xf5a6; monument"},{id:"fa-store",unicode:"&#xf54e; store"},{id:"fa-subway",unicode:"&#xf239; subway"},{id:"fa-taxi",unicode:"&#xf1ba; taxi"},{id:"fa-train",unicode:"&#xf238; train"},{id:"fa-truck",unicode:"&#xf0d1; truck"},{id:"fa-truck-pickup",unicode:"&#xf63c; truck-pickup"},{id:"fa-university",unicode:"&#xf19c; university"},{id:"fa-warehouse",unicode:"&#xf494; warehouse"},{id:"fa-bolt",unicode:"&#xf0e7; bolt"}];let Ue=class{constructor(e,t,n,s){this.groupsService=e,this.geoDataService=t,this.projectsService=n,this.dialog=s,this.iconList=Me,this.selectedIcon="fa-house-damage",this.showSubitem=!0}ngOnInit(){this.projectsService.activeProject.subscribe(e=>{this.selectedProject=e}),this.groups$=this.geoDataService.groups.subscribe(e=>{this.groups=e}),this.geoDataService.groupsFeatures.subscribe(e=>{this.groupsFeatures=e}),this.activeGroup$=this.geoDataService.activeGroup.subscribe(e=>{this.activeGroup=e,e||this.groupsService.toggleTagger()})}selectGroupForm(e){this.geoDataService.setActiveGroup(e)}openRenameOptionModal(e){this.dialog.open(e)}deleteGroup(e){const t=this.groupsFeatures.get(e.name);this.geoDataService.deleteGroupFeatures(this.selectedProject.id,t,e)}openRenameModal(e,t){this.selectedGroup=t,this.dialog.open(e)}openIconSelection(e,t){this.selectedGroup=t,this.selectedIcon=t.icon,this.dialog.open(e)}saveIcon(e){this.geoDataService.reiconGroup(this.selectedProject.id,this.groupsFeatures.get(this.selectedGroup.name),this.groups.get(this.selectedGroup.name),e),this.dialog.closeAll()}isChecked(e){return this.activeGroup&&this.activeGroup.name===e?"checked":""}renameGroup(e){this.geoDataService.renameGroup(this.selectedProject.id,this.groupsFeatures.get(this.selectedGroup.name),this.groups.get(this.selectedGroup.name),e),this.dialog.closeAll()}expandPanel(){this.showSubitem=!this.showSubitem}ngOnDestroy(){this.groups$.unsubscribe(),this.activeGroup$.unsubscribe()}};Ue.ctorParameters=()=>[{type:Y},{type:Z},{type:ee},{type:f.b}],Ue=o.a([Object(s.n)({selector:"app-select-group",template:o.b(n("s9wi")).default,styles:[o.b(n("I57P")).default]}),o.c("design:paramtypes",[Y,Z,ee,f.b])],Ue);let Re=class{constructor(e,t){this.geoDataService=e,this.projectsService=t,this.showSubitem=!0}ngOnInit(){this.projectsService.activeProject.subscribe(e=>{this.activeProject=e}),this.geoDataService.groups.subscribe(e=>{this.groups=e}),this.geoDataService.activeGroup.subscribe(e=>{this.activeGroup=e}),this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e}),this.geoDataService.groupsFeatures.subscribe(e=>{if(this.groupsFeatures=e,e&&this.activeGroup){const e=this.groupsFeatures.get(this.activeGroup.name);if(e)e.some(e=>e.id===this.activeGroupFeature.id)||this.geoDataService.setActiveGroupFeature(e[0]);else{const[e]=this.groups.values();e?this.geoDataService.setActiveGroup(e):this.geoDataService.setActiveGroup(null)}}})}getActiveFeatures(){if(this.activeGroup){const e=this.groupsFeatures.get(this.activeGroup.name);if(this.groups.get(this.activeGroup.name))return e;{const[e]=this.groups.values();return e?(this.geoDataService.setActiveGroup(e),this.groupsFeatures.get(e.name)):[]}}return[]}jumpToImage(e){this.geoDataService.setActiveGroupFeature(e)}isActiveFeature(e){return this.activeGroupFeature.id===e.id}deleteFeature(e){this.geoDataService.deleteGroupFeatures(this.activeProject.id,[e],this.groups.get(this.activeGroup.name))}getFeaturePath(e){return e.featureShortPath()}expandPanel(){this.showSubitem=!this.showSubitem}};Re.ctorParameters=()=>[{type:Z},{type:ee}],Re=o.a([Object(s.n)({selector:"app-select-image",template:o.b(n("033P")).default,styles:[o.b(n("T7o7")).default]}),o.c("design:paramtypes",[Z,ee])],Re);var Ne=n("hOhj"),ze=n("W5yJ"),$e=n("AaDx"),Ve=n("8P0U");let Je=class{constructor(){}ngOnInit(){}};Je=o.a([Object(s.n)({selector:"app-form-fields",template:o.b(n("T+fY")).default}),o.c("design:paramtypes",[])],Je);let He=class{constructor(e,t,n,s,i){this.formsService=e,this.groupsService=t,this.geoDataService=n,this.projectsService=s,this.featureService=i,this.value=[]}ngOnInit(){this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e,this.value=this.formsService.getTagValue(e,this.form)}),this.geoDataService.activeGroup.subscribe(e=>{this.activeGroup=e}),this.projectsService.activeProject.subscribe(e=>{this.activeProject=e})}isChecked(e){return this.value.some(t=>t.label===e.label)}selected(e,t){this.value=this.value.filter(e=>e.label!==t.label),e.target.checked&&this.value.push(t),this.geoDataService.setFeatureTag(this.activeGroupFeature.id,{id:this.form.id,value:this.value})}};He.ctorParameters=()=>[{type:q},{type:Y},{type:Z},{type:ee},{type:Pe}],o.a([Object(s.F)(),o.c("design:type",Object)],He.prototype,"field",void 0),o.a([Object(s.F)(),o.c("design:type",G)],He.prototype,"form",void 0),He=o.a([Object(s.n)({selector:"app-form-checkbox",template:o.b(n("yXUO")).default}),o.c("design:paramtypes",[q,Y,Z,ee,Pe])],He);let Be=class{constructor(e,t){this.formsService=e,this.geoDataService=t,this.field={}}ngOnInit(){this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e,this.value=this.formsService.getTagValue(e,this.form)})}updateCheckedTag(){this.geoDataService.setFeatureTag(this.activeGroupFeature.id,{id:this.form.id,value:this.value})}};Be.ctorParameters=()=>[{type:q},{type:Z}],o.a([Object(s.F)(),o.c("design:type",Object)],Be.prototype,"field",void 0),o.a([Object(s.F)(),o.c("design:type",G)],Be.prototype,"form",void 0),Be=o.a([Object(s.n)({selector:"app-form-dropdown",template:o.b(n("/WLi")).default}),o.c("design:paramtypes",[q,Z])],Be);let We=class{constructor(){this.field={}}ngOnChange(){console.log(this.field.value)}};We=o.a([Object(s.n)({selector:"app-form-file",template:o.b(n("503e")).default,styles:[o.b(n("1NWJ")).default]}),o.c("design:paramtypes",[])],We);let Ze=class{constructor(e,t){this.formsService=e,this.geoDataService=t,this.field={}}ngOnInit(){this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e,this.value=this.formsService.getTagValue(e,this.form)})}updateCheckedTag(){this.geoDataService.setFeatureTag(this.activeGroupFeature.id,{id:this.form.id,value:this.value})}};Ze.ctorParameters=()=>[{type:q},{type:Z}],o.a([Object(s.F)(),o.c("design:type",Object)],Ze.prototype,"field",void 0),o.a([Object(s.F)(),o.c("design:type",G)],Ze.prototype,"form",void 0),o.a([Object(s.F)(),o.c("design:type",String)],Ze.prototype,"label",void 0),Ze=o.a([Object(s.n)({selector:"app-form-radio",template:o.b(n("fIZ9")).default}),o.c("design:paramtypes",[q,Z])],Ze);let Ke=class{constructor(e,t){this.formsService=e,this.geoDataService=t,this.field={},this.value=""}ngOnInit(){this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e,this.value=this.formsService.getTagValue(e,this.form)})}updateValue(){this.geoDataService.setFeatureTag(this.activeGroupFeature.id,{id:this.form.id,value:this.value})}};Ke.ctorParameters=()=>[{type:q},{type:Z}],o.a([Object(s.F)(),o.c("design:type",Object)],Ke.prototype,"field",void 0),o.a([Object(s.F)(),o.c("design:type",G)],Ke.prototype,"form",void 0),Ke=o.a([Object(s.n)({selector:"app-form-textbox",template:o.b(n("dagV")).default}),o.c("design:paramtypes",[q,Z])],Ke);let Xe=class{constructor(e,t,n){this.formsService=e,this.projectsService=t,this.geoDataService=n,this.field={},this.chosenColor="#ffffff",this.value={}}ngOnInit(){this.geoDataService.activeGroupFeature.subscribe(e=>{this.value=this.formsService.getTagValue(e,this.form),this.chosenTag=this.value.label}),this.projectsService.activeProject.subscribe(e=>{this.activeProject=e}),this.geoDataService.activeGroup.subscribe(e=>{this.activeGroup=e}),this.geoDataService.activeGroupFeature.subscribe(e=>{this.activeGroupFeature=e})}updateCheckedTag(){this.value=this.form.options.find(e=>e.label===this.chosenTag),this.formsService.saveStyles(this.activeProject.id,[this.activeGroupFeature],this.activeGroup,this.value.color),this.geoDataService.setFeatureTag(this.activeGroupFeature.id,{id:this.form.id,value:this.value})}};Xe.ctorParameters=()=>[{type:q},{type:ee},{type:Z}],o.a([Object(s.F)(),o.c("design:type",Object)],Xe.prototype,"field",void 0),o.a([Object(s.F)(),o.c("design:type",G)],Xe.prototype,"form",void 0),o.a([Object(s.F)(),o.c("design:type",String)],Xe.prototype,"color",void 0),o.a([Object(s.F)(),o.c("design:type",String)],Xe.prototype,"label",void 0),Xe=o.a([Object(s.n)({selector:"app-form-color",template:o.b(n("m/u+")).default,styles:[o.b(n("FN4D")).default]}),o.c("design:paramtypes",[q,ee,Z])],Xe);var qe=n("igqZ");let Ye=class{};Ye=o.a([Object(s.K)({declarations:[re,he,T,K,Te,X,ye,_e,Ee,Le,Ae,Ue,Re,te,se,je,ke,Ve.a,we,Je,He,Be,We,Ze,Ke,Fe,Xe],imports:[P.a.forRoot({rootUrl:"https://agave.designsafe-ci.org/"}),a.a,ae,l.c,r.b,p.a,u.a,j.a,F.a.forRoot(),d.d.forRoot(),h.a,g.a,m.a,f.c,b.a,v.a,x.a,w.a,S.a,y.a,d.a.forRoot(),Se.j,Se.e,k.a,d.b.forRoot(),c.b,ze.a,Ne.b,$e.a,me.b,qe.a],providers:[R,{provide:l.a,multi:!0,useClass:De},{provide:l.a,multi:!0,useClass:Ce},{provide:c.a,useValue:A.baseHref}],bootstrap:[re],entryComponents:[ye,we,je,ke,Fe]})],Ye),A.production&&Object(s.sb)(),Object(i.a)().bootstrapModule(Ye).catch(e=>console.error(e))},zXfM:function(e,t,n){"use strict";n.r(t),t.default='<div class="tag-forms">\n  <div class="subitem-title" (click)="expandPanel()">\n    <span> Tag Images </span>\n    <span>\n      <span\n        style="cursor: pointer"\n        (click)="showTagGenerator()"\n        matTooltip="Add New Tag Form"\n        style="cursor: pointer; margin-right: 10px"\n        matTooltipPosition="above"\n      >\n        <i class="fas fa-plus"></i>\n      </span>\n    </span>\n  </div>\n  \x3c!-- subitem-title --\x3e\n\n  <div *ngIf="showSubitem" class="subitem">\n    <div class="subitem-scroll">\n      <div *ngFor="let form of formList">\n        <div class="form-item-container">\n          <div class="name-group">{{ form.label }} ({{ form.type }})</div>\n          <div class="button-group">\n            <div (click)="deleteForm(form)">\n              <i\n                class="fas fa-minus"\n                matTooltip="Delete"\n                matTooltipPosition="above"\n                style="cursor: pointer"\n              >\n              </i>\n            </div>\n            \x3c!-- delete button --\x3e\n\n            <div (click)="openRenameModal(renameFormItemModal)">\n              <i\n                class="fas fa-edit"\n                matTooltip="Rename"\n                matTooltipPosition="above"\n                style="cursor: pointer"\n              >\n              </i>\n            </div>\n\n            <ng-template #renameFormItemModal>\n              <input\n                matInput\n                #formItemRename\n                [(ngModel)]="tagName"\n                value="{{ form.label }}"\n                placeholder="Rename Form Item"\n                (keyup.enter)="renameForm(form)"\n              />\n              <br />\n              <br />\n              <div class="button-group">\n                <button\n                  matDialogClose\n                  mat-raised-button\n                  color="primary"\n                  (click)="renameForm(form.label)"\n                >\n                  Rename\n                </button>\n                <button matDialogClose mat-button>Cancel</button>\n              </div>\n            </ng-template>\n            \x3c!-- rename modal --\x3e\n          </div>\n          \x3c!-- button group --\x3e\n        </div>\n        \x3c!-- form-item-container --\x3e\n        <app-form-generator [form]="form"></app-form-generator>\n      </div>\n    </div>\n    \x3c!-- subitem scroll --\x3e\n  </div>\n  \x3c!--subitem --\x3e\n</div>\n\x3c!-- tag-forms --\x3e\n'},zusP:function(e,t,n){"use strict";n.r(t),t.default='<div>\n  <div [ngSwitch]="form.type" class="form-controls">\n    <ng-container *ngSwitchCase="\'text\'">\n      <app-form-textbox [field]="form.options" [form]="form"></app-form-textbox>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'dropdown\'">\n      <app-form-dropdown\n        [field]="form.options"\n        [form]="form"\n      ></app-form-dropdown>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'radio\'">\n      <app-form-radio\n        [field]="opt"\n        [form]="form"\n        label="{{ form.label }}"\n      ></app-form-radio>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'checkbox\'">\n      <app-form-checkbox [form]="form"></app-form-checkbox>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'color\'">\n      <app-form-color\n        [field]="opt"\n        [form]="form"\n        label="{{ form.label }}"\n        [color]="colorArray[form.options.indexOf(opt)]"\n      ></app-form-color>\n    </ng-container>\n  </div>\n</div>\n'}},[[0,0,5]]]);
//# sourceMappingURL=main-es2015.73fe5a0baecdc92aa9b0.js.map