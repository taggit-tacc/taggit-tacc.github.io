{"version":3,"sources":["webpack:///src/app/components/side-bar/select-image/select-image.component.html","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.html","webpack:///src/app/components/notfound/notfound.component.scss","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.html","webpack:///src/app/components/main/main.component.scss","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.scss","webpack:///src/app/components/side-bar/side-bar.component.scss","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.html","webpack:///src/app/components/image-gallery/image-gallery.component.html","webpack:///src/app/components/side-bar/select-image/select-image.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/image-box/image-box.component.html","webpack:///src/app/components/side-bar/side-bar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.scss","webpack:///src/app/components/modal-share-project/modal-share-project.component.scss","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/modal-create-project/modal-create-project.component.scss","webpack:///src/app/components/image-box/image-box.component.scss","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.scss","webpack:///src/app/components/modal-current-project/modal-current-project.component.html","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/app/components/modal-create-project/modal-create-project.component.html","webpack:///src/app/components/map/map.component.scss","webpack:///src/app/components/side-bar/tag-images/tag-images.component.scss","webpack:///src/app/components/side-bar/select-group/select-group.component.html","webpack:///src/app/components/modal-current-project/modal-current-project.component.scss","webpack:///src/app/components/callback/callback.component.scss","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.scss","webpack:///src/app/components/control-bar/control-bar.component.scss","webpack:///src/app/components/control-bar/control-bar.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/models/models.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/geo-data.service.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/components/side-bar/tag-generator/tag-generator.component.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/utils/leafletUtils.ts","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/services/agave-systems.service.ts","webpack:///src/app/services/tapis-files.service.ts","webpack:///src/app/components/modal-file-browser/modal-file-browser.component.ts","webpack:///src/app/components/modal-download-selector/modal-download-selector.component.ts","webpack:///src/app/components/modal-create-project/modal-create-project.component.ts","webpack:///src/app/components/modal-share-project/modal-share-project.component.ts","webpack:///src/app/components/modal-current-project/modal-current-project.component.ts","webpack:///src/app/components/control-bar/control-bar.component.ts","webpack:///src/app/app.interceptors.ts","webpack:///src/app/components/image-gallery/image-gallery.component.ts","webpack:///src/app/components/image-box/image-box.component.ts","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.ts","webpack:///src/app/components/side-bar/side-bar.component.ts","webpack:///src/app/components/side-bar/select-group/select-group.component.ts","webpack:///src/app/components/side-bar/select-image/select-image.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///src/app/components/side-bar/tag-images/tag-images.component.html","webpack:///src/app/components/side-bar/tag-images/form-generator/form-generator.component.html"],"names":["__webpack_require__","r","__webpack_exports__","default","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","__decorate","decorators","target","key","desc","d","c","arguments","length","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__importDefault","mod","__esModule","NotFoundComponent","_classCallCheck","this","_createClass","value","tslib_es6","a","core","n","selector","template","Group","AssetFilters","bbox","assetType","Set","has","delete","add","Project","AuthToken","token","expires","Date","getTime","expires_in","Feature","f","geometry","properties","type","assets","styles","project_id","asset_type","environment","production","apiUrl","clientId","baseHref","AuthenticatedUser","username","email","authentication_service_AuthService","http","router","_currentUser","ReplaySubject","currentUser","asObservable","LS_TOKEN_KEY","LS_USER_KEY","tokenStr","localStorage","getItem","JSON","parse","userToken","isExpired","logout","redirectToauthenticaor","getUserInfo","AUTH_URL","location","origin","Math","random","toString","window","href","removeItem","fromExpiresIn","setItem","stringify","navigate","_this","userStr","user","next","get","subscribe","resp","u","name","fesm2015_http","b","fesm2015_router","C","providedIn","geo_data_service_GeoDataService","_pointClouds","BehaviorSubject","pointClouds","_loaded","loaded","_features","features","features$","_activeFeature","_mapMouseLocation","_basemap","_overlays","_activeOverlay","projectId","query","qstring","querystring","toJson","fc","map","feat","feature","getFeatures","pipe","take","current","push","title","conversionParams","payload","description","conversion_parameters","post","getPointClouds","error","featureId","groupData","pc","console","log","file","form","FormData","append","files","system","path","downloadLink","document","createElement","blob","Blob","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","feats","forEach","addFeature","getValue","activeFeature","ovs","label","minLat","maxLat","minLon","maxLon","toFixed","getOverlays","set","ov","loc","bmap","MainComponent","geoDataService","authService","bsModalService","ngx_foundation","CallbackComponent","route","auth","frag","snapshot","fragment","params","URLSearchParams","setToken","projects_service_ProjectsService","_projects","projects","_activeProject","activeProject","_projectUsers","projectUsers$","_this13","data","prom","proj","p","put","getProjects","tap","users","uname","getProjectUsers","groups_service_GroupsService","projectsService","_groups","groups","_forms","forms","_tempGroup","tempGroup","_showGroup","showGroup","_showSidebar","showSidebar","_activeGroup","activeGroup","_activeFeatureNum","activeFeatureNum","_unselectAll","unselectAll","_featureImagesExist","featureImagesExist","_activeFeatureId","activeFeatureId","_activePane","activePane","_tagFeatureGroup","tagFeatureGroup","groupList","featureList","tempGroupList","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","done","group","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","color","err","return","values","formList","show","select","groupName","pane","num","groupFeature","tagFeatureGroupValue","forms_service_FormsService","groupsService","_activeFormList","activeFormList","_formGroup","formGroup","formItem","first","groupObj","changeGroupForm","required","fesm2015_forms","k","find","updateFormItem","groupObject","filter","opt","options","option","formObj","finalArray","TagGeneratorComponent","formsService","dialog","formOptions","changed","formItemList","openOption","enabledControls","showSubitem","_this27","formType","formName","formLabel","formValue","formRequired","event","selectedGroup","open","showOpt","toLowerCase","optionFilter","labelFilter","_this28","myOpts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","addForm","setActivePane","navigateByUrl","skipLocationChange","esm2015_dialog","TagImagesComponent","_this29","activeGroup$","activeFeatureId$","formGroup$","getRawValue","setTagFeatureGroup","unsubscribe","Activate","authSvc","state","isLoggedIn","login","routes","component","canActivate","children","canActivateChild","AppRoutingModule","K","imports","forRoot","onSameUrlNavigation","providers","AppComponent","createMarker","latlng","featureType","ico","leaflet_src","divIcon","className","html","marker","icon","circleMarker","radius","fillColor","weight","opacity","fillOpacity","map_component_MapComponent","GeoDataService","mapType","FeatureGroup","featureClickHandler","bind","mouseEventHandler","_this30","overlays","Map","center","zoom","baseOSM","tileLayer","maxZoom","attribution","satellite","addLayer","loadFeatures","on","ev","activeOverlay","skip","addRemoveOverlay","turf_min","fitBounds","basemap","removeLayer","overlay","imageOverlay","getBounds","mapMouseLocation","_this31","geojsonOptions","pointToLayer","collection","clearLayers","markers","markerClusterGroup","iconCreateFunction","cluster","getChildCount","geoJSON","layer","agave_systems_service_AgaveSystemsService","tapis","baseUrl","_systems","systems","_this32","systemsList","result","sys","startsWith","ng_tapis","tapis_files_service_TapisFilesService","popup","_listing","listing","IMPORTABLE_TYPES","ext","getFileExtension","includes","split","pop","filesList","systemId","filePath","arr","replace","join","systemID","fileName","extension","snackbarConfig","duration","horizontalPosition","verticalPosition","fullURL","tmp","date","File","lastModified","valueOf","msg","snack_bar","modal_file_browser_component_ModalFileBrowserComponent","tapisFilesService","dialogRef","agaveSystemsService","currentPath","w","allowedExtensions","inProgress","selectedFiles","onClose","Subject","_this34","list","combineLatest","_ref","myDataSystem","communityDataSystem","publishedDataSystem","selectedSystem","init","browse","pth","currentDirectory","getFiles","_this35","listFiles","shift","getParentPath","unshift","newFile","allowedExt","index","concat","checkIfSelectable","addSelectedFile","Array","from","close","R","modal_download_selector_component_ModalDownloadSelectorComponent","passbackData","fileExtension","_this36","downloadSelectForm","Name","Extension","_ref3","_this37","dirty","modal_create_project_component_ModalCreateProjectComponent","projCreateForm","create","modal_share_project_component_ModalShareProjectComponent","_this38","projShareForm","activeProj","projectUsers","addUserToProject","deleteUserFromProject","modal_current_project_component_ModalCurrentProjectComponent","projData","_this39","confirm","uuid","update","B","args","control_bar_component_ControlBarComponent","filesService","REFRESHTIME","LatLng","liveRefresh","timer","interval","_this40","setActiveProject","setGroupProperties","groupsExist","startWith","display_path","imageName","exec","selectedProject","getDataForProject","hazMapperLink","setActiveFeatureNum","timerSubscription","reloadFeatures","_this42","afterClosed","importFileFromTapis","saveFile","height","width","project","setActiveGroup","myRandColor","getRandomColor","addGroup","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","featProp","updateFeatureProperty","Number","addTempGroup","setUnselectAll","setShowGroup","_this44","setFeatureImagesExist","setShowSidebar","dir","activeGroupObj","realGroup","floor","isJSON","content","forExport","CSVHolder","JSONHolder","projID","element","coordinates","featureSource","groupColor","transferJSON","longitude","latitude","src","tempCSV","export","download","url","filename","navigator","userAgent","indexOf","style","visibility","app_interceptors_AuthInterceptor","request","handle","catchError","status","reload","message","statusText","throwError","TokenInterceptor","clone","setHeaders","Authorization","image_gallery_component_ImageGalleryComponent","renderer","spinner","scrolling","scrollSum","_this47","imagesExist","featureListScroll","slice","projectsExist","groupExist","_this48","setActiveFeatureId","_this49","hide","setTimeout","appendSum","Z","ngx_spinner","image_box_component_ImageBoxComponent","modalService","hasGroup","colors","currentGroup","imageCollection","_this50","featurePath","_this51","v","geoData","deleteFeature","ngx_foundation_modal","F","form_generator_component_FormGeneratorComponent","_this55","controls","field","valid","SideBarComponent","SelectGroupComponent","_this56","groups$","what","_this58","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SelectImageComponent","_this60","activeFeatureNum$","_this61","asset","_this64","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","assetId","deleteGroup","getActiveFeatures","AppModule","declarations","progress_bar","rootUrl","platform_browser","animations","ngx_infinite_scroll","ngx_masonry","menu","toolbar","esm2015_button","tooltip","input","esm2015_checkbox","esm2015_select","esm2015_radio","j","dist","common","progress_spinner","tree","card","provide","multi","useClass","useValue","bootstrap","entryComponents","sb","platform_browser_dynamic","bootstrapModule","catch"],"mappings":"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","file":"main-es5.b6393e2e07d1ab4c0bfc.js","sourcesContent":["export default \"<div class=\\\"asset-list\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Image List</div>\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem asset-subitem\\\">\\r\\n\\r\\n\\t<div *ngFor=\\\"let asset of getActiveFeatures()\\\" (click)=\\\"jumpToImage(asset)\\\" class=\\\"asset-container\\\" [ngClass]=\\\"{'highlight': isActiveFeature(asset)}\\\">\\r\\n\\r\\n\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t{{ getAssetDisplay(asset) }}\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<div (click)=\\\"deleteAsset(asset.id)\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t  </i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> Note: Only files are selectable, not folders. Double click on a folder to navigate into it. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (click)=\\\"select(file)\\\"  (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Done</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" [disabled]=\\\"!selectedFiles.size\\\" (click)=\\\"chooseFiles()\\\">Import</button>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<h4> Select Files </h4>\\r\\n<small><em> If no folder is selected, the file will be saved in the root of your selected system. </em></small>\\r\\n<hr>\\r\\n<select (ngModelChange)=\\\"selectSystem($event)\\\" [(ngModel)]=\\\"selectedSystem\\\">\\r\\n\\t<option [ngValue]=\\\"myDataSystem\\\"> My Data </option>\\r\\n\\t<option [ngValue]=\\\"communityDataSystem\\\"> Community Data</option>\\r\\n\\t<option [ngValue]=\\\"publishedDataSystem\\\"> Published Data</option>\\r\\n\\t<optgroup label=\\\"My Projects\\\">\\r\\n\\t\\t<option *ngFor=\\\"let project of projects\\\" [ngValue]=\\\"project\\\">{{project.description}}</option>\\r\\n\\t</optgroup>\\r\\n</select>\\r\\n<div class=\\\"fileslisting\\\"  infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"100\\\" [scrollWindow]=\\\"false\\\" >\\r\\n\\t<div class=\\\"grid-x file-row\\\" *ngFor=\\\"let file of filesList\\\" [ngClass]=\\\"{'selected':selectedFiles.has(file.path)}\\\">\\r\\n\\t\\t<div class=\\\"clickable\\\" (dblclick)=\\\"browse(file)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-folder\\\" *ngIf=\\\"file.type === 'dir'\\\" ></i>\\r\\n\\t\\t\\t<i class=\\\"far fa-file\\\" *ngIf=\\\"file.type !== 'dir'\\\"></i>\\r\\n\\t\\t\\t<span > {{ file.name }} </span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"size\\\">\\r\\n\\t\\t\\t{{file.length | filesize }}\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"grid-x\\\" *ngIf=\\\"inProgress\\\">\\r\\n\\t\\t<div class=\\\"cell medium-12\\\">\\r\\n\\t\\t  <i class=\\\"fas fa-spin fa-atom\\\"></i>\\r\\n\\t\\t</div>\\r\\n\\t  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"downloadSelectForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n    <div>\\r\\n        <small><em> If no filename is specified, it will default to the project ID number. </em></small>\\r\\n    </div>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Name\\\" appearance=\\\"filled\\\"  required=\\\"false\\\">\\r\\n    </mat-form-field>\\r\\n</form>\\r\\n<span class=\\\"radio-box\\\">\\r\\n<mat-radio-group [(ngModel)]=\\\"fileExtension\\\">\\r\\n    <mat-radio-button value=\\\".csv\\\">.csv</mat-radio-button>\\r\\n    <mat-radio-button value=\\\".json\\\">.json</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n</span>\\r\\n\\r\\n<div class=\\\"button-group\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button warning\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"chooseFiles()\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \":host .top-bar {\\n  height: 40px;\\n  padding: 5px;\\n  padding-left: 0.5em;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  overflow: hidden;\\n  width: 100%;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\"","export default \"<!-- <div class=\\\"grid-x\\\"> -->\\r\\n\\r\\n<!--   <div class=\\\"top-bar\\\" style=\\\"background-color: black\\\" id=\\\"navbar\\\"> -->\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-left\\\"> -->\\r\\n<!--\\t  <img src=\\\"assets/logo.svg\\\" width=\\\"30PX\\\"> -->\\r\\n<!--\\t  <span style=\\\"color: white\\\">Taggit</span> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n\\r\\n<!--\\t<div class=\\\"top-bar-right\\\"> -->\\r\\n<!--\\t  <div class=\\\"light-blue\\\" *ngIf=\\\"currentUser\\\">{{ currentUser.username }}</div> -->\\r\\n<!--\\t</div> -->\\r\\n\\r\\n<!--   </div> -->\\r\\n\\r\\n<!--   <\\\\!-- <div class=\\\"cell control-bar\\\"> -\\\\-> -->\\r\\n<!--   <\\\\!--\\t<app-control-bar></app-control-bar> -\\\\-> -->\\r\\n<!--   <\\\\!-- </div> -\\\\-> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<app-control-bar></app-control-bar>\\r\\n<!-- NOTE Router Outlet was here -->\\r\\n<app-image-gallery></app-image-gallery>\\r\\n\\r\\n<!-- NOTE Leaflet was here -->\\r\\n\"","export default \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\\n:host .mat-radio-button ~ .mat-radio-button {\\n  margin-left: 16px;\\n}\\n:host .radio-box {\\n  position: relative;\\n  bottom: 45px;\\n  left: 45%;\\n}\"","export default \":host {\\n  overflow-y: scroll;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .group-subitem {\\n  height: 100px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\"","export default \":host {\\n  background-color: #F1F1F1;\\n}\"","export default \"<div class=\\\"create-prompt\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Create Tag\\r\\n\\t</span>\\r\\n\\t<!-- <span style=\\\"cursor: pointer\\\" -->\\r\\n\\t<!--\\t  (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\" -->\\r\\n\\t<!--\\t  matTooltip=\\\"Add Form Item\\\" -->\\r\\n\\t<!--\\t  style=\\\"cursor: pointer; margin-right: 20px\\\" -->\\r\\n\\t<!--\\t  matTooltipPosition=\\\"above\\\"> -->\\r\\n\\t<!--   <i class=\\\"fas fa-plus\\\"></i> -->\\r\\n\\t<!-- </span> -->\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<form class=\\\"form-type-form\\\">\\r\\n\\t  <div *ngFor=\\\"let control of enabledControls; let idx = index\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"control\\\" value=\\\"control.toLowerCase()\\\" name=\\\"form-type\\\" [checked]=\\\"(idx === 0)\\\" (change)=\\\"selectInputForm(control.toLowerCase())\\\">\\r\\n\\t\\t<label style=\\\"cursor: pointer; margin: 3px; padding: 3px; font-size: 10px\\\" [for]=\\\"control\\\">{{ control }}</label>\\r\\n\\t  </div> <!-- form-type-form -->\\r\\n\\t</form>\\r\\n\\r\\n\\t<div *ngIf=\\\"formType == 'text'; else optionForms\\\">\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t  </div> <!--form-name -->\\r\\n\\t</div> <!-- formtype -->\\r\\n\\r\\n\\t<ng-template #optionForms>\\r\\n\\t  <div class=\\\"form-name\\\">\\r\\n\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Label</mat-label>\\r\\n\\t\\t  <input matInput placeholder=\\\"Label\\\" #labelValue [(ngModel)]=\\\"labelFilter\\\" (keyup)=\\\"inputFormLabel($event)\\\" name=\\\"labelFilter\\\" class=\\\"tiny\\\" type=\\\"text\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t<mat-form-field class=\\\"input-label-group\\\">\\r\\n\\t\\t  <mat-label>Options</mat-label>\\r\\n\\t\\t  <div class=\\\"input-group\\\">\\r\\n\\t\\t\\t<input matInput #optionValue class=\\\"input-group-field\\\" placeholder=\\\"Option\\\" type=\\\"text\\\" [(ngModel)]=\\\"optionFilter\\\" name=\\\"optionFilter\\\">\\r\\n\\t\\t  </div> <!-- input-group -->\\r\\n\\t\\t</mat-form-field>\\r\\n\\r\\n\\t\\t<div class=\\\"input-group-button\\\">\\r\\n\\t\\t  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" (click)=\\\"addOptionItem(optionValue.value); optionValue.value = ''; clearOption()\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t\\t  </button>\\r\\n\\t\\t</div> <!-- input-group-button -->\\r\\n\\r\\n\\t\\t<ul class=\\\"form-option-container\\\">\\r\\n\\t\\t  <li *ngFor=\\\"let opt of formOptions\\\" class=\\\"list-group\\\">\\r\\n\\t\\t\\t<div [className]=\\\"showOpt\\\">\\r\\n\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t</div> <!-- showopt -->\\r\\n\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t  <div (click)=\\\"deleteOption(opt)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div> <!-- delete opt -->\\r\\n\\r\\n\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameOptionModal)\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t  <ng-template #renameOptionModal>\\r\\n\\t\\t\\t\\t<input matInput #optionRename\\r\\n\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t  (click)=\\\"renameOption(opt, optionRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\t\\t\\t</div> <!-- button group -->\\r\\n\\r\\n\\t\\t  </li>\\r\\n\\t\\t</ul>\\r\\n\\t  </div> <!-- form name -->\\r\\n\\t</ng-template> <!-- form options -->\\r\\n\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addFormItem(); clearLabel(); clearOption()\\\">Save</button>\\r\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"cancelCreate(); clearLabel(); clearOption()\\\">Cancel</button>\\r\\n\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- create-group -->\\r\\n\"","export default \":host .img-list-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  grid-gap: 1em;\\n  height: 100%;\\n  padding: 1em;\\n}\\n:host #no-img {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host #no-proj {\\n  font-size: 32px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  height: 70vh;\\n}\\n:host app-image-box {\\n  height: 100%;\\n}\\n:host .masonry-item {\\n  width: 200px;\\n}\\n:host img-spin {\\n  position: relative;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host load-spin {\\n  position: relative;\\n  width: 100%;\\n  height: 100px;\\n  background: #fff;\\n}\\n:host .side-bar-container {\\n  background-color: #F1F1F1;\\n  position: fixed;\\n  width: 25%;\\n  margin-right: 0px;\\n  height: calc(100vh - 50px);\\n  right: 0;\\n}\\n:host .success {\\n  margin-right: 20%;\\n}\\n:host .danger {\\n  margin-right: 0%;\\n}\\n:host #gallery-container-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 0px;\\n}\\n:host #loading-load {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  margin-top: 50px;\\n}\\n:host #gallery-container {\\n  position: relative;\\n  width: 100%;\\n  height: auto;\\n  text-align: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host #gallery-container .gallery-image {\\n  height: 100%;\\n  display: -webkit-inline-box;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host #gallery-container .gallery-image img {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .imager {\\n  width: 75%;\\n  height: calc(100vh - 50px);\\n  background-color: #fefefe;\\n}\\n:host .view-image {\\n  max-width: 100%;\\n  height: auto;\\n}\\n:host .gallery-btn {\\n  width: 35px;\\n  height: 35px;\\n  background: #000;\\n  color: #fff;\\n  text-align: center;\\n  line-height: 35px;\\n  cursor: pointer;\\n  -webkit-transition: all 0.4s ease;\\n  transition: all 0.4s ease;\\n  font-size: 20px;\\n  box-sizing: border-box;\\n  padding-left: 2px;\\n  position: fixed;\\n  bottom: 10px;\\n}\\n:host .gallery-btn:hover {\\n  background: #222;\\n}\\n:host .gallery-close {\\n  top: 10px;\\n}\\n:host .gallery-close .gallery-next {\\n  right: 10px;\\n}\\n:host .gallery-prev {\\n  right: 50px;\\n}\\n:host .gallery-prev .gallery-next {\\n  bottom: 10px;\\n}\\n@media (min-width: 478px) {\\n  :host .img-list-container img:nth-child(3n):not(last-of-type) {\\n    grid-row-end: span 2;\\n  }\\n}\\n@media (max-width: 768px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  }\\n}\\n@media (max-width: 450px) {\\n  :host .img-list-container {\\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\\n  }\\n}\"","export default \"<h4>Share this project</h4>\\r\\n<small><em> People you share your project with will have full ability to edit and delete this project on Taggit and on HazMapper. </em></small>\\r\\n\\r\\n<form [formGroup]=\\\"projShareForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"share-project-form\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>Username:</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n<div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projShareForm.valid\\\">Add Member</button>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<h5>Current Users</h5>\\r\\n<div *ngFor=\\\"let user of projectUsers\\\">\\r\\n    <br>\\r\\n    <mat-card class=\\\"card-container\\\">\\r\\n        <span class=\\\"card-item\\\">\\r\\n            {{user.username}}\\r\\n        </span>\\r\\n        <span class=\\\"card-buttons\\\">\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"delete(user.username)\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </mat-card>\\r\\n</div>\\r\\n</form>\"","export default \"<div *ngIf=\\\"loaded; else loader\\\" id=\\\"loading-load\\\">\\r\\n  <div *ngIf=\\\"projectsExist; else noProjWarn\\\" id=\\\"gallery-container\\\">\\r\\n\\t<div *ngIf=\\\"imagesExist; else noImgWarn\\\" id=\\\"gallery-container-container\\\">\\r\\n\\t  <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"\\r\\n\\t\\t   infiniteScroll\\r\\n\\t\\t   [infiniteScrollDistance]=\\\"1\\\"\\r\\n\\t\\t   [infiniteScrollThrottle]=\\\"1500\\\"\\r\\n\\t\\t   (scrolled)=\\\"onScroll()\\\"\\r\\n\\t\\t   class=\\\"img-list-container\\\"\\r\\n\\t\\t   *ngIf=\\\"!showSidebar; else elseBlock\\\">\\r\\n\\t\\t<app-image-box\\r\\n\\t\\t  *ngFor=\\\"let feat of featureListScroll\\\"\\r\\n\\t\\t  [feature]=\\\"feat\\\">\\r\\n\\t\\t</app-image-box>\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <ngx-spinner\\r\\n\\t\\tbdOpacity = 0.9\\r\\n\\t\\tbdColor = \\\"\\\"\\r\\n\\t\\tsize = \\\"default\\\"\\r\\n\\t\\tcolor = \\\"#3ADB76\\\"\\r\\n\\t\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\t\\tid = \\\"img-spin\\\"\\r\\n\\t\\t[fullScreen] = \\\"false\\\">\\r\\n\\t  </ngx-spinner>\\r\\n\\t  <ng-template #elseBlock>\\r\\n\\t\\t<div *ngIf=\\\"groupExist; else noImgDisplay\\\">\\r\\n\\t\\t  <div class=\\\"imager\\\">\\r\\n\\t\\t\\t<img class=\\\"view-image\\\" [src]=\\\"getPath()\\\">\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<ng-template #noImgDisplay> No Images exist for this Group </ng-template>\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(1)\\\">next</div> -->\\r\\n\\t\\t<!-- <div (click)=\\\"otherPath(-1)\\\">prev</div> -->\\r\\n\\r\\n\\r\\n\\t\\t<!-- <img [src]=\\\"getPath()\\\"> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(1)\\\">next</button> -->\\r\\n\\t\\t<!-- <button class=\\\"button\\\" (click)=\\\"otherPath(-1)\\\">prev</button> -->\\r\\n\\r\\n\\t\\t<!-- <app-image-list> -->\\r\\n\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"feat\\\" -\\\\-> -->\\r\\n\\r\\n\\t\\t\\t  <!--   <\\\\!-- *ngFor=\\\"let feat of features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t<!--   <\\\\!-- [feature]=\\\"features.features\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t  <!--   <\\\\!-- (clickRequest)=\\\"addGroupList($event)\\\" -\\\\-> -->\\r\\n\\t\\t\\t\\t\\t<!-- </app-image-list> -->\\r\\n\\r\\n\\t  </ng-template>\\r\\n\\t  <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\">\\r\\n\\t\\t<app-side-bar></app-side-bar>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n\\t<ng-template #noImgWarn>\\r\\n\\t  <div id=\\\"no-img\\\">\\r\\n\\t\\tNo images have been imported!<br>Please import images through the menu.\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #noProjWarn>\\r\\n\\t<div id=\\\"no-proj\\\">\\r\\n\\t  No project has been created!<br>Please create a project through the menu.\\r\\n\\t</div>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- <div id=\\\"gallery-container\\\"> -->\\r\\n\\t<!--   <div [ngClass]=\\\"status ? 'success' : 'danger'\\\"> -->\\r\\n\\t  <!--\\t<div class=\\\"img-list-container\\\" *ngIf=\\\"!showSidebar; else elseBlock\\\"> -->\\r\\n\\t\\t<!--\\t  <app-image-box -->\\r\\n\\t\\t<!--\\t\\t*ngFor=\\\"let feat of features.features\\\" -->\\r\\n\\t\\t<!--\\t\\t[feature]=\\\"feat\\\" -->\\r\\n\\t\\t<!--\\t\\t(clickRequest)=\\\"addGroupList($event)\\\"> -->\\r\\n\\t\\t  <!--\\t  </app-image-box> -->\\r\\n\\t\\t<!--\\t</div> -->\\r\\n\\r\\n\\t  <!--\\t<ng-template #elseBlock> -->\\r\\n\\t\\t<!--\\t  <app-image-list> -->\\r\\n\\t\\t  <!--\\t  </app-image-list> -->\\r\\n\\t\\t<!--\\t</ng-template> -->\\r\\n\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!--   <div *ngIf=\\\"showSidebar\\\" class=\\\"side-bar-container\\\"> -->\\r\\n\\t  <!--\\t<app-side-bar></app-side-bar> -->\\r\\n\\t  <!--   </div> -->\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #loader>\\r\\n  <div id=\\\"loader\\\">\\r\\n\\tLoading...\\r\\n  </div>\\r\\n\\r\\n  <ngx-spinner\\r\\n\\tbdOpacity = 0.9\\r\\n\\tbdColor = \\\"\\\"\\r\\n\\tsize = \\\"default\\\"\\r\\n\\tcolor = \\\"#3ADB76\\\"\\r\\n\\ttype = \\\"line-scale-pulse-out\\\"\\r\\n\\tid = \\\"load-spin\\\"\\r\\n\\t[fullScreen] = \\\"false\\\">\\r\\n  </ngx-spinner>\\r\\n</ng-template>\\r\\n\"","export default \":host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n}\\n:host .asset-subitem {\\n  height: 100px;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n  padding-right: 5px;\\n}\"","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<div id=\\\"callback\\\">\\r\\n    <div>\\r\\n\\t<i class=\\\"fas fa-spinner\\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"img-container\\\">\\r\\n  <img [ngClass]=\\\"status ? 'img-selected' : 'img-unselected'\\\"\\r\\n\\t   [src]=\\\"featureSource\\\"\\r\\n\\t   (click)=\\\"imageSelect()\\\"\\r\\n\\t   class=\\\"img-responsive img-target\\\"\\r\\n\\t   title={{featurePath}}>\\r\\n  <div class=\\\"top-overlay\\\">\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Zoom\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"imageZoom(diffSizes)\\\">\\r\\n\\t  <i class=\\\"fas fa-search-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #diffSizes>\\r\\n\\t  <div class=\\\"zoom-content\\\">\\r\\n\\t\\t<div class=\\\"img-container\\\">\\r\\n\\t\\t  <img [src]=\\\"featureSource\\\" title={{featurePath}}>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"img-details\\\">\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Coordinates\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[0]}},\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{coordinates[1]}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"detail-container\\\">\\r\\n\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t  Image Source\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"detail-contents\\\">\\r\\n\\t\\t\\t  <div class=\\\"detail-item\\\">\\r\\n\\t\\t\\t\\t{{featurePath}}\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button mat-button class=\\\"close-button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\">\\r\\n\\t\\t  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Remove\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageDeleteModal(deleteImage)\\\">\\r\\n\\t  <i class=\\\"fas fa-trash\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #deleteImage>\\r\\n\\t  <div>\\r\\n\\t  This image will be deleted from the current project. It will not be deleted from the Data Depot.\\r\\n\\t  </div>\\r\\n\\r\\n\\t  <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"imageDelete()\\\">Delete Image</button>\\r\\n\\t  <button mat-button matDialogClose>Cancel</button>\\r\\n\\t</ng-template>\\r\\n\\r\\n\\t<div class=\\\"image-option\\\"\\r\\n\\t\\t matTooltip=\\\"Add To Group\\\"\\r\\n\\t\\t matTooltipPosition=\\\"below\\\"\\r\\n\\t\\t (click)=\\\"openImageAddModal(addMoreToGroup)\\\">\\r\\n\\t  <i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t</div>\\r\\n\\r\\n\\t<ng-template #addMoreToGroup>\\r\\n\\r\\n\\t  <mat-form-field appearance=\\\"fill\\\">\\r\\n\\t\\t<mat-label>Groups</mat-label>\\r\\n\\t\\t<mat-select matNativeControl required [(value)]=\\\"activeGroup\\\">\\r\\n\\t\\t  <mat-option>\\r\\n\\t\\t\\tNone\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t  <mat-option *ngFor=\\\"let group of groupList\\\" [value]=\\\"group.name\\\">\\r\\n\\t\\t\\t{{ group.name }}\\r\\n\\t\\t  </mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t  </mat-form-field>\\r\\n\\r\\n\\t  <!-- <select #selectGroup class=\\\"form-control\\\" [value]=\\\"activeGroup\\\"> -->\\r\\n\\t  <!--\\t<option *ngFor=\\\"let group of groupList\\\"> -->\\r\\n\\t  <!--\\t  {{ group.name }} -->\\r\\n\\t  <!--\\t</option> -->\\r\\n\\t  <!-- </select> -->\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(selectGroup.value)\\\">Add To Group</button> -->\\r\\n\\t  <p>\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" matDialogClose (click)=\\\"selectGroupForm(activeGroup)\\\" [disabled]=\\\"!activeGroup\\\">Add To Group</button>\\r\\n\\t\\t<button mat-button color=\\\"secondary\\\" matDialogClose>Cancel</button>\\r\\n\\t  </p>\\r\\n\\r\\n\\t  <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" matDialogClose aria-label=\\\"Close modal\\\" type=\\\"button\\\"> -->\\r\\n\\t  <!--\\t<span aria-hidden=\\\"true\\\">&times;</span> -->\\r\\n\\t  <!-- </button> -->\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"bottom-overlay\\\">\\r\\n\\r\\n\\t<!-- <div class=\\\"color-container\\\"> -->\\r\\n\\t  <!-- TODO This should be an iff relationship -->\\r\\n\\t  <div *ngIf=\\\"hasGroup && colors.length > 0\\\">\\r\\n\\r\\n\\t\\t<div *ngIf=\\\"colors.length < 5; else dotdot\\\" class=\\\"group-tags\\\">\\r\\n\\t\\t  <div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t   class=\\\"center\\\"\\r\\n\\t\\t\\t   (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t   [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"25px\\\" height=\\\"75px\\\">\\r\\n\\t\\t\\t  <!-- <rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/> -->\\r\\n\\t\\t\\t  <rect width=\\\"15px\\\" height=\\\"15px\\\" x=\\\"5\\\" y=\\\"30\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t  <rect class=\\\"inner-del\\\" width=\\\"25px\\\" height=\\\"15px\\\" rx=\\\"3\\\" x=\\\"0\\\" y=\\\"0\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect (click)=\\\"deleteFromGroup(color)\\\" class=\\\"inner-del\\\" width=\\\"15px\\\" height=\\\"5px\\\" x=\\\"5\\\" y=\\\"5\\\" style=\\\"fill: #DE6363\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<ng-template #dotdot class=\\\"text\\\">\\r\\n\\t\\t  <div class=\\\"image-option\\\"\\r\\n\\t\\t\\t   (click)=\\\"openMoreGroupsModal(moreGroupsModal)\\\">\\r\\n\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"></i>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t<!-- TODO Should close modal once zero groups -->\\r\\n\\t\\t<ng-template #moreGroupsModal>\\r\\n\\t\\t  <div style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n\\t\\t\\t<div *ngFor=\\\"let color of colors\\\"\\r\\n\\t\\t\\t\\t class=\\\"center-temp\\\"\\r\\n\\t\\t\\t\\t style=\\\"display: flex\\\"\\r\\n\\t\\t\\t\\t (mouseover)=\\\"getGroupNameFromColor(color)\\\"\\r\\n\\t\\t\\t\\t [matTooltip]=\\\"currentGroup\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"right\\\">\\r\\n\\t\\t\\t  <svg style=\\\"padding: 1\\\" (click)=\\\"deleteFromGroup(color)\\\" width=\\\"15px\\\" height=\\\"15px\\\">\\r\\n\\t\\t\\t\\t<rect width=\\\"15px\\\" height=\\\"15px\\\" [style.fill]=\\\"color\\\"/>\\r\\n\\t\\t\\t\\t<rect class=\\\"inner-del-temp\\\" width=\\\"8px\\\" height=\\\"4px\\\" x=\\\"3.3\\\" y=\\\"5.5\\\" style=\\\"fill: #000\\\"/>\\r\\n\\t\\t\\t  </svg>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</ng-template>\\r\\n\\r\\n\\t  </div>\\r\\n\\t<!-- </div> -->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<!-- <p>side-bar works!</p> -->\\r\\n<!-- <app-preset-generator></app-preset-generator> -->\\r\\n<!-- <app-tagger></app-tagger> -->\\r\\n<app-select-group></app-select-group>\\r\\n<app-select-image></app-select-image>\\r\\n<router-outlet></router-outlet>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \":host {\\n  display: block;\\n  font-size: 0.8em;\\n  height: calc(100vh - 50px);\\n}\\n:host .lat-lon-label {\\n  font-size: 0.8em;\\n  color: #4d4d4d;\\n}\\n:host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .switch {\\n  margin: 0;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .no-show-option {\\n  display: none;\\n}\\n:host .show-option {\\n  display: block;\\n}\\n:host .create-prompt {\\n  max-height: 500px;\\n  height: 500px;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .input-label-group {\\n  padding: 10px;\\n  display: block;\\n}\\n:host .input-group {\\n  display: inline-block;\\n}\\n:host .form-name {\\n  text-align: center;\\n}\\n:host .input-group-button {\\n  display: inline-block;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n  padding: 20px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  margin: 0;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .form-option-container {\\n  padding: 0px;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  display: inline-block;\\n  padding: 3px;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .form-type-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  margin: 5px;\\n  margin-bottom: 15px;\\n}\\n:host .form-type-form input[type=radio] {\\n  display: none;\\n}\\n:host .form-type-form label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #ddd;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .form-type-form input[type=radio]:checked + label {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: #000;\\n}\\n:host .changed {\\n  color: #F07575;\\n}\\n:host .unchanged {\\n  color: #555555;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\"","export default \":host #share-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\\n\\n.card-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 99%;\\n}\\n\\n.card-item {\\n  text-align: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n\\n.card-buttons {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\"","export default \"<div id=\\\"map\\\" style=\\\"min-height: calc(100vh - 67px)\\\"></div>\\r\\n\"","export default \":host #create-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \":host .img-container {\\n  position: relative;\\n}\\n:host .img-container img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  cursor: default;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-transition: opacity 0.3s ease;\\n  transition: opacity 0.3s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n:host .top-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 0;\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n:host .bottom-overlay {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  opacity: 1;\\n  position: absolute;\\n  right: 10px;\\n  bottom: 10px;\\n  text-align: center;\\n}\\n:host .img-container:hover img {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay {\\n  opacity: 0.9;\\n}\\n:host .img-container:hover .top-overlay:hover {\\n  opacity: 1;\\n}\\n:host .image-option {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  color: black;\\n  width: 40px;\\n  height: 30px;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  margin: 3px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .image-option:hover {\\n  opacity: 1;\\n}\\n:host .image-option .fas {\\n  top: 5px;\\n}\\n:host .img-selected {\\n  border: solid #4FB876;\\n  border-width: 5px;\\n}\\n:host .img-unselected {\\n  border: solid #fff;\\n  border-width: 5px;\\n}\\n:host .group-tags {\\n  opacity: 0.9;\\n  background-color: white;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  width: auto;\\n  height: 30px;\\n  border-radius: 5px;\\n  padding: 5px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  z-index: 999;\\n}\\n:host .center {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host .center .inner-del {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n:host .center:hover .inner-del {\\n  opacity: 1;\\n}\\n:host .box {\\n  padding: 1px;\\n}\\n.center-temp {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.center-temp .inner-del-temp {\\n  opacity: 0;\\n  -webkit-transition: 0.3s ease;\\n  transition: 0.3s ease;\\n  cursor: pointer;\\n}\\n.center-temp:hover .inner-del-temp {\\n  opacity: 0.5;\\n}\\n.zoom-content {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  max-height: 700px;\\n}\\n.zoom-content .img-container {\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  background-color: #e7e7e7;\\n}\\n.zoom-content .img-details {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin-top: 24px;\\n  background-color: #e7e7e7;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  text-align: center;\\n}\\n.zoom-content .title {\\n  background-color: #ccc;\\n  padding: 5px;\\n}\\n.zoom-content .detail-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n          flex-grow: 1;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  padding: 5px;\\n}\\n.zoom-content .detail-contents {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  padding: 5px;\\n  background-color: #fff;\\n}\\n.zoom-content .detail-item {\\n  padding: 5px;\\n}\"","export default \":host {\\n  text-align: left;\\n}\\n:host .mat-form-field {\\n  width: 100%;\\n  text-align: left;\\n}\\n:host .input-group {\\n  padding: 5px;\\n}\\n:host label {\\n  padding: 5px;\\n}\\n:host input {\\n  padding: 5px;\\n  vertical-align: middle;\\n}\\n:host .radio-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n:host .form-controls {\\n  padding: 20px;\\n}\"","export default \"<h4> Current Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"update()\\\" id=\\\"current-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" appearance=\\\"filled\\\"  required=\\\"true\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Description</mat-label>\\r\\n    <textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n    <button mat-raised-button color=\\\"basic\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"delete\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Update</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"<h4> Create a new Project </h4>\\r\\n<form [formGroup]=\\\"projCreateForm\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"create-project-form\\\">\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Name:</mat-label>\\r\\n\\t<input matInput type=\\\"text\\\" formControlName=\\\"name\\\" required=\\\"true\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n\\t<mat-label>Description</mat-label>\\r\\n\\t<textarea matInput formControlName=\\\"description\\\" required=\\\"true\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-group small\\\">\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" class=\\\"button small warning\\\" type=\\\"button\\\" (click)=\\\"close()\\\">Close</button>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"button small align-right\\\" type=\\\"submit\\\" [disabled]=\\\"!projCreateForm.valid\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"\"","export default \":host {\\n  font-size: 0.8em;\\n  display: block;\\n}\\n:host .subitem-title {\\n  text-align: left;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  color: #555;\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #F1F1F1;\\n}\\n:host .subitem {\\n  border-width: 0px 10px;\\n  border-color: #F1F1F1;\\n  border-style: solid;\\n  padding: 10px;\\n  overflow-y: scroll;\\n  background-color: #FFFFFF;\\n  height: 100%;\\n}\\n:host .main-form-container {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  padding: 10px;\\n}\\n:host .subitem-scroll {\\n  border-width: 5px;\\n}\\n:host .highlight {\\n  background-color: #B3E5FF;\\n}\\n:host .boxed input[type=radio] {\\n  display: none;\\n}\\n:host .boxed label {\\n  background-color: #fff;\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n:host .boxed input[type=radio]:checked + label {\\n  background-color: #B3E5FF;\\n}\\n:host .group-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .select-group {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .tag-forms {\\n  height: 500px;\\n}\\n:host .asset-list {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .asset-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  cursor: pointer;\\n}\\n:host .preset-descriptions {\\n  max-height: 20%;\\n  height: 20%;\\n}\\n:host .form-item-container {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .button-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n}\\n:host .button-group div {\\n  padding: 3px;\\n}\\n:host .name-group {\\n  padding: 3px;\\n  font-size: 17px;\\n  font-weight: bold;\\n}\\n:host .list-group {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  margin: 0;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .list-suboptions {\\n  background-color: #F0F0F0;\\n}\"","export default \"<div class=\\\"select-group\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">Groups</div>\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem group-subitem\\\">\\r\\n\\t<!-- TODO redundant functionality radio is just for style -->\\r\\n\\t<form class=\\\"boxed\\\">\\r\\n\\t  <div *ngFor=\\\"let group of groupList\\\" (click)=\\\"selectGroupForm(group.name)\\\" class=\\\"box form\\\">\\r\\n\\t\\t<input type=\\\"radio\\\" [id]=\\\"group.name\\\" [value]=\\\"group.name\\\" name=\\\"skills\\\" [checked]=\\\"isChecked(group.name)\\\">\\r\\n\\t\\t<label class=\\\"group-container\\\" style=\\\"cursor: pointer\\\" [for]=\\\"group.name\\\">\\r\\n\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t{{group.name}}\\r\\n\\t\\t\\t<svg class=\\\"box\\\" width=\\\"10px\\\" height=\\\"10px\\\">\\r\\n\\t\\t\\t  <rect width=\\\"10px\\\" height=\\\"10px\\\" style=\\\"fill: #ffffff\\\"/>\\r\\n\\t\\t\\t  <rect width=\\\"8px\\\" height=\\\"8px\\\" x=\\\"1px\\\" y=\\\"1px\\\" [style.fill]=\\\"group.color\\\"/>\\r\\n\\t\\t\\t</svg>\\r\\n\\t\\t  </div>\\r\\n\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t<div (click)=\\\"deleteGroup(group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div (click)=\\\"openRenameModal(renameModal, group.name)\\\">\\r\\n\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t  </i>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</label>\\r\\n\\t  </div>\\r\\n\\t</form>\\r\\n\\r\\n\\t<ng-template #renameModal>\\r\\n\\t  <input matInput #groupRename\\r\\n\\t\\t\\t placeholder=\\\"Rename Group\\\"\\r\\n\\t\\t\\t (keyup.enter)=\\\"renameGroup(groupRename.value)\\\">\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t<button matDialogClose color=\\\"primary\\\" mat-raised-button (click)=\\\"renameGroup(groupRename.value)\\\">Rename</button>\\r\\n\\t\\t<button matDialogClose mat-button>Cancel</button>\\r\\n\\t  </div>\\r\\n\\t</ng-template>\\r\\n  </div> <!-- subitem -->\\r\\n</div> <!-- select-group -->\\r\\n\"","export default \":host #current-project-form {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center;\\n  padding: 5em;\\n}\"","export default \"\"","export default \":host {\\n  min-height: 20em;\\n}\\n:host .fileslisting {\\n  height: 20em;\\n  overflow-y: scroll;\\n  padding: 0px 20px;\\n}\\n:host .file-row {\\n  display: -webkit-box;\\n  display: flex;\\n  background: #f9f9f9;\\n  border: 1px solid transparent;\\n  -ms-user-select: none;\\n      user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n}\\n:host .clickable {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  max-width: 20em;\\n}\\n:host .size {\\n  -webkit-box-align: end;\\n          align-items: flex-end;\\n}\\n:host .file-row:hover {\\n  border: 1px solid;\\n}\\n:host .file-row.selected {\\n  background: #d3d3d3;\\n}\"","export default \":host .active-project {\\n  background-color: #1aff8c;\\n}\\n:host .menu button.dropdown.button {\\n  padding: 0.85em 1em;\\n}\\n:host .button.tiny {\\n  margin: 0;\\n}\\n:host .current-project {\\n  padding: 30px;\\n  font-size: 14px;\\n}\\n:host .goods {\\n  height: 27px;\\n  margin: 0px;\\n  padding: 0px;\\n}\\n:host .toggler {\\n  margin-left: 10px;\\n}\\n:host .picker {\\n  display: inline-block;\\n}\\n:host .group-bar {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n}\\n:host .path-buttons {\\n  text-align: center;\\n}\\n:host .project-menu {\\n  margin-left: 10px;\\n}\\n:host .top-bar {\\n  position: fixed;\\n  margin-top: -50px;\\n  height: 50px;\\n  z-index: 999;\\n}\\n:host .top-bar-right .top-bar-left {\\n  -webkit-box-flex: 0;\\n  flex-wrap: nowrap;\\n  flex: 0 1 auto;\\n  max-width: 100%;\\n}\\n:host .my-button {\\n  border-radius: 5px;\\n  padding: 5px;\\n}\\n:host .button-spacing {\\n  margin-right: 15px;\\n}\\n@media print, screen and (min-width: 40em) {\\n  :host .top-bar {\\n    flex-wrap: nowrap;\\n    -webkit-box-flex: 0;\\n            flex: 0 1 auto;\\n  }\\n}\\n:host .example-spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\"","export default \"<mat-toolbar class=\\\"top-bar\\\" color=\\\"primary\\\">\\r\\n  <img src=\\\"assets/logo.svg\\\" width=\\\"40PX\\\">\\r\\n  <span style=\\\"color: white\\\">Taggit</span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"project\\\" color=\\\"foreground\\\" class=\\\"project-menu\\\">\\r\\n\\t<mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <mat-menu #project=\\\"matMenu\\\">\\r\\n\\t<span mat-menu-item *ngIf=\\\"selectedProject\\\" (click)=\\\"openProjectModal(selectedProject)\\\">\\r\\n\\t  Current Project : {{selectedProject.name}}\\r\\n\\t</span>\\r\\n\\t<button mat-menu-item (click)=\\\"openCreateProjectModal()\\\">Create Project</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"projectList\\\">Select Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openShareProjectModal()\\\">Share Project</button>\\r\\n\\t<button mat-menu-item (click)=\\\"openFilePicker(test)\\\">File Browser</button>\\r\\n\\t<button mat-menu-item [matMenuTriggerFor]=\\\"saveOptions\\\">Save as</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #projectList=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item class=\\\"clickable\\\" *ngFor=\\\"let p of projects\\\" (click)=\\\"selectProject(p)\\\" [ngClass]=\\\"{'active-project': p === selectedProject}\\\">\\r\\n\\t  {{ p.name }}\\r\\n\\t</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #saveOptions=\\\"matMenu\\\">\\r\\n\\t<button mat-menu-item (click)=saveFile(0)>CSV file</button>\\r\\n\\t<button mat-menu-item (click)=saveFile(1)>JSON file</button>\\r\\n\\t<!--<button mat-menu-item (click)=saveFile(0,1)>Export to Design Safe?</button>-->\\r\\n\\t<button mat-menu-item (click)=openDownloadSelector()>Export to Design Safe</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <div *ngIf=\\\"showSidebar; else doThat\\\" class=\\\"path-buttons\\\">\\r\\n\\t<div class=\\\"slides\\\" style=\\\"line-height: 1; font-size: 12px\\\">\\r\\n\\t  {{imageName}}\\r\\n\\t  <div class=\\\"lr-buttons\\\" style=\\\"margin-top: 5px\\\">\\r\\n\\t\\t<i (click)=\\\"otherPath(false)\\\" style=\\\"margin-right: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-left\\\"></i>\\r\\n\\t\\t<i (click)=\\\"otherPath(true)\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" class=\\\"fas fa-angle-right\\\"></i>\\r\\n\\t  </div>\\r\\n\\t</div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #doThat>\\r\\n\\t<!-- <input placeholder=\\\"Search images\\\" -->\\r\\n\\t<!--\\t   name=\\\"\\\" -->\\r\\n\\t<!--\\t   type=\\\"text\\\" -->\\r\\n\\t<!--\\t   value=\\\"\\\" -->\\r\\n\\t<!--\\t   class=\\\"goods\\\"/> -->\\r\\n\\r\\n\\r\\n\\t<!-- <mat-form-field appearance=\\\"fill\\\"> -->\\r\\n\\t<!--   <input matInput placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n\\r\\n\\t<!-- <mat-form-field class=\\\"example-full-width\\\"> -->\\r\\n\\t<!--   <input matInput type=\\\"text\\\" -->\\r\\n\\t<!--\\t\\t [(ngModel)]=\\\"value\\\" -->\\r\\n\\t<!--\\t\\t placeholder=\\\"Search\\\"> -->\\r\\n\\t<!-- </mat-form-field> -->\\r\\n  </ng-template>\\r\\n\\r\\n  <span class=\\\"example-spacer\\\"></span>\\r\\n\\r\\n  <!-- <div *ngIf=\\\"showGroup\\\" class=\\\"group-bar grid-x align-right\\\"> -->\\r\\n  <div class=\\\"group-bar grid-x align-right\\\">\\r\\n\\r\\n\\t<!-- A link that looks like a button, links to Hazmapper-->\\r\\n\\t<a class=\\\"button-spacing\\\" mat-raised-button href={{hazMapperLink}} title=\\\"Open your project in HazMapper\\\" target=\\\"_blank\\\">\\r\\n\\t\\t<img src=\\\"assets/hazmapper-header-logo.png\\\" width=\\\"100PX\\\">\\r\\n\\t</a>\\r\\n\\r\\n\\t<button mat-raised-button\\r\\n\\t\\t\\t(click)=\\\"openAddGroupModal(addGroupModal)\\\">Add Group</button>\\r\\n\\r\\n\\t<ng-template #addGroupModal>\\r\\n\\t  <mat-form-field>\\r\\n\\t\\t<mat-label>Group Name</mat-label>\\r\\n\\t\\t<input matInput placeholder=\\\"Group Name\\\" #groupInput>\\r\\n\\t  </mat-form-field>\\r\\n\\t  <br/>\\r\\n\\t  <br/>\\r\\n\\t  <button mat-raised-button matDialogClose color=\\\"primary\\\" (click)=\\\"addToGroupService(groupInput.value)\\\">Add Group</button>\\r\\n\\t  <button mat-button matDialogClose color=\\\"secondary\\\">Cancel</button>\\r\\n\\t</ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'preset'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Tagger</button> -->\\r\\n\\r\\n  <!-- <button *ngIf=\\\"groupsExist && showSidebar && activePane == 'tagger'\\\" -->\\r\\n  <!--\\t\\t  mat-button -->\\r\\n  <!--\\t\\t  color=\\\"secondary\\\" -->\\r\\n  <!--\\t\\t  (click)=\\\"goToRoute()\\\">Preset</button> -->\\r\\n\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && !showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Taggit!</button>\\r\\n\\r\\n  <button *ngIf=\\\"groupsExist && showSidebar\\\"\\r\\n\\t\\t  mat-raised-button\\r\\n\\t\\t  style=\\\"margin-left: 15px\\\"\\r\\n\\t\\t  (click)=\\\"openSidebar()\\\">Gallery</button>\\r\\n\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","export default \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Feature as GeoJSONFeature,\r\n  GeoJsonProperties,\r\n  Geometry,\r\n  FeatureCollection as IFeatureCollection } from 'geojson';\r\n\r\n\r\n// TODO: break these out into their own files\r\n\r\nexport interface IPointCloud {\r\n  id: number;\r\n  description: string;\r\n  conversion_parameters: string;\r\n  feature_id?: number;\r\n  task_id?: string;\r\n  project_id: number;\r\n}\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\n// export interface Group {\r\n//   groupName: Array<string>;\r\n//   formList: Array<any>;\r\n//   // type: any;\r\n// }\r\n\r\nexport interface Group {\r\n  groupName: string;\r\n  formList: Array<any>;\r\n  color: string;\r\n  // type: any;\r\n}\r\n\r\nexport class Group implements Group {\r\n\r\n}\r\n\r\n\r\nexport class AssetFilters {\r\n\r\n  // bbox has the following format: [sw_lng, sw_lat, ne_lng, ne_lat], the same as leaflet\r\n  bbox: Array<number> = [];\r\n  assetType: Set<string> = new Set<string>();\r\n\r\n  updateAssetTypes(assetType: string) {\r\n\tthis.assetType.has(assetType) ? this.assetType.delete(assetType) : this.assetType.add(assetType);\r\n  }\r\n\r\n  updateBBox(bbox: Array<number>): void {\r\n\tthis.bbox = bbox;\r\n  }\r\n\r\n  toJson() {\r\n\treturn {\r\n\t  assetType: [...this.assetType],\r\n\t  bbox: this.bbox\r\n\t};\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Project {\r\n  description: string;\r\n  id?: number;\r\n  name: string;\r\n  uuid?: string;\r\n  system_id?: string;\r\n  system_path?: string;\r\n}\r\n\r\nexport class Project implements Project {\r\n\r\n}\r\n\r\nexport class AuthToken {\r\n  token: string;\r\n  expires: Date;\r\n  /**\r\n   *\r\n   * @param token : String\r\n   * @param expires: Date\r\n   */\r\n  constructor(token: string, expires: Date) {\r\n\tthis.token = token;\r\n\tthis.expires = new Date(expires);\r\n  }\r\n\r\n  static fromExpiresIn(token: string, expires_in: number) {\r\n\tconst expires = new Date(new Date().getTime() + expires_in * 1000);\r\n\treturn new AuthToken(token, expires);\r\n  }\r\n\r\n  /**\r\n   * Checks if the token is expired or not\r\n   */\r\n  public isExpired(): boolean {\r\n\treturn new Date().getTime() > this.expires.getTime();\r\n  }\r\n}\r\n\r\n\r\nexport interface IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n}\r\n\r\nexport class FeatureAsset implements IFeatureAsset {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  feature_id: number;\r\n  asset_type: string;\r\n  display_path: string;\r\n\r\n  // TODO: Implenent this\r\n  get assetPath(): string {\r\n\treturn '';\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FeatureStyles {\r\n  [key: string]: string | number;\r\n}\r\n\r\n\r\nexport interface Overlay {\r\n  id: number;\r\n  path: string;\r\n  uuid: string;\r\n  minLon: number;\r\n  minLat: number;\r\n  maxLon: number;\r\n  maxLat: number;\r\n  project_id: number;\r\n  label: string;\r\n}\r\n\r\ninterface AppGeoJSONFeature extends GeoJSONFeature {\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n  // featureType?(): String\r\n}\r\n\r\nexport class FeatureCollection implements IFeatureCollection {\r\n  features: Feature[];\r\n  type: any;\r\n}\r\n\r\n\r\nexport class Feature implements AppGeoJSONFeature {\r\n  geometry: Geometry;\r\n  properties: GeoJsonProperties;\r\n  id?: string | number;\r\n  type: any;\r\n  assets?: Array<IFeatureAsset>;\r\n  styles?: FeatureStyles;\r\n  project_id?: number;\r\n\r\n  constructor(f: AppGeoJSONFeature) {\r\n\tthis.geometry = f.geometry;\r\n\tthis.properties = f.properties;\r\n\tthis.id = f.id;\r\n\tthis.type = f.type;\r\n\tthis.assets = f.assets;\r\n\tthis.styles = f.styles;\r\n\tthis.project_id = f.project_id;\r\n  }\r\n\r\n  featureType?(): string {\r\n\tif (this.assets &&\r\n\tthis.assets.length === 1) {\r\n\t  return this.assets[0].asset_type;\r\n\t}\r\n\r\n\tif (this.assets &&\r\n\tthis.assets.length > 1) {\r\n\t  return 'collection';\r\n\t}\r\n\r\n\tif (!this.assets.length) {\r\n\t  return this.geometry.type;\r\n\t}\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport interface IProjectUser {\r\n  id: number;\r\n  username: string;\r\n}","export interface AppEnvironment {\r\n  production: boolean;\r\n  apiUrl: string;\r\n  jwt?: string;\r\n  clientId: string;\r\n  baseHref: string;\r\n}\r\n\r\nexport const environment: AppEnvironment = {\r\n  production: true,\r\n  apiUrl: 'https://agave.designsafe-ci.org/geo/v2/',\r\n  clientId: 'jHXnvsmQQcmP43qlrG7ATaxFXHQa',\r\n  baseHref: '/'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthToken } from '../models/models';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\nexport class AuthenticatedUser {\r\n  public readonly username: string;\r\n  public readonly email: string;\r\n  private _token: AuthToken;\r\n\r\n  constructor(username: string, email: string) {\r\n    this.username = username;\r\n    this.email = email;\r\n  }\r\n\r\n}\r\n\r\ninterface OpenIDUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private _currentUser: ReplaySubject<AuthenticatedUser> = new ReplaySubject<AuthenticatedUser>(1);\r\n  public readonly currentUser: Observable<AuthenticatedUser> = this._currentUser.asObservable();\r\n  userToken: AuthToken;\r\n  private LS_TOKEN_KEY = 'hazmapperToken';\r\n  private LS_USER_KEY = 'hazmapperUser';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public login() {\r\n    // First, check if the user has a token in localStorage\r\n    const tokenStr = localStorage.getItem(this.LS_TOKEN_KEY);\r\n    if (!tokenStr) {\r\n      this.redirectToauthenticaor();\r\n    } else {\r\n      const token = JSON.parse(tokenStr);\r\n      this.userToken = new AuthToken(token.token, new Date(token.expires));\r\n      if (!this.userToken || this.userToken.isExpired()) {\r\n        this.logout();\r\n        this.redirectToauthenticaor();\r\n      }\r\n      this.getUserInfo();\r\n    }\r\n  }\r\n\r\n  private redirectToauthenticaor() {\r\n    const client_id = environment.clientId;\r\n    const callback = location.origin + environment.baseHref + 'callback';\r\n    const state = Math.random().toString(36);\r\n    const AUTH_URL = `https://agave.designsafe-ci.org/authorize?scope=openid&client_id=${client_id}&response_type=token&redirect_uri=${callback}&state=${state}`;\r\n    window.location.href = AUTH_URL;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks to make sure that the user has a token and the token is not expired;\r\n   */\r\n  public isLoggedIn(): boolean {\r\n    return this.userToken && !this.userToken.isExpired();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.userToken = null;\r\n    localStorage.removeItem(this.LS_TOKEN_KEY);\r\n    localStorage.removeItem(this.LS_USER_KEY);\r\n  }\r\n\r\n  public setToken(token: string, expires: number): void {\r\n    this.userToken = AuthToken.fromExpiresIn(token, expires);\r\n    localStorage.setItem(this.LS_TOKEN_KEY, JSON.stringify(this.userToken));\r\n    // hit the wso2 api to retrieve the username etc\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public getUserInfo() {\r\n    const INFO_URL = `https://agave.designsafe-ci.org/oauth2/userinfo?schema=openid`;\r\n    const userStr = localStorage.getItem(this.LS_USER_KEY);\r\n    const user = JSON.parse(userStr);\r\n    if (user !== null) {\r\n      this._currentUser.next(\r\n        new AuthenticatedUser(user.username, user.email)\r\n      );\r\n    } else {\r\n      this.http.get<OpenIDUser>(INFO_URL).subscribe(resp => {\r\n        const u = new AuthenticatedUser(resp.name, resp.email);\r\n        localStorage.setItem(this.LS_USER_KEY, JSON.stringify(u));\r\n        this._currentUser.next(u);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {LatLng} from 'leaflet';\r\nimport {AssetFilters, FeatureAsset, IFeatureAsset, IPointCloud, Overlay} from '../models/models';\r\nimport { Feature, FeatureCollection} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {Form} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport * as querystring from 'querystring';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeoDataService {\r\n\r\n\r\n  // TODO: clean this up and put the observables up here. Also look into Replay/Behavior\r\n  private _features: BehaviorSubject<FeatureCollection>;\r\n  private features$: Observable<FeatureCollection>;\r\n  private _activeFeature: BehaviorSubject<any>;\r\n  private _mapMouseLocation: BehaviorSubject<any>;\r\n  private _basemap: BehaviorSubject<any>;\r\n  private _overlays: BehaviorSubject<any>;\r\n  private _activeOverlay: BehaviorSubject<any>;\r\n  private _pointClouds: BehaviorSubject<Array<IPointCloud>> = new BehaviorSubject<Array<IPointCloud>>(null);\r\n  public readonly pointClouds: Observable<Array<IPointCloud>> = this._pointClouds.asObservable();\r\n\r\n  private _loaded: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public loaded: Observable<boolean> = this._loaded.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n\tthis._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\tthis.features$ = this._features.asObservable();\r\n\tthis._activeFeature = new BehaviorSubject<any>(null);\r\n\tthis._mapMouseLocation = new BehaviorSubject<any>(null);\r\n\r\n\t// For the style of the basemap, defaults to OpenStreetmap\r\n\tthis._basemap = new BehaviorSubject<any>('roads');\r\n\r\n\t// Holds all of the overlays on a project\r\n\tthis._overlays = new BehaviorSubject<any>(null);\r\n\tthis._activeOverlay = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  getFeatures(projectId: number, query: AssetFilters = new AssetFilters()): void {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tthis._loaded.next(false);\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (fc: FeatureCollection) => {\r\n\t\tfc.features = fc.features.map( (feat: Feature) => new Feature(feat));\r\n\t\tthis._features.next(fc);\r\n\t\tthis._loaded.next(true);\r\n\t  });\r\n  }\r\n\r\n  deleteFeature(feature: Feature) {\r\n\tthis.http.delete(environment.apiUrl + `/projects/${feature.project_id}/features/${feature.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(feature.project_id);\r\n\t  });\r\n  }\r\n\r\n  getPointClouds(projectId: number) {\r\n\tthis.http.get<Array<IPointCloud>>(environment.apiUrl + `/projects/${projectId}/point-cloud/`)\r\n\t  .subscribe( (resp ) => {\r\n\t// console.log(resp);\r\n\tthis._pointClouds.next(resp);\r\n\t  });\r\n  }\r\n\r\n  addFeature(feat: Feature): void {\r\n\tthis.features$.pipe(take(1)).subscribe( (current: FeatureCollection) => {\r\n\t  current.features.push(feat);\r\n\t  this._features.next(current);\r\n\t});\r\n  }\r\n\r\n  addPointCloud(projectId: number, title: string, conversionParams: string): void {\r\n\tconst payload = {\r\n\t  description: title,\r\n\t  conversion_parameters: conversionParams\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/point-cloud/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureProperty(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/properties/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  updateFeatureStyle(projectId: number, featureId: number, groupData: any): void {\r\n\t// const payload = {\r\n\t//   description: title,\r\n\t//   conversion_parameters: conversionParams\r\n\t// };\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/${featureId}/styles/`, groupData)\r\n\t  .subscribe( (resp) => {\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t// TODO: notification\r\n\t  });\r\n  }\r\n\r\n  deletePointCloud(pc: IPointCloud): void {\r\n\tconsole.log(pc);\r\n\tthis.http.delete(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`)\r\n\t  .subscribe( (resp) => {\r\n\tthis.getPointClouds(pc.project_id);\r\n\t  });\r\n  }\r\n\r\n  addFileToPointCloud(pc: IPointCloud, file: File) {\r\n\tconst form = new FormData();\r\n\tform.append('file', file);\r\n\tconsole.log(pc);\r\n\tthis.http.post(environment.apiUrl + `/projects/${pc.project_id}/point-cloud/${pc.id}/`, form)\r\n\t  .subscribe( (resp) => {\r\n\tconsole.log(resp);\r\n\t  });\r\n  }\r\n\r\n  importFileFromTapis(projectId: number, files: Array<RemoteFile>): void {\r\n\r\n\tconst tmp = files.map( f => ({system: f.system, path: f.path}));\r\n\tconst payload = {\r\n\t  files: tmp\r\n\t};\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/features/files/import/`, payload)\r\n\t  .subscribe( (resp) => {\r\n\t\tthis.getFeatures(projectId);\r\n\t\t// this.getFeatures(projectId);\r\n\t  }, error => {\r\n\t\t// this.getFeatures(projectId);\r\n\t// TODO: Add notification / toast\r\n\t  });\r\n  }\r\n\r\n  downloadGeoJSON(projectId: number, query: AssetFilters = new AssetFilters()) {\r\n\tconst qstring: string = querystring.stringify(query.toJson());\r\n\tconst downloadLink = document.createElement('a');\r\n\r\n\tthis.http.get<FeatureCollection>(environment.apiUrl + `/projects/${projectId}/features/` + '?' + qstring)\r\n\t  .subscribe( (resp) => {\r\n\tconst blob = new Blob([JSON.stringify(resp)], {type: 'application/json'});\r\n\tdownloadLink.href = URL.createObjectURL(blob);\r\n\tdownloadLink.setAttribute('download', 'hazmapper.json');\r\n\tdocument.body.appendChild(downloadLink);\r\n\tdownloadLink.click();\r\n\tdocument.body.removeChild(downloadLink);\r\n\t  });\r\n  }\r\n\r\n  uploadFile(projectId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Array<Feature>>(environment.apiUrl + `/projects/${projectId}/features/files/`, form)\r\n\t  .subscribe( (feats) => {\r\n\tfeats.forEach( (feat) => {\r\n\t  this.addFeature(new Feature(feat));\r\n\t});\r\n\t  }, error => {\r\n\t// TODO: Add notification\r\n\t  });\r\n  }\r\n\r\n  uploadAssetFile(projectId: number, featureId: number, file: File): void {\r\n\tconst form: FormData = new FormData();\r\n\tform.append('file', file, file.name);\r\n\tthis.http.post<Feature>(environment.apiUrl + `/api/projects/${projectId}/features/${featureId}/assets/`, form)\r\n\t.subscribe( (feature) => {\r\n\t  // TODO workaround to update activeFeature\r\n\t  let f = this._activeFeature.getValue();\r\n\t  if(f && f.id === featureId){\r\n\t\tthis.activeFeature = new Feature(feature);\r\n\t\tthis.getFeatures(projectId);\r\n\t  }\r\n\t}, error => {\r\n\t  // TODO: Add notification\r\n\t});\r\n  }\r\n\r\n  getOverlays(projectId: number): void {\r\n\tthis.http.get(environment.apiUrl + `/projects/${projectId}/overlays/`).subscribe( (ovs: Array<Overlay>) => {\r\n\t  this._overlays.next(ovs);\r\n\t});\r\n  }\r\n\r\n  addOverlay(projectId: number, file: File, label: string, minLat: number, maxLat: number, minLon: number, maxLon: number) {\r\n\tconst payload = new FormData();\r\n\tpayload.append('file', file);\r\n\tpayload.append('label', label);\r\n\tpayload.append('minLat', minLat.toFixed(6));\r\n\tpayload.append('maxLat', maxLat.toFixed(6));\r\n\tpayload.append('minLon', minLon.toFixed(6));\r\n\tpayload.append('maxLon', maxLon.toFixed(6));\r\n\r\n\tthis.http.post(environment.apiUrl + `/projects/${projectId}/overlays/`, payload)\r\n\t  .subscribe((resp) => {\r\n\tthis.getOverlays(projectId);\r\n\t  });\r\n  }\r\n\r\n  public get overlays(): Observable<Array<Overlay>> {\r\n\treturn this._overlays.asObservable();\r\n  }\r\n\r\n  public get features(): Observable<FeatureCollection> {\r\n\treturn this._features.asObservable();\r\n  }\r\n\r\n  public get activeFeature() {\r\n\treturn this._activeFeature.asObservable();\r\n  }\r\n\r\n  // TODO: This is heinous\r\n  public set activeFeature(f: any) {\r\n\tif (f) {\r\n\t  if (f === this._activeFeature.getValue()) {\r\n\tthis._activeFeature.next(null);\r\n\t  } else {\r\n\tthis._activeFeature.next(f);\r\n\t  }\r\n\t} else {\r\n\t  this._activeFeature.next(null);\r\n\t}\r\n\r\n  }\r\n\r\n  public get activeOverlay(): Observable<Overlay> {\r\n\treturn this._activeOverlay.asObservable();\r\n  }\r\n\r\n  public set activeOverlay(ov) {\r\n\tthis._activeOverlay.next(ov);\r\n  }\r\n\r\n\r\n  public get mapMouseLocation(): Observable<LatLng> {\r\n\treturn this._mapMouseLocation.asObservable();\r\n  }\r\n\r\n  public set mapMouseLocation(loc) {\r\n\tthis._mapMouseLocation.next(loc);\r\n  }\r\n\r\n  public set basemap(bmap) {\r\n\tthis._basemap.next(bmap);\r\n  }\r\n\r\n  public get basemap(): any {\r\n\treturn this._basemap.asObservable();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {Feature} from '../../models/models';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {RemoteFile} from 'ng-tapis';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  // public activeFeature: Feature;\r\n  // public currentUser: AuthenticatedUser;\r\n\r\n  constructor(private geoDataService: GeoDataService, private authService: AuthService, private bsModalService: BsModalService,) {}\r\n\r\n  ngOnInit() {\r\n\t// this.geoDataService.activeFeature.subscribe( next => {\r\n\t//   this.activeFeature = next;\r\n\t// });\r\n\t// this.authService.currentUser.subscribe(next => this.currentUser = next);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Component, NgZone, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, Route} from '@angular/router';\r\nimport {AuthService} from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\t// TODO: For some reason wso2 is sending back a fragment like #access_token=qadad&expires_in=3600\r\n\tconst frag = this.route.snapshot.fragment;\r\n\tconst params = new URLSearchParams(frag);\r\n\tconst token = params.get('access_token');\r\n\tconst expires_in = +params.get('expires_in');\r\n\tthis.auth.setToken(token, expires_in);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, ReplaySubject} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Project, IProjectUser} from '../models/models';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport { validateBBox } from '@turf/helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private _projects: BehaviorSubject<Project[]> = new BehaviorSubject([]);\r\n  public readonly projects: Observable<Project[]> = this._projects.asObservable();\r\n  private _activeProject: ReplaySubject<Project> = new ReplaySubject<Project>(1);\r\n  public readonly  activeProject: Observable<Project> = this._activeProject.asObservable();\r\n  private _projectUsers: ReplaySubject<Array<IProjectUser>> = new ReplaySubject<Array<IProjectUser>>(1);\r\n  public readonly projectUsers$: Observable<Array<IProjectUser>> = this._projectUsers.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthService) { }\r\n\r\n  //Queries database for all user projects.\r\n  getProjects(): void {\r\n   this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n     this._projects.next(resp);\r\n     //DEBUG: outputs results of query\r\n     //console.log(this._projects.getValue())\r\n   });\r\n  }\r\n\r\n  create(data: Project): Observable<Project> {\r\n    const prom = this.http.post<Project>(environment.apiUrl + `/projects/`, data);\r\n    prom.subscribe(proj => {\r\n      //below code from here to next comment does nothing\r\n      const p = new Project();\r\n      p.name = 'test';\r\n      p.description = 'test';\r\n      // Spread operator, just pushes the new project into the array\r\n      this._projects.next([...this._projects.value, proj]);\r\n      // Set the active project to the one just created?\r\n      this._activeProject.next(proj);\r\n    });\r\n    return prom;\r\n  }\r\n\r\n  setActiveProject(proj: Project): void {\r\n    this._activeProject.next(proj);\r\n  }\r\n\r\n  \r\n  update(data: Project): void{\r\n    // console.log(data) \r\n    this.http.put<Project>(environment.apiUrl + `/projects/${data.id}/`, data).subscribe(\r\n      (resp) => {\r\n        this._activeProject.next(resp);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Note: This will delete the project for everyone, if the project is shared. \r\n  // Need to find a way to unsubscribe a project for one person without affecting the others.\r\n  delete(data: Project):void{\r\n    this.http.delete(environment.apiUrl  + `/projects/${data.id}/`)\r\n      .subscribe( (resp) => {\r\n        this.getProjects();\r\n        // this._projects.next([...this._projects.value]);\r\n        // console.log(this._projects.value[0])\r\n        // this._activeProject.next(this._projects.value[0]);\r\n      });\r\n  }\r\n\r\n  getProjectUsers(proj: Project): Observable<Array<IProjectUser>> {\r\n    return this.http.get<Array<IProjectUser>>(environment.apiUrl + `/projects/${proj.id}/users/`).pipe(\r\n      tap(users => {\r\n        this._projectUsers.next(users);\r\n      }));\r\n  }\r\n\r\n  addUserToProject(proj: Project, uname: string): void {\r\n    const payload = {\r\n      username: uname\r\n    };\r\n    this.http.post(environment.apiUrl + `/projects/${proj.id}/users/`, payload)\r\n      .subscribe( (resp) => {\r\n        this.getProjectUsers(proj).subscribe();\r\n      });\r\n  }\r\n\r\n  deleteUserFromProject(proj:Project, user:string): void {\r\n    this.http.delete(environment.apiUrl + `/projects/${proj.id}/users/${user}/`)\r\n    .subscribe((resp)=>{\r\n      this.getProjectUsers(proj).subscribe();\r\n    },error =>{\r\n      //TODO: Create popup for an error message.\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport { ProjectsService } from './projects.service';\r\nimport { Feature } from '../models/models';\r\n\r\n// Will inject Projects and GeoData Service to get properties of Feature\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n  private _groups: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public groups: Observable<any> = this._groups.asObservable();\r\n  private _forms: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public forms: Observable<any> = this._forms.asObservable();\r\n  private _tempGroup: BehaviorSubject<any> = new BehaviorSubject([]);\r\n  public tempGroup: Observable<any> = this._tempGroup.asObservable();\r\n  private _showGroup: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showGroup: Observable<boolean> = this._showGroup.asObservable();\r\n  private _showSidebar: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public showSidebar: Observable<boolean> = this._showSidebar.asObservable();\r\n\r\n  private _activeFeature: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public activeFeature: Observable<any> = this._activeFeature.asObservable();\r\n\r\n  private _activeGroup: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activeGroup: Observable<string> = this._activeGroup.asObservable();\r\n\r\n  private _activeFeatureNum: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureNum: Observable<number> = this._activeFeatureNum.asObservable();\r\n\r\n  private _unselectAll: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public unselectAll: Observable<boolean> = this._unselectAll.asObservable();\r\n\r\n  private _featureImagesExist: BehaviorSubject<boolean> = new BehaviorSubject(null);\r\n  public featureImagesExist: Observable<boolean> = this._featureImagesExist.asObservable();\r\n\r\n  private _activeFeatureId: BehaviorSubject<number> = new BehaviorSubject<number>(null);\r\n  public activeFeatureId: Observable<number> = this._activeFeatureId.asObservable();\r\n\r\n  private _activePane: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public activePane: Observable<string> = this._activePane.asObservable();\r\n\r\n  private _tagFeatureGroup: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public tagFeatureGroup: Observable<any> = this._tagFeatureGroup.asObservable();\r\n\r\n  constructor(private projectsService: ProjectsService) {\r\n  }\r\n\r\n  // Loop through projects to get a list of Groups\r\n  addGroup(groupList: any): void {\r\n\tthis._groups.next(groupList);\r\n  }\r\n\r\n  setGroupProperties(featureList: any): void {\r\n\t// let tempGroupList = {};\r\n\tlet tempGroupList = {};\r\n\tlet tempFeatList = {};\r\n\tfor (let feat of featureList) {\r\n\t  // Parses if group exists at all in server\r\n\t  if (feat.properties.group) {\r\n\t\t// Loops through all the groups\r\n\t\tfor (let group of feat.properties.group) {\r\n\t\t  // Adds new feature to group\r\n\t\t  // if (!tempFeatList[group.name]) {\r\n\t\t  //\ttempFeatList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // if (!tempGroupList[group.name]) {\r\n\t\t  //\ttempGroupList[group.name] = [];\r\n\t\t  // }\r\n\r\n\t\t  // TODO for some reason it's limiting itself to only one group per feature...\r\n\r\n\t\t  //if it exist\r\n\t\t  if (!tempGroupList[group.name]) {\r\n\t\t\t// console.log(\"RENEWING\");\r\n\t\t\t// console.log(group.name);\r\n\t\t\t// console.log(feat);\r\n\t\t\ttempGroupList[group.name] = {\r\n\t\t\t  name: group.name,\r\n\t\t\t  features: [],\r\n\t\t\t  color: group.color,\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  tempGroupList[group.name].features.push(feat);\r\n\r\n\t\t  // console.log(\"Inside Service\");\r\n\t\t  // console.log(tempGroupList);\r\n\t\t  // tempFeatList[group.name].push(feat);\r\n\r\n\t\t  // if (tempGroupList[group.name] != undefined) {\r\n\t\t  //\ttempGroupList[group.name].features = tempFeatList[group.name];\r\n\t\t  // } else {\r\n\t\t  //\ttempGroupList[group.name] = {\r\n\t\t  //\t  name: group.name,\r\n\t\t  //\t  features: tempFeatList[group.name],\r\n\t\t  //\t  color: group.color,\r\n\t\t  //\t}\r\n\t\t  // }\r\n\t\t  //\t{\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t  // if (!tempGroupList.) {\r\n\r\n\t\t  // }\r\n\r\n\t\t  // tempGroupList.push({\r\n\t\t  //\tname: group.name,\r\n\t\t  //\tfeatures: tempFeatList[group.name],\r\n\t\t  //\tcolor: group.color,\r\n\t\t  // });\r\n\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n\t// console.log(tempGroupList);\r\n\tthis._groups.next(Object.values(tempGroupList));\r\n\t// console.log(Object.values(tempGroupList))\r\n\t// this._groups.next(tempGroupList);\r\n  }\r\n\r\n  addForm(formList: any): void {\r\n\tthis._forms.next(formList);\r\n  }\r\n\r\n  addTempGroup(tempGroup: any): void {\r\n\tthis._tempGroup.next(tempGroup);\r\n  }\r\n\r\n  setShowGroup(show: boolean): void {\r\n\tthis._showGroup.next(show);\r\n  }\r\n\r\n  setFeatureImagesExist(feature: boolean): void {\r\n\tthis._featureImagesExist.next(feature);\r\n  }\r\n\r\n  setShowSidebar(show: boolean): void {\r\n\tthis._showSidebar.next(show);\r\n  }\r\n\r\n  setUnselectAll(select: boolean): void {\r\n\tthis._unselectAll.next(select);\r\n  }\r\n\r\n  // TODO Replace this with geo-data.service\r\n  setActiveProject(feat: any): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeFeature.next(feat);\r\n  }\r\n\r\n  setActiveGroup(groupName: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activeGroup.next(groupName);\r\n  }\r\n\r\n  setActivePane(pane: string): void {\r\n\t// console.log(feat.assets[0].path);\r\n\tthis._activePane.next(pane);\r\n  }\r\n\r\n  setActiveFeatureNum(num: number): void {\r\n\tthis._activeFeatureNum.next(num);\r\n  }\r\n\r\n  setActiveFeatureId(id: number): void {\r\n\tthis._activeFeatureId.next(id);\r\n  }\r\n\r\n  setTagFeatureGroup(groupName: string, featureId: number, payload: any): void {\r\n\tlet groupFeature : string = groupName + featureId;\r\n\tlet tagFeatureGroupValue : any = this._tagFeatureGroup.value;\r\n\r\n\tif (tagFeatureGroupValue == null) {\r\n\t  tagFeatureGroupValue = {};\r\n\t} else {\r\n\t  tagFeatureGroupValue[groupFeature] = payload;\r\n\t}\r\n\r\n\tthis._tagFeatureGroup.next(tagFeatureGroupValue);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, ReplaySubject, Subject} from 'rxjs';\r\nimport {Group} from '../models/models';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { GroupsService } from './groups.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n  // private _forms: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<any[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  // public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject([]);\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({Type});\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  // this._features = new BehaviorSubject<FeatureCollection>({type: 'FeatureCollection', features: []});\r\n\r\n  private _forms: BehaviorSubject<Group[]> = new BehaviorSubject([]);\r\n  public forms: Observable<Group[]> = this._forms.asObservable();\r\n\r\n  private _activeFormList: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n  public activeFormList: Observable<any[]> = this._activeFormList.asObservable();\r\n\r\n  private _formGroup: BehaviorSubject<FormGroup> = new BehaviorSubject<FormGroup>(null);\r\n  public formGroup: Observable<FormGroup> = this._formGroup.asObservable();\r\n\r\n\r\n  // THIS TODO\r\n  // private _forms: BehaviorSubject<Group> = new BehaviorSubject<Group>({type: 'Group', formList: [], groupName: []});\r\n  // public forms: Observable<Group> = this._forms.asObservable();\r\n\r\n\r\n  constructor(private groupsService: GroupsService) {}\r\n\r\n  // getProjects(): void {\r\n  //  this.http.get<Project[]>(environment.apiUrl + `/projects/`).subscribe( resp => {\r\n  //    this._projects.next(resp);\r\n  //  });\r\n  // }\r\n\r\n  // addForm(formList: Array<any>): void {\r\n  //\tthis._forms.formList.next(formList);\r\n  // }\r\n\r\n  // addForm(formObj: Group[]): void {\r\n  // TODO This should be stored in projects api later on (or not)\r\n  // addForm(groupName: string, formGroup: Group, formList: Array<any>): void {\r\n  // addForm(formObj: Array<Group>): void {\r\n  addForm(groupName: string, formItem: any): void {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => {\r\n\t\treturn groupList.map(groupObj => {\r\n\t\t  if (groupObj.groupName == groupName) {\r\n\t\t\tgroupObj.formList.push(formItem);\r\n\t\t  }\r\n\t\t  return groupObj;\r\n\t\t});\r\n\t  })).subscribe(current => {this._forms.next(current); console.log(this._forms); console.log(current)});\r\n\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  updateFormItem() {\r\n\tlet group: any = {};\r\n\r\n\tif (this._activeFormList.value) {\r\n\t  this._activeFormList.value.forEach(e =>\r\n\t\tgroup[e.label] = e.required ? new FormControl(e.value || '', Validators.required)\r\n\t\t: new FormControl(e.value || '')\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t  this._formGroup.next(new FormGroup(group));\r\n\t}\r\n  }\r\n\r\n  changeGroupForm(groupName: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList;\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.updateFormItem();\r\n  }\r\n\r\n  addGroup(groupName: string) {\r\n\tlet groupObject = new Group();\r\n\tgroupObject.formList = [];\r\n\r\n\tgroupObject.groupName = groupName;\r\n\r\n\tthis.forms.pipe(\r\n\t  first()\r\n\t).subscribe(current => {\r\n\t\tcurrent.push(groupObject);\r\n\t\tthis._forms.next(current);\r\n\t});\r\n  }\r\n\r\n  deleteForm(groupName: string, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList = groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  return groupObj.formList.filter(formItem => formItem.label != form.label);\r\n\t\t}\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  };\r\n\r\n  renameForm(groupName: string, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.label = label;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  renameOption(groupName: string, opt: any, form: any, label: string) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => this._forms.next(current));\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options.forEach(option => {\r\n\t\t\t\tif (option.label == opt.label) {\r\n\t\t\t\t  option.label = label;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t// return groupList;\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\t  // }))).subscribe(current => {console.log(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  deleteOption(groupName: string, opt: any, form: any) {\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj;\r\n\t  }))).subscribe(current => {this._forms.next(current)});\r\n\r\n\tthis.forms.pipe(\r\n\t  first(),\r\n\t  map(groupList => groupList.map(groupObj => {\r\n\t\tif (groupObj.groupName == groupName) {\r\n\t\t  groupObj.formList.forEach(formItem => {\r\n\t\t\tif (formItem.label == form.label) {\r\n\t\t\t  formItem.options = formItem.options.filter(option => option.label != opt.label);\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}\r\n\t\treturn groupObj.formList;\r\n\t  }))).subscribe(current => {this._activeFormList.next(current.find(e => e != undefined))});\r\n\r\n\tthis.changeGroupForm(groupName);\r\n  }\r\n\r\n  getForm(groupName: string, formObj: Array<Group>): Array<any> {\r\n\tlet groupObj = formObj.filter(groupObj => groupObj.groupName === groupName);\r\n\tlet finalArray = [];\r\n\r\n\tif (groupObj[0] != undefined) {\r\n\t  finalArray = groupObj[0].formList;\r\n\t}\r\n\r\n\treturn finalArray;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tag-generator',\r\n  templateUrl: './tag-generator.component.html',\r\n  styleUrls: ['./tag-generator.component.scss']\r\n})\r\nexport class TagGeneratorComponent implements OnInit {\r\n  formLabel: string;\r\n  formOptions: Array<any> = [];\r\n  selectedGroup: string;\r\n  showOpt: string;\r\n  formType: string;\r\n  changed: boolean = false;\r\n  labelFilter: string;\r\n  formItemList: Array<any> = [];\r\n  activeGroup: string;\r\n  optionFilter: string;\r\n  formName: string;\r\n  formValue: string;\r\n  formRequired: boolean;\r\n  openOption: any = {};\r\n  enabledControls: Array<string> = [];\r\n  showSubitem: boolean = true;\r\n  activeFormList: Array<any>;\r\n\r\n  constructor(\r\n\tprivate formsService: FormsService,\r\n\tprivate groupsService: GroupsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.formsService.activeFormList.subscribe((next) => {\r\n\t  this.activeFormList = next;\r\n\t});\r\n\r\n\tthis.formOptions = [];\r\n\tthis.formItemList = [];\r\n\tthis.formType = 'text';\r\n\tthis.formName = '';\r\n\tthis.formLabel = '';\r\n\tthis.formValue = '';\r\n\tthis.formRequired = false;\r\n\tthis.enabledControls = [\"Text\", \"Checkbox\", \"Radio\", \"Dropdown\"];\r\n  }\r\n\r\n  inputFormLabel (event: any) {\r\n\t// this.formLabel = event.target.value.toLowerCase();\r\n\tthis.formLabel = event.target.value;\r\n  }\r\n\r\n  addOptionItem(value: string) {\r\n\tif (value) {\r\n\t  let formWithValue = this.formOptions.filter(e => e.label == value);\r\n\t  if (formWithValue.length == 0 && value.length != 0) {\r\n\t\tthis.formOptions.push({\r\n\t\t  key: value[0],\r\n\t\t  label: value,\r\n\t\t});\r\n\t  }\r\n\t}\r\n  }\r\n\r\n  deleteOption(opt: any) {\r\n\tthis.formOptions = this.formOptions.filter(option => option.label != opt.label);\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n\r\n  renameOption(opt: any, label: string) {\r\n\tif (this.showOpt == \"show-option\") {\r\n\t  this.showOpt = \"no-show-option\";\r\n\t} else {\r\n\t  this.showOpt = \"show-option\";\r\n\t}\r\n\r\n\tlabel = label.toLowerCase();\r\n\tthis.formOptions.forEach(e => {\r\n\t  if (e.label == opt.label) {\r\n\t\te.label = label;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  selectInputForm (name: string) {\r\n\tthis.formType = name;\r\n\tthis.formLabel = '';\r\n\tthis.formOptions = [];\r\n  }\r\n\r\n  clearOption() {\r\n\tthis.optionFilter = '';\r\n  }\r\n\r\n  clearLabel() {\r\n\tthis.labelFilter = '';\r\n  }\r\n\r\n  addFormItem() {\r\n\tlet formValueFilter = this.activeFormList.filter(e => e.label == this.formLabel);\r\n\tif (formValueFilter.length == 0 && this.formLabel.length != 0) {\r\n\t  let formItem = {\r\n\t\ttype: this.formType,\r\n\t\tname: this.formName,\r\n\t\tlabel: this.formLabel,\r\n\t\tvalue: this.formValue,\r\n\t\trequired: this.formRequired,\r\n\t\toptions: []\r\n\t  }\r\n\r\n\t  this.openOption[this.formLabel] = false;\r\n\r\n\t  if (this.formType !== \"text\" && this.formOptions.length != 0) {\r\n\t\tlet myOpts = [];\r\n\t\tfor (const opt of this.formOptions) {\r\n\t\t  myOpts.push({\r\n\t\t\tkey: opt[0],\r\n\t\t\tlabel: opt,\r\n\t\t  })\r\n\t\t}\r\n\r\n\t\tformItem.options = this.formOptions;\r\n\t  }\r\n\r\n\t  this.formItemList.push(formItem);\r\n\t  this.formsService.addForm(this.activeGroup, formItem);\r\n\r\n\t  this.formLabel = '';\r\n\t  this.formOptions = [];\r\n\t  this.labelFilter = '';\r\n\t  this.changed = true;\r\n\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t}\r\n  }\r\n\r\n  cancelCreate() {\r\n\tthis.groupsService.setActivePane(\"tagger\");\r\n\tthis.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tag-images',\r\n  templateUrl: './tag-images.component.html',\r\n  styleUrls: ['./tag-images.component.scss']\r\n})\r\nexport class TagImagesComponent implements OnInit {\r\n  activeGroup: string;\r\n  payload: any;\r\n  selectedGroup: string;\r\n  openOption: any = {};\r\n  activeFeatureId: number;\r\n  private formGroup$: Subscription;\r\n  private activeGroup$: Subscription;\r\n  private activeFeatureId$: Subscription;\r\n  form: FormGroup;\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(\r\n\tprivate groupsService: GroupsService,\r\n\tprivate formsService: FormsService,\r\n\tprivate dialog: MatDialog,\r\n\tprivate router: Router) { }\r\n\r\n  ngOnInit() {\r\n\tthis.activeGroup$ = this.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.activeFeatureId$ = this.groupsService.activeFeatureId.subscribe((next) => {\r\n\t  this.activeFeatureId = next;\r\n\t});\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openOptionToggle(label: string) {\r\n\tif (this.openOption[label]) {\r\n\t  this.openOption[label] = false;\r\n\t} else {\r\n\t  this.openOption[label] = true;\r\n\t}\r\n  }\r\n\r\n  createNewTag() {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n  }\r\n\r\n  onSubmit() {\r\n\tthis.payload = this.form.getRawValue();\r\n\tconsole.log(this.payload);\r\n\tthis.groupsService.setTagFeatureGroup(this.activeGroup, this.activeFeatureId, this.payload);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n\tthis.activeFeatureId$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import {Injectable, NgModule} from '@angular/core';\r\nimport {Routes, RouterModule, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { NotFoundComponent} from './components/notfound/notfound.component';\r\nimport {AuthService} from './services/authentication.service';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\n\r\n@Injectable()\r\nexport class Activate implements CanActivate {\r\n  constructor(private authSvc: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n\t if (this.authSvc.isLoggedIn()) {\r\n\t   return true;\r\n\t }\r\n\t this.authSvc.login();\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainComponent, canActivate: [Activate], children: [\r\n\t// {path: '', redirectTo: '/tagger', pathMatch: 'full'},\r\n\t// TODO IAN cache value on parent route\r\n\t// {path: 'gallery', component: ImageGalleryComponent, canActivateChild: [Activate]},\r\n\t// {path: 'tagger', component: TaggerComponent, canActivateChild: [Activate]},\r\n\t// {path: 'preset', component: PresetGeneratorComponent, canActivateChild: [Activate]}\r\n\r\n\t{path: 'tagger', component: TagImagesComponent, canActivateChild: [Activate]},\r\n\t{path: 'preset', component: TagGeneratorComponent, canActivateChild: [Activate]}\r\n  ]},\r\n\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: '404', component: NotFoundComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [Activate]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'viewer';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.authService.login();\r\n  }\r\n}\r\n","import {CircleMarker, circleMarker, divIcon, LatLng, Marker, marker} from \"leaflet\";\r\nimport {Feature} from \"../models/models\";\r\n\r\nfunction createCircleMarker (feature: Feature, latlng: LatLng): CircleMarker {\r\n  let options = {\r\n    radius: 8,\r\n    fillColor: \"#d3d3d3\",\r\n    color: \"black\",\r\n    weight: 1,\r\n    opacity: 1,\r\n    fillOpacity: 0.8\r\n  };\r\n  return circleMarker( latlng, options );\r\n}\r\n\r\nfunction createImageMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-camera-retro fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nfunction createCollectionMarker (feature: Feature, latlng: LatLng) : Marker {\r\n  let divHtml = '<i class=\"fa fa-folder-open fa-2x light-blue\"></i>';\r\n  let ico = divIcon({className: 'icon-marker', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\nfunction createVideoMarker (feature: Feature, latlng: LatLng): Marker {\r\n  let divHtml = \"<i class='fas fa-video fa-2x light-blue'></i>\";\r\n  let ico = divIcon({className: 'leaflet-fa-marker-icon', html: divHtml});\r\n  return marker(latlng, {icon: ico});\r\n}\r\n\r\nexport function createMarker(feature: Feature, latlng: LatLng) : Marker {\r\n  let marker;\r\n  if (feature.featureType() == 'image') {\r\n    marker = createImageMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'collection'){\r\n    marker =  createCollectionMarker(feature, latlng);\r\n  } else if (feature.featureType() == 'video') {\r\n    marker = createVideoMarker(feature, latlng)\r\n  }\r\n  else {\r\n    marker = createCircleMarker(feature, latlng)\r\n  }\r\n  return marker;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\n\r\nimport { GeoDataService} from '../../services/geo-data.service';\r\nimport { createMarker } from '../../utils/leafletUtils';\r\nimport {Feature} from 'geojson';\r\nimport {FeatureGroup, ImageOverlay, LatLng, LeafletMouseEvent} from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport { AllGeoJSON } from '@turf/helpers';\r\nimport {filter, skip} from 'rxjs/operators';\r\nimport {Overlay} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  map: L.Map;\r\n  mapType = 'normal';\r\n  activeFeature: Feature;\r\n  activeOverlay: Overlay;\r\n  features: FeatureGroup = new FeatureGroup();\r\n  overlays: Map<number, ImageOverlay>;\r\n  environment: AppEnvironment;\r\n\r\n  constructor(private GeoDataService: GeoDataService,\r\n\t\t\t  private route: ActivatedRoute,\r\n\t\t\t  ) {\r\n\r\n\t// Have to bind these to keep this being this\r\n\tthis.featureClickHandler.bind(this);\r\n\tthis.mouseEventHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n\t// const mapType: string = this.route.snapshot.queryParamMap.get('mapType');\r\n\t// this.projectId = +this.route.snapshot.paramMap.get(\"projectId\");\r\n\t// this.cluster = this.route.snapshot.queryParamMap.get('mapType');\r\n\tthis.environment = environment;\r\n\tthis.overlays = new Map();\r\n\tthis.map = new L.Map('map', {\r\n\t center: [40, -80],\r\n\t zoom: 9\r\n\t});\r\n\r\n\tconst baseOSM = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t  maxZoom: 19,\r\n\t  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t});\r\n\tconst satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n\t  attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t});\r\n\t// default to streetmap view;\r\n\tthis.map.addLayer(baseOSM);\r\n\r\n\tthis.loadFeatures();\r\n\r\n\t// Publish the mouse location on the mapMouseLocation stream\r\n\tthis.map.on('mousemove', (ev: LeafletMouseEvent) => this.mouseEventHandler(ev));\r\n\tthis.GeoDataService.activeOverlay.pipe(skip(1)).subscribe((next) => {\r\n\t  this.addRemoveOverlay(next);\r\n\t});\r\n\r\n\r\n\t// Listen on the activeFeature stream and zoom map to that feature when it changes\r\n\tthis.GeoDataService.activeFeature.pipe(filter(n => n != null)).subscribe( (next) => {\r\n\t  this.activeFeature = next;\r\n\t  const bbox = turf.bbox(<AllGeoJSON> next);\r\n\t  this.map.fitBounds([[bbox[1], bbox[0]], [bbox[3], bbox[2]]]);\r\n\t});\r\n\r\n\t// Listen for changes to the basemap\r\n\tthis.GeoDataService.basemap.pipe(skip(1)).subscribe((next) => {\r\n\t  if (next == 'sat') {\r\n\t\tthis.map.removeLayer(baseOSM);\r\n\t\tthis.map.addLayer(satellite);\r\n\t  }\r\n\t  if (next == 'roads') {\r\n\t\tthis.map.removeLayer(satellite);\r\n\t\tthis.map.addLayer(baseOSM);\r\n\t  }\r\n\t});\r\n  }\r\n\r\n  addRemoveOverlay(ov: Overlay): void {\r\n\tif (this.overlays.has(ov.id)) {\r\n\t  this.features.removeLayer(this.overlays.get(ov.id));\r\n\t  this.overlays.delete(ov.id);\r\n\t} else {\r\n\t  const overlay = L.imageOverlay(environment.apiUrl + '/assets/' + ov.path, [[ov.minLat, ov.minLon], [ov.maxLat, ov.maxLon]]);\r\n\t  this.overlays.set(ov.id, overlay);\r\n\t  this.features.addLayer(overlay);\r\n\t}\r\n\tthis.map.fitBounds(this.features.getBounds());\r\n  }\r\n\r\n\r\n  mouseEventHandler(ev: any): void {\r\n\tthis.GeoDataService.mapMouseLocation = ev.latlng;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load Features for a project.\r\n   */\r\n  loadFeatures() {\r\n\tconst geojsonOptions = {\r\n\t  pointToLayer: createMarker\r\n\t};\r\n\tthis.GeoDataService.features.subscribe(collection => {\r\n\t  this.features.clearLayers();\r\n\t  const markers = L.markerClusterGroup({\r\n\t\ticonCreateFunction: (cluster) => {\r\n\t\t  return L.divIcon({html: `<div><b>${cluster.getChildCount()}</b></div>`, className: 'marker-cluster'});\r\n\t\t}\r\n\t  });\r\n\t  collection.features.forEach( d => {\r\n\t\tconst feat = L.geoJSON(d, geojsonOptions);\r\n\t\tfeat.on('click', (ev) => { this.featureClickHandler(ev); } );\r\n\r\n\t\tif (d.geometry.type == 'Point') {\r\n\t\t  markers.addLayer(feat);\r\n\t\t} else {\r\n\t\t  this.features.addLayer(feat);\r\n\t\t}\r\n\t  });\r\n\t  this.features.addLayer(markers);\r\n\t  this.map.addLayer(this.features);\r\n\t  try {\r\n\t\tthis.map.fitBounds(this.features.getBounds());\r\n\t  } catch (e) {}\r\n\t});\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param ev\r\n   */\r\n  featureClickHandler(ev: any): void {\r\n\tconst f = ev.layer.feature;\r\n\tthis.GeoDataService.activeFeature = f;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SystemSummary} from 'ng-tapis';\r\nimport { ApiService } from 'ng-tapis';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgaveSystemsService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/systems/v2/';\r\n  private _systems: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly systems: Observable<SystemSummary[]> = this._systems.asObservable();\r\n  private _projects: ReplaySubject<SystemSummary[]> = new ReplaySubject<SystemSummary[]>(1);\r\n  public readonly projects: Observable<SystemSummary[]> = this._projects.asObservable();\r\n  private systemsList: SystemSummary[];\r\n\r\n  constructor(private tapis: ApiService) { }\r\n\r\n  //list() runs when the file browser is opened, retrieves all files in TACC for given user\r\n  list() {\r\n    this.tapis.systemsList({type: 'STORAGE'})\r\n      .subscribe(resp => {\r\n        this._systems.next(resp.result);\r\n        this._projects.next(resp.result.filter(sys => sys.id.startsWith('project')));\r\n      }, error => {\r\n        this._systems.next(null);\r\n        this._projects.next(null);\r\n      });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ApiService, FileOperationRequest} from 'ng-tapis';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {Project} from '../models/models';\r\nimport {share} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {AuthService} from './authentication.service';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport { verify } from 'ts-mockito';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TapisFilesService {\r\n\r\n  private baseUrl = 'https://agave.designsafe-ci.org/files/v2/';\r\n  public currentListing: Array<RemoteFile>;\r\n  private _listing: BehaviorSubject<RemoteFile[]> = new BehaviorSubject<RemoteFile[]>([]);\r\n  public readonly listing: Observable<RemoteFile[]> = this._listing.asObservable();\r\n  public readonly IMPORTABLE_TYPES: Array<string> = ['jpg', 'jpeg', 'las', 'laz', 'json', 'geojson', 'geotiff', 'tiff', 'gpx'];\r\n\r\n  constructor(private tapis: ApiService,\r\n              private http: HttpClient,\r\n              private authService: AuthService,\r\n              private popup: MatSnackBar) { }\r\n\r\n  checkIfSelectable(file: RemoteFile): boolean {\r\n    if (file.type === 'dir') {return false; }\r\n    const ext = this.getFileExtension(file);\r\n    return this.IMPORTABLE_TYPES.includes(ext);\r\n  }\r\n\r\n  private getFileExtension(file: RemoteFile): string {\r\n    return file.name.split('.').pop().toLowerCase();\r\n  }\r\n\r\n  listFiles(system: string, path: string) {\r\n    return this.tapis.filesList({systemId: system, filePath: path});\r\n  }\r\n\r\n  public getParentPath(path: string): string {\r\n    const cleaned = path.replace('//', '/');\r\n    const arr = cleaned.split('/');\r\n    arr.pop();\r\n    const parentPath = arr.join('/');\r\n    return parentPath;\r\n  }\r\n\r\n  //saves project to a specified format in Design Safe's my Data section\r\n  public export(systemID: string, path: string, fileName: string, extension:string, data:any) {\r\n    //Constructs an object that configures the success/error pop-up\r\n    let snackbarConfig:MatSnackBarConfig = {duration: 3000, horizontalPosition: 'right', verticalPosition: 'top'}\r\n    //construct the full URL that points to where the data will be stored\r\n    let fullURL = `https://agave.designsafe-ci.org/files/v2/media/system/${systemID}${path}`\r\n\r\n    //construct a file to submit\r\n    let fileType = \"plain/text\";\r\n    ((extension == \".csv\")? (fileType = \"text/csv\"): (fileType = \"application/json\"))\r\n    let tmp = new Blob([data], {type: fileType})\r\n    let date = new Date()\r\n    let file = new File([tmp], fileName, {lastModified: date.valueOf()})\r\n\r\n    //Creates a form data object which holds the file to be uploaded\r\n    let form:FormData = new FormData\r\n    form.append(\"fileToUpload\", file)\r\n\r\n    //sends the packaged data to Designsafe. URL its being uploaded to handles authentication\r\n    this.http.post(fullURL, form).subscribe(resp => {\r\n      console.log(resp)\r\n      let msg = \"Successfully saved file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    }, error => {\r\n      console.log(error)\r\n      let msg = \"Faled to save file to \" + systemID + path\r\n      this.popup.open(msg, '', snackbarConfig)\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-modal-file-browser',\r\n  templateUrl: './modal-file-browser.component.html',\r\n  styleUrls: ['./modal-file-browser.component.scss'],\r\n})\r\nexport class ModalFileBrowserComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  public allowedExtensions: Array<string> = this.tapisFilesService.IMPORTABLE_TYPES;\r\n \r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalFileBrowserComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  const allowedExt = this.allowedExtensions\r\n\t\t  files.forEach(function (value, index) {\r\n          if ((value.type == 'file' && allowedExt.includes(value.path.split('.').pop().toLowerCase()) ) || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  // TODO: Ian: Error message on incorrect file type?\r\n  select(file: RemoteFile) {\r\n\tif (this.tapisFilesService.checkIfSelectable(file)) {\r\n\t  this.addSelectedFile(file);\r\n\t}\r\n\telse{\r\n\t\t// console.log(\"not selectable\")\r\n\t}\r\n\t// here?\r\n\t// else {\r\n\t//   Signal Error!\r\n\t// }\r\n  }\r\n\r\n  addSelectedFile(file: RemoteFile) {\r\n\tif (this.selectedFiles.has(file.path)) {\r\n\t  this.selectedFiles.delete(file.path);\r\n\t} else {\r\n\t  this.selectedFiles.set(file.path, file);\r\n\t//   console.log(this.selectedFiles + \"GOT HERE\");\r\n\t}\r\n  }\r\n\r\n  chooseFiles() {\r\n\tconst tmp = Array.from(this.selectedFiles.values());\r\n\tthis.dialogRef.close(tmp)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AgaveSystemsService} from '../../services/agave-systems.service';\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { RemoteFile} from 'ng-tapis/models/remote-file';\r\nimport { SystemSummary} from 'ng-tapis';\r\nimport { TapisFilesService } from '../../services/tapis-files.service';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { Subject, combineLatest} from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal-download-selector',\r\n  templateUrl: './modal-download-selector.component.html',\r\n  styleUrls: ['./modal-download-selector.component.scss']\r\n})\r\nexport class ModalDownloadSelectorComponent implements OnInit {\r\n  @Output() currentPath: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  private downloadSelectForm: FormGroup;\r\n  private currentUser: AuthenticatedUser;\r\n  public filesList: Array<RemoteFile> = [];\r\n  public inProgress= true;\r\n  public selectedFiles: Map<string, RemoteFile> = new Map();\r\n  public onClose: Subject<Array<RemoteFile>> = new Subject<Array<RemoteFile>>();\r\n  public projects: Array<SystemSummary>;\r\n  private selectedSystem: SystemSummary;\r\n  public myDataSystem: SystemSummary;\r\n  public communityDataSystem: SystemSummary;\r\n  public publishedDataSystem: SystemSummary;\r\n  public currentDirectory: RemoteFile;\r\n  public passbackData: Array<string> = [\"\",\"\",\"\",\"\"];\r\n  public fileName:string = \"Custom File Name\"\r\n  public fileExtension:string =\".csv\"\r\n\r\n  constructor(private tapisFilesService: TapisFilesService,\r\n\t\t  // private modalRef: BsModalRef,\r\n\t\t  public dialogRef: MatDialogRef<ModalDownloadSelectorComponent>,\r\n\t\t  private dialog: MatDialog,\r\n\t\t  private authService: AuthService,\r\n\t\t  private agaveSystemsService: AgaveSystemsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  this.downloadSelectForm = new FormGroup( {\r\n    Name: new FormControl(this.fileName),\r\n    Extension: new FormControl(this.fileExtension)\r\n  });\r\n\r\n\t  // This finds all the projects, and file systems found from a user \r\n\tthis.agaveSystemsService.list();\r\n\r\n\t// TODO: change those hard coded systemIds to environment vars or some sort of config\r\n\t// wait on the currentUser and systems to resolve\r\n\tcombineLatest([this.authService.currentUser, this.agaveSystemsService.systems, this.agaveSystemsService.projects])\r\n\t\r\n\t// This little thing helped me fix the problem on calling ngOnInit several times\r\n\t.pipe(\r\n        take(1)\r\n      )\r\n\t  .subscribe( ([user, systems, projects]) => {\r\n\t\r\n\t\t// Uses systems to find the different directories that has the files in\r\n\tthis.myDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.default');\r\n\tthis.communityDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.community');\r\n\tthis.publishedDataSystem = systems.find( (sys) => sys.id === 'designsafe.storage.published');\r\n\t\r\n\t// This is where they choose which one they start with\r\n\tthis.selectedSystem = this.myDataSystem;\r\n\r\n\tthis.projects = projects;\r\n\tthis.currentUser = user;\r\n\tconst init = <RemoteFile> {\t\r\n\t\tsystem: this.myDataSystem.id,\r\n\t\ttype: 'dir',\r\n\t\tpath: this.currentUser.username\r\n\t};\r\n\tthis.browse(init);\r\n\t  });\r\n\r\n  }\r\n\r\n  selectSystem(system: SystemSummary): void {\r\n\tlet pth;\r\n\tsystem.id === this.myDataSystem.id ? pth = this.currentUser.username : pth = '/';\r\n\tconst init = <RemoteFile> {\r\n\t  system: system.id,\r\n\t  type: 'dir',\r\n\t  path: pth\r\n\t};\r\n\tthis.browse(init);\r\n  }\r\n\r\n\r\n  browse(file: RemoteFile) {\r\n\tif (file.type !== 'dir') { return; }\r\n\tthis.currentDirectory = file;\r\n\t// this.selectedFiles.clear();\r\n\tthis.filesList = [];\r\n\tthis.inProgress = false;\r\n\tthis.getFiles();\r\n  }\r\n\r\n  getFiles() {\r\n\tthis.inProgress = true;\r\n\r\n\tthis.tapisFilesService.listFiles(this.currentDirectory.system, this.currentDirectory.path).subscribe(listing => {\r\n\t\tconst files = listing.result;\r\n\r\n\t\tif (files.length && files[0].name === '.') {\r\n\t\t\t// This removes the first item in the listing, which in Agave\r\n\t\t\t// is always a reference to self '.' and replaces with '..'\r\n\t\t\tconst current = files.shift();\r\n\t\t\tthis.currentPath.next(current.path);\r\n      this.passbackData[1] = current.path;\r\n\t\t\tcurrent.path = this.tapisFilesService.getParentPath(current.path);\r\n\t\t\tcurrent.name = '..';\r\n\t\t\tfiles.unshift(current);\r\n\t\t  }\r\n\t\t  const newFile = [];\r\n\t\t  files.forEach(function (value, index) {\r\n          if (value.type == 'file' || value.type == 'dir'){\r\n            newFile.push(value);\r\n          }})\r\n\r\n\t\t  this.inProgress = false;\r\n\t\t  this.filesList = this.filesList.concat(newFile);\r\n\t},\r\n\terror => {\r\n\t\tthis.inProgress = false;\r\n\t});\r\n  }\r\n\r\n  chooseFiles() {\r\n  this.passbackData[0] = this.selectedSystem.id\r\n \r\n  //checks to see if the input was left unchanged\r\n  if( this.downloadSelectForm.dirty ) {\r\n    //if changed, enter name as specified\r\n    this.passbackData[2] = this.downloadSelectForm.get('Name').value\r\n  } else {\r\n    //if unchanged, enter filename as empty string\r\n    this.passbackData[2] = \"\"\r\n  }\r\n  this.passbackData[3] = this.fileExtension\r\n\tthis.dialogRef.close(this.passbackData)\r\n  }\r\n\r\n  cancel() {\r\n\tthis.dialogRef.close()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-create-project',\r\n  templateUrl: './modal-create-project.component.html',\r\n  styleUrls: ['./modal-create-project.component.scss']\r\n})\r\nexport class ModalCreateProjectComponent implements OnInit {\r\n\r\n  projCreateForm: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCreateProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.projCreateForm = new FormGroup( {\r\n\t  name: new FormControl(''),\r\n\t  description: new FormControl('')\r\n\t});\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  submit() {\r\n\tconst p = new Project();\r\n\tp.description = this.projCreateForm.get('description').value;\r\n\tp.name = this.projCreateForm.get('name').value;\r\n\tthis.projectsService.create(p);\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-modal-share-project',\r\n  templateUrl: './modal-share-project.component.html',\r\n  styleUrls: ['./modal-share-project.component.scss']\r\n})\r\nexport class ModalShareProjectComponent implements OnInit {\r\n\r\n  projShareForm: FormGroup;\r\n  activeProj: Project;\r\n  projectUsers;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalShareProjectComponent>,\r\n              private dialog: MatDialog,\r\n              private projectsService: ProjectsService) { }\r\n\r\n  ngOnInit() {\r\n    //creates new form control group to access input value\r\n    this.projShareForm = new FormGroup({\r\n      name: new FormControl(''),\r\n    });\r\n\r\n    //retrieves active project, needed to add users to the project\r\n    this.projectsService.activeProject.subscribe((proj) =>{\r\n      this.activeProj = proj;\r\n    });\r\n\r\n    //retrieves all users currently registered to the active project\r\n    this.projectsService.getProjectUsers(this.activeProj).subscribe((next) =>{\r\n      this.projectUsers = next;\r\n    });\r\n  }\r\n\r\n  //closes modal without submitting anything\r\n  close() {\r\n    this.dialogRef.close();\r\n    }\r\n\r\n  //shares project with specified user\r\n  submit(){\r\n    this.projectsService.addUserToProject(this.activeProj, this.projShareForm.get('name').value)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  //deletes user from project\r\n  delete(user){\r\n    this.projectsService.deleteUserFromProject(this.activeProj, user)\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-foundation';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Project } from '../../models/models';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-modal-current-project',\r\n  templateUrl: './modal-current-project.component.html',\r\n  styleUrls: ['./modal-current-project.component.scss']\r\n})\r\nexport class ModalCurrentProjectComponent implements OnInit\r\n{\r\n  projCreateForm: FormGroup;\r\n  activeProject: Project;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalCurrentProjectComponent>,\r\n\t\t\t  private dialog: MatDialog,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  @Inject(MAT_DIALOG_DATA) public projData: any) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.projectsService.activeProject.subscribe( (next) => {\r\n      this.activeProject = next;\r\n    });\r\n\r\n    this.projCreateForm = new FormGroup( {\r\n      name: new FormControl(this.activeProject.name),\r\n      description: new FormControl(this.activeProject.description)\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\tthis.dialogRef.close();\r\n  }\r\n\r\n  delete(){\r\n    if(confirm(\"Are you sure you want to delete this project? This will also delete it from HazMapper, and anyone this project was shared with.\")) {\r\n      this.projectsService.delete(this.activeProject);\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  update() {\r\n    const p = new Project();\r\n    p.description = this.projCreateForm.get('description').value;\r\n    p.name = this.projCreateForm.get('name').value;\r\n    p.id = this.activeProject.id;\r\n    p.uuid = this.activeProject.uuid;\r\n    this.projectsService.update(p);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ProjectsService } from '../../services/projects.service';\r\nimport { Feature, Project } from '../../models/models';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { GeoDataService } from '../../services/geo-data.service';\r\nimport {LatLng} from 'leaflet';\r\nimport {skip, startWith} from 'rxjs/operators';\r\nimport {BsModalRef, BsModalService} from 'ngx-foundation';\r\nimport {ModalFileBrowserComponent} from '../modal-file-browser/modal-file-browser.component';\r\nimport {ModalDownloadSelectorComponent} from '../modal-download-selector/modal-download-selector.component';\r\nimport {ModalCreateProjectComponent} from '../modal-create-project/modal-create-project.component';\r\nimport {ModalShareProjectComponent} from '../modal-share-project/modal-share-project.component';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\nimport {RemoteFile} from 'ng-tapis';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {FormsService} from \"../../services/forms.service\";\r\nimport {AuthenticatedUser, AuthService} from '../../services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalCurrentProjectComponent } from '../modal-current-project/modal-current-project.component';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport { feature } from '@turf/helpers';\r\nimport { TapisFilesService } from '../../services/tapis-files.service'\r\nimport { element } from 'protractor';\r\nimport { consoleTestResultHandler } from 'tslint/lib/test';\r\n\r\n@Component({\r\n  selector: 'app-control-bar',\r\n  templateUrl: './control-bar.component.html',\r\n  styleUrls: ['./control-bar.component.scss']\r\n})\r\nexport class ControlBarComponent implements OnInit {\r\n\r\n  public activeFeature: Feature;\r\n  features: FeatureCollection;\r\n  featureList: Array<any> = [];\r\n  activeFeatureNum: number;\r\n\r\n  public currentUser: AuthenticatedUser;\r\n  private REFRESHTIME = 6000; // 60 secs per reload default, right now it's an hour (6000 sec)\r\n  public projects: Project[];\r\n  public selectedProject: Project;\r\n  public mapMouseLocation: LatLng = new LatLng(0, 0);\r\n  public liveRefresh = true;\r\n  private timer: Observable<number> = interval(this.REFRESHTIME * 1000);\r\n  private timerSubscription: Subscription;\r\n  groupList: Array<any>;\r\n  showGroup: boolean;\r\n  imageName: string;\r\n  showSidebar: boolean;\r\n  groupsExist: boolean;\r\n  groupName: string;\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n  activePane: string;\r\n  hazMapperLink: string;\r\n\r\n  constructor(private projectsService: ProjectsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private bsModalService: BsModalService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private formsService: FormsService,\r\n\t\t\t  private authService: AuthService,\r\n\t\t\t  private filesService: TapisFilesService,\r\n\t\t\t  private router: Router,\r\n\t\t\t  private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  this.features = fc;\r\n\r\n\t  if (this.features != undefined) {\r\n\t\tthis.featureList = this.features.features;\r\n\t\tthis.groupsService.setActiveProject(this.featureList[0]);\r\n\r\n\t\t// TODO This should activate persistence by looping through all features and creating new groups and\r\n\t\t//\r\n\t\tthis.groupsService.setGroupProperties(this.featureList);\r\n\r\n\t\t// console.log(this.featureList[this.activeFeatureNum].assets[0].path);\r\n\t\t// this.activeFeature = this.featureList[this.activeFeatureNum];\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activePane.subscribe((next) => {\r\n\t  this.activePane = next;\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  this.activeFeature = next;\r\n\t  if (this.activeFeature)\r\n\t\tconsole.log(this.activeFeature.assets[0].path);\r\n\t});\r\n\r\n\tthis.authService.currentUser.subscribe(next => this.currentUser = next);\r\n\r\n\tthis.projectsService.getProjects();\r\n\tthis.projectsService.projects.subscribe( (projects) => {\r\n\t  this.projects = projects;\r\n\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsService.setActiveProject(this.projects[0]);\r\n\t  }\r\n\r\n\t  this.groupsService.groups.subscribe((next) => {\r\n\t\tthis.groupList = next;\r\n\r\n\t\tif (this.groupList.length > 0) {\r\n\t\t  this.groupsExist = true;\r\n\t\t} else {\r\n\t\t  this.groupsExist = false;\r\n\t\t}\r\n\t  });\r\n\r\n\t  this.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t\tthis.activeFeatureNum = next;\r\n\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  if (e.name == this.activeGroup) {\r\n\t\t\tif (e.features[next]) {\r\n\t\t\t  if (e.features[next].assets[0].display_path) {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].display_path)[0];\r\n\t\t\t  } else {\r\n\t\t\t\tthis.imageName = /[^/]*$/.exec(e.features[next].assets[0].path)[0];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t});\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showGroup.subscribe((next) => {\r\n\t\tthis.showGroup = next;\r\n\t  });\r\n\r\n\t  this.groupsService.showSidebar.subscribe((next) => {\r\n\t\tthis.showSidebar = next;\r\n\t  });\r\n\r\n\t  this.groupsService.tempGroup.subscribe((next) => {\r\n\t\tthis.tempGroup = next;\r\n\t  });\r\n\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t  this.getDataForProject(this.selectedProject);\r\n\t  //retrieves uuid for project, formats result into a link to that Hazmapper map\r\n\t  this.hazMapperLink = \"https://hazmapper.tacc.utexas.edu/hazmapper/project/\" + next.uuid\r\n\t});\r\n\r\n\tthis.geoDataService.mapMouseLocation.pipe(skip(1)).subscribe( (next) => {\r\n\t  this.mapMouseLocation = next;\r\n\t});\r\n\t// this.timerSubscription = this.timer.subscribe( () => {\r\n\t//   this.reloadFeatures();\r\n\t// });\r\n\r\n\t// FIXME Maybe redundant\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  reloadFeatures() {\r\n\tthis.geoDataService.getFeatures(this.selectedProject.id);\r\n  }\r\n\r\n  setLiveRefresh(option: boolean) {\r\n\toption ? this.timerSubscription = this.timer.subscribe(() => { this.reloadFeatures(); }) : this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  selectProject(p: Project): void {\r\n\tthis.projectsService.setActiveProject(p);\r\n\tthis.getDataForProject(p);\r\n  }\r\n\r\n  getDataForProject(p: Project): void {\r\n\tthis.geoDataService.getFeatures(p.id);\r\n\tthis.geoDataService.getOverlays(p.id);\r\n\tthis.geoDataService.getPointClouds(p.id);\r\n  }\r\n\r\n  openFilePicker() {\r\n\tconst modal = this.dialog.open(ModalFileBrowserComponent);\r\n\tmodal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t\tif (files != null) {this.geoDataService.importFileFromTapis(this.selectedProject.id, files);}\r\n\t});\r\n\r\n\t// const modal: BsModalRef = this.bsModalService.show(ModalFileBrowserComponent);\r\n\t// modal.content.onClose.subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openDownloadSelector(fileName:string){\r\n\tconst modal = this.dialog.open(ModalDownloadSelectorComponent);\r\n\tlet path: Array<string>\r\n\tmodal.afterClosed().subscribe( (passbackData: Array<string>) => {\r\n\t\tconsole.log(passbackData)\r\n\t\tpath = passbackData\r\n\t\tthis.saveFile(path[3] == \".json\", true, path[0], path[1], path[2])\r\n\t});\r\n  }\r\n\r\n  // nameGroup(event: any) {\r\n  //\tthis.groupName = event;\r\n  //\tthis.groupsService.setActiveGroup(event.toLowerCase());\r\n  // }\r\n\r\n  openCreateProjectModal() {\r\n\tthis.dialog.open(ModalCreateProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t});\r\n\r\n\t// modal.afterClosed().subscribe( (files: Array<RemoteFile>) => {\r\n\t//   this.geoDataService.importFileFromTapis(this.selectedProject.id, files);\r\n\t// });\r\n  }\r\n\r\n  openShareProjectModal(){\r\n\t  this.dialog.open(ModalShareProjectComponent, {\r\n\t\t  height: '400px',\r\n\t\t  width: '600px',\r\n\t  })\r\n  }\r\n\r\n  openProjectModal(project) {\r\n\t// console.log(project);\r\n\tthis.dialog.open(ModalCurrentProjectComponent, {\r\n\t  height: '400px',\r\n\t  width: '600px',\r\n\t  data: {\r\n\t\tid: project.id,\r\n\t\tname: project.name,\r\n\t\tdescription: project.description,\r\n\t\tuuid: project.uuid\r\n\t  }\r\n\t});\r\n}\r\n\r\n  // TODO This should add color\r\n  addToGroupService(name: string) {\r\n\t// TODO: add group data (name) to Individual Feature property\r\n\t// for (this.featureIds) {\r\n\t//   for this.projectsService.features {\r\n\t//\tif project feature id = this.fatureids {\r\n\t//\t  project feature.properties[groupName] = this.groupName;\r\n\t//\t}\r\n\t//   }\r\n\t// }\r\n\r\n\tthis.groupName = name;\r\n\t// this.groupsService.setActiveGroup(name.toLowerCase());\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\r\n\t// let activeGroup = this.groupList.filter(group => group.name == name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n\tif (this.groupList.length != 1000) {\r\n\t  // TODO Make this better\r\n\t  if (!name || 0 === name.length) {\r\n\t\tconsole.log(\"Invalid Name\");\r\n\t  } else if (this.groupList.filter(e => e.name === name).length) {\r\n\t\tconsole.log(\"Existing Name\");\r\n\t  } else {\r\n\t\tlet myRandColor: string = this.getRandomColor();\r\n\t\tthis.groupList.push({\r\n\t\t  name: name,\r\n\t\t  features: this.tempGroup,\r\n\t\t  color: myRandColor,\r\n\t\t  // featureIds: Object.keys(this.tempGroup),\r\n\t\t});\r\n\t\tthis.groupsService.addGroup(this.groupList);\r\n\t\tthis.formsService.addGroup(this.groupName);\r\n\r\n\t\t// TODO make this work for persistence\r\n\t\tfor (let feat of this.tempGroup) {\r\n\t\t  // this should be a shared group of\r\n\t\t  // all the currently created objects of a particular feature\r\n\r\n\t\t  // let featProp = {group: []};\r\n\r\n\t\t  let featProp = feat.properties;\r\n\r\n\t\t  if (featProp.group) {\r\n\t\t\tconsole.log(\"nope\");\r\n\t\t\tfeatProp.group.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t});\r\n\t\t  } else {\r\n\t\t\tconsole.log(\"This is actually happening\");\r\n\t\t\tlet featPropList = featProp.group = [];\r\n\t\t\tfeatPropList.push({\r\n\t\t\t  name: name,\r\n\t\t\t  color: myRandColor,\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t\t  console.log(\"In control-bar\");\r\n\t\t  console.log(\"Current feat: \" + feat.id);\r\n\t\t  console.log(\"featProp: what gets sent to server\");\r\n\t\t  console.log(featProp);\r\n\t\t  console.log(\"groupList: internal listing\");\r\n\t\t  // console.log(this.groupList);\r\n\t\t}\r\n\t\t// TODO Also should create parser that loops through all features and generates groups in an object\r\n\t  }\r\n\t}\r\n\r\n\t// TODO Clear input value\r\n\t// this.filterName = '';\r\n\t// Also clear selection\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setShowGroup(false);\r\n  }\r\n\r\n  openAddGroupModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n\t// this.modalRef = this.bsModalService.show(template, {class: 'tiny'});\r\n  }\r\n\r\n  openSidebar() {\r\n\tlet showSidebar = !this.showSidebar;\r\n\tlet showGroup = false;\r\n\t// let showGroupButton = !this.showGroupButton;\r\n\tthis.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\tlet activeGroup = this.groupList.filter(group => group.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupsService.setShowSidebar(showSidebar);\r\n\tthis.groupsService.setShowGroup(showGroup);\r\n\tthis.router.navigateByUrl('/tagger', { skipLocationChange: true });\r\n\r\n\tthis.tempGroup = [];\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\tthis.groupsService.setUnselectAll(true);\r\n\tthis.groupsService.setActivePane('tagger');\r\n  }\r\n\r\n  // TODO Make it prettier\r\n  otherPath(dir: boolean) {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\r\n\t// right\r\n\tif (dir) {\r\n\t  this.activeFeatureNum += 1;\r\n\t  this.activeFeatureNum = this.activeFeatureNum % activeGroupObj[0].features.length;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t} else {\r\n\t  if (this.activeFeatureNum == 0) {\r\n\t\tthis.activeFeatureNum = activeGroupObj[0].features.length;\r\n\t  }\r\n\t  this.activeFeatureNum -= 1;\r\n\t  // this.activeFeature = this.tempGroup[this.activeFeatureNum];\r\n\t}\r\n\r\n\t// console.log(this.activeFeatureNum);\r\n\t// console.log(this.activeFeature.assets[0].path);\r\n\r\n\tthis.groupsService.setActiveFeatureNum(this.activeFeatureNum);\r\n\t// console.log(this.activeGroup);\r\n  }\r\n\r\n  getRandomColor() {\r\n\tvar letters = '0123456789ABCDEF';\r\n\tvar color = '#';\r\n\tfor (var i = 0; i < 6; i++) {\r\n\t  color += letters[Math.floor(Math.random() * 16)];\r\n\t}\r\n\treturn color;\r\n  }\r\n\r\n  // TODO\r\n  goToRoute() {\r\n\tif (this.activePane == \"preset\") {\r\n\t  this.groupsService.setActivePane(\"tagger\");\r\n\t  this.router.navigateByUrl('/tagger', {skipLocationChange: true});\r\n\t} else {\r\n\t  this.groupsService.setActivePane(\"preset\");\r\n\t  this.router.navigateByUrl('/preset', {skipLocationChange: true});\r\n\t}\r\n\tthis.groupsService.setActiveGroup(this.activeGroup);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n\r\n  }\r\n\r\n  // TODO\r\n  clearAndUnselect() {\r\n\r\n  }\r\n\r\n  //saves project as a CSV file by first organizing a JSON or a CSV and converting it. Saves to either MyData or local\r\n  saveFile(isJSON:Boolean, forExport:Boolean = false, systemID = \"\", path = \"\", fileName) {\r\n\t  let CSVHolder = \"longitude,latitude,src,groupName,groupColor\\r\\n\"\r\n\t  let JSONHolder: Array<object> = []\r\n\t  let projID = \"\"\r\n\r\n\t  this.featureList.forEach(element => {\r\n\t\t\t//Retrieves project ID for building a filename\r\n\t\t\tprojID = element.project_id\r\n\r\n\t\t  \t//retrieves longitude and latitude values as an array\r\n\t\t\tlet coordinates = element.geometry['coordinates']\r\n\r\n\t\t\t//creates image source URL from environment and cleans up URL to a usable link\r\n\t\t\tlet featureSource = environment.apiUrl + '/assets/' + element.assets[0].path;\r\n\t\t\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\r\n\t\t\t//Grabs group data\r\n\t\t\t//Group data can be accessed from the feature, through the properties element\r\n\t\t\t//If the image doesn't have a group, a placeholder is given\r\n\t\t\t//NOTE: future group properties can be accessed in the same way\r\n\t\t\tlet groupName:String = \"\"\r\n\t\t\tlet groupColor:String = \"\"\r\n\t\t\ttry {\r\n\t\t\t\tgroupName = element.properties['group'][0].name\r\n\t\t\t\tgroupColor = element.properties['group'][0].color\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tgroupName = \"N/A\"\r\n\t\t\t\tgroupColor = \"#000000\"\r\n\t\t\t}\r\n\r\n\t\t\tif (isJSON) {\r\n\t\t\t\t//Alternately compiles it into a JSON\r\n\t\t\t\tlet transferJSON = {\r\n\t\t\t\t\t\"longitude\": coordinates[0],\r\n\t\t\t\t\t\"latitude\": coordinates[1],\r\n\t\t\t\t\t\"src\": featureSource,\r\n\t\t\t\t\t\"groupName\": groupName,\r\n\t\t\t\t\t\"groupColor\": groupColor\r\n\t\t\t\t}\r\n\t\t\t\t//And adds it to a growing list of JSON objects\r\n\t\t\t\tJSONHolder.push(transferJSON)\r\n\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the attributes into a CSV format\r\n\t\t\t\tlet tempCSV = coordinates[0] + \",\" + coordinates[1] + \",\" + featureSource + \",\" + groupName + \",\" + groupColor + \"\\r\\n\"\r\n\t\t\t\t//And adds it to a growing full CSV file\r\n\t\t\t\tCSVHolder += tempCSV\r\n\t\t\t}\r\n\t  });\r\n\t  let content\r\n\t  let extension\r\n\t  //determine whether the file is wanted as a JSON or a CSV\r\n\t\tif (isJSON) {\r\n\t\t\tcontent = JSONHolder\r\n\t\t\textension = \".json\"\r\n\t\t} else {\r\n\t\t\tcontent = CSVHolder\r\n\t\t\textension = \".csv\"\r\n\t\t}\r\n\r\n\t\t//If the function is marked for export to Design Safe, route through export, otherwise, download the file\r\n\t\tif(forExport){\r\n\t\t\t((fileName == \"\")? (fileName = projID + extension): (fileName += extension))\r\n\t\t\tthis.filesService.export(systemID, path, fileName, extension, content)\r\n\t\t}else{\r\n\t\t\tthis.download(content,extension,projID)\r\n\t\t}\r\n\r\n  }\r\n\t\r\n\tdownload(content, extension, projID){\r\n\t  //Creates a download link in typescript through a blob\r\n\t\tlet blob = new Blob(['\\ufeff' + content], {type: 'text/csv;charset=utf-8;' })\r\n\t\tlet download = document.createElement(\"a\")\r\n\t\tlet url = URL.createObjectURL(blob)\r\n\t\tlet filename = \"taggit-proj-\" + projID\r\n\r\n\t\t//checks if the browser is Safari or otherwise, if so open download in new window\r\n\t\tif (navigator.userAgent.indexOf('Safari')!= -1 && navigator.userAgent.indexOf('Chrome') == -1) {\r\n\t\t\tdownload.setAttribute(\"target\", \"_blank\")\r\n\t\t}\r\n\t\t//Sets up the link, and simulates a click\r\n\t\tdownload.setAttribute(\"href\", url)\r\n\t\tdownload.setAttribute(\"download\", filename + extension)\r\n\t\tdownload.style.visibility = \"hidden\"\r\n\t\tdocument.body.appendChild(download)\r\n\t\tdownload.click()\r\n\t\tdocument.body.removeChild(download)\r\n  \t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { AuthService} from './services/authentication.service';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private authSvc: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (request.url.indexOf('https://agave.designsafe-ci.org') > -1) {\r\n            if (this.authSvc.isLoggedIn()) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: 'Bearer ' + this.authSvc.userToken.token\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import {Component, OnInit, Renderer2} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {FeatureAsset, Feature, Project} from '../../models/models';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-image-gallery',\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss']\r\n})\r\n\r\nexport class ImageGalleryComponent implements OnInit {\r\n  environment: AppEnvironment;\r\n  // features: FeatureCollection;\r\n  // FIXME feature collection giving me an error when trying to access assets\r\n  // features: any;\r\n  tempGroup: Array<Feature>;\r\n  groupList: Array<any>;\r\n  // showGroupBar: boolean;\r\n\r\n  public projects: Project[];\r\n  showGroup: boolean;\r\n  groupName: string;\r\n  showSidebar: boolean;\r\n  scrolling: boolean = false;\r\n  status: boolean;\r\n  groupExist: boolean;\r\n  imagesExist: boolean;\r\n  projectsExist: boolean;\r\n  featureList: Array<any> = [];\r\n  featureListScroll: Array<any>;\r\n  scrollSum: number = 15;\r\n  activeGroup: string;\r\n  activeFeature: Feature;\r\n  activeFeatureNum: number;\r\n  featurePath: string;\r\n  loaded: boolean;\r\n\r\n  constructor(private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private renderer: Renderer2,\r\n\t\t\t  private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\r\n\r\n\t// this.activeFeatureNum = 0;\r\n\t// FIXME feature collection giving me an error when trying to access assets\r\n\t// this.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\r\n\tthis.geoDataService.loaded.subscribe(e => {\r\n\t  this.loaded = e;\r\n\t});\r\n\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: any) => {\r\n\t  if (fc) {\r\n\t\tif (fc.features.length > 0) {\r\n\t\t  this.imagesExist = true;\r\n\t\t  this.featureList = fc.features.filter(feature => {\r\n\t\t\treturn feature.assets[0].asset_type == \"image\";\r\n\t\t  });\r\n\r\n\t\t  if (this.scrollSum == 15) {\r\n\t\t\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t  this.imagesExist = false;\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.projects.subscribe((projects) => {\r\n\t  this.projects = projects;\r\n\t  if (this.projects.length) {\r\n\t\tthis.projectsExist = true;\r\n\t  } else {\r\n\t\tthis.projectsExist = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.geoDataService.activeFeature.subscribe((next) => {\r\n\t  if (next) {\r\n\t\tthis.activeFeature = next;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.featureImagesExist.subscribe((next) => {\r\n\t  this.groupExist = next;\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.showGroup.subscribe((next) => {\r\n\t  this.showGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeFeatureNum.pipe(startWith(0)).subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.groupsService.showSidebar.subscribe((next) => {\r\n\t  this.showSidebar = next;\r\n\t  // this.status = !this.status;\r\n\t  if (next) {\r\n\t\tthis.status = true;\r\n\t  } else {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n  }\r\n\r\n  getPath(): string {\r\n\t// let featureSource = this.environment.apiUrl + '/assets/' + this.activeFeature.assets[0].path;\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\tif (activeGroupObj[0] != undefined) {\r\n\t  if (activeGroupObj[0].features[this.activeFeatureNum].assets[0].path == undefined) {\r\n\t\tthis.groupsService.setActiveFeatureNum(0);\r\n\t\t// this.groupsService.setActiveFeatureNum(0);\r\n\t\tif (activeGroupObj[0].features[this.activeFeatureNum] == undefined) {\r\n\t\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + activeGroupObj[0].features[this.activeFeatureNum].assets[0].path;\r\n\tthis.groupsService.setActiveFeatureId(activeGroupObj[0].features[this.activeFeatureNum].id);\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\treturn featureSource;\r\n  }\r\n\r\n  appendSum() {\r\n\tif (this.featureList.length != 0) {\r\n\t  if (this.scrollSum > this.featureList.length) {\r\n\t\tthis.scrollSum = this.featureList.length;\r\n\t  }\r\n\t  if (this.scrollSum == this.featureList.length) {\r\n\t\tthis.spinner.hide();\r\n\t\tthis.scrolling = false;\r\n\t\treturn;\r\n\t  }\r\n\t}\r\n\tthis.featureListScroll = this.featureList.slice(0, this.scrollSum);\r\n\tsetTimeout(() => {\r\n\t  this.spinner.hide();\r\n\t  this.scrolling = false;\r\n\t}, 1300);\r\n  }\r\n\r\n  onScroll() {\r\n\tif (!this.scrolling) {\r\n\t  this.spinner.show();\r\n\t  this.scrollSum += 10;\r\n\t  this.appendSum();\r\n\t  this.scrolling = true;\r\n\t}\r\n\t// if (this.notscrolly && this.notEmptyPost) {\r\n\t//   this.spinner.show();\r\n\t//   this.notscrolly = false;\r\n\t//   this.loadNextPost();\r\n\t// }\r\n\t// console.log('scrolled!!');\r\n  }\r\n}\r\n","import {Component, OnInit, EventEmitter, Input, TemplateRef} from '@angular/core';\r\nimport {Feature, Project} from '../../models/models';\r\nimport {GeoDataService} from '../../services/geo-data.service';\r\nimport {AppEnvironment, environment} from '../../../environments/environment';\r\nimport {GroupsService} from \"../../services/groups.service\";\r\nimport {ProjectsService} from \"../../services/projects.service\";\r\nimport { BsModalService } from 'ngx-foundation/modal';\r\nimport { BsModalRef } from 'ngx-foundation/modal/bs-modal-ref.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-image-box',\r\n  templateUrl: './image-box.component.html',\r\n  styleUrls: ['./image-box.component.scss']\r\n})\r\n\r\nexport class ImageBoxComponent implements OnInit {\r\n  @Input() feature: Feature;\r\n  // @Output() clickRequest = new EventEmitter<Feature>();\r\n  environment: AppEnvironment;\r\n  featureSource: string;\r\n  featurePath: string;\r\n  status: boolean = false;\r\n  hasGroup: boolean = false;\r\n  colors: Array<string> = [];\r\n  groupList: Array<any>;\r\n  coordinates: Array<any>;\r\n  containingGroupList: Array<any>;\r\n  currentGroup: string = \"hello\";\r\n  tempGroup: Array<Feature>;\r\n  modalRef: BsModalRef;\r\n  activeGroup: string;\r\n\r\n  public selectedProject: Project;\r\n\r\n  unselectAll: boolean = false;\r\n\r\n  // FIXME Bad\r\n  imageCollection: any = {};\r\n\r\n  constructor( private geoDataService: GeoDataService,\r\n\t\t\t   private groupsService: GroupsService,\r\n\t\t\t   private projectsService: ProjectsService,\r\n\t\t\t   private modalService: BsModalService,\r\n\t\t\t   private dialog: MatDialog\r\n\t\t\t ){ }\r\n\r\n  ngOnInit() {\r\n\tthis.environment = environment;\r\n\tlet featureSource = this.environment.apiUrl + '/assets/' + this.feature.assets[0].path;\r\n\tfeatureSource = featureSource.replace(/([^:])(\\/{2,})/g, '$1/');\r\n\tthis.featureSource = featureSource;\r\n\tthis.coordinates = this.feature.geometry['coordinates'];\r\n\t// console.log(coordinates[0]);\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\r\n\t  if (this.groupList != null && this.groupList.length > 0 && this.featureSource != null) {\r\n\t\tthis.groupList.forEach(e => {\r\n\t\t  e.features.forEach(c => {\r\n\r\n\t\t\tif (c.id == this.feature.id) {\r\n\t\t\t  if (!this.colors.includes(e.color)) {\r\n\t\t\t\tthis.colors.push(e.color);\r\n\t\t\t\t//console.log(e.color);\r\n\t\t\t  }\r\n\t\t\t  this.hasGroup = true;\r\n\t\t\t}\r\n\t\t  });\r\n\t\t});\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.tempGroup.subscribe((next) => {\r\n\t  this.tempGroup = next;\r\n\t});\r\n\r\n\tthis.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n\r\n\r\n\tthis.groupsService.unselectAll.subscribe((next) => {\r\n\t  this.unselectAll = next;\r\n\t  if (this.unselectAll == true) {\r\n\t\tthis.status = false;\r\n\t  }\r\n\t});\r\n\tlet featurePath = this.feature.assets[0].display_path\r\n\tfeaturePath = this.feature.assets[0].display_path\r\n\tthis.featurePath = featurePath\r\n  }\r\n\r\n  // click() {\r\n  //   this.clickRequest.emit(this.feature);\r\n\r\n  // // imageSelect(event: any) {\r\n  // //   if (event.target.classList.contains('img-selected')) {\r\n  // //     this.renderer.removeClass(event.target, \"img-selected\");\r\n  // //     this.renderer.addClass(event.target, \"img-unselected\");\r\n  // //   } else {\r\n  // //     this.renderer.removeClass(event.target, \"img-unselected\");\r\n  // //     this.renderer.addClass(event.target, \"img-selected\");\r\n  // //   }\r\n  // // }\r\n\r\n  // }\r\n  // delete() {\r\n  //   this.geoDataService.deleteFeature(this.feature);\r\n  // }\r\n\r\n\r\n  imageSelect() {\r\n\tif (this.unselectAll == true) {\r\n\t  this.unselectAll = false;\r\n\t  this.groupsService.setUnselectAll(false);\r\n\t}\r\n\tthis.status = !this.status;\r\n\r\n\tif (this.tempGroup.filter(v => v.assets[0].id == this.feature.assets[0].id).length > 0) {\r\n\t  this.tempGroup = this.tempGroup.filter(v => v.assets[0].id != this.feature.assets[0].id);\r\n\t} else {\r\n\t  this.tempGroup.push(this.feature);\r\n\t}\r\n\r\n\tthis.groupsService.addTempGroup(this.tempGroup);\r\n\t// console.log(this.tempGroup.filter(v => v.assets[0].id == feature.assets[0].id).length > 0)\r\n\r\n\t// Hide group-bar\r\n\tif (this.tempGroup.length == 0) {\r\n\t  this.groupsService.setShowGroup(false);\r\n\t} else {\r\n\t  this.groupsService.setShowGroup(true);\r\n\t}\r\n\r\n  }\r\n\r\n  imageZoom(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'full'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  imageDelete() {\r\n\t  const geoData = this.geoDataService;\r\n\tthis.tempGroup.forEach(function (value) {\r\n\t\tgeoData.deleteFeature(value);\r\n\t})\r\n  }\r\n\r\n  openMoreGroupsModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  openImageDeleteModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteFromGroup(color: string) {\r\n\tconsole.log(this.groupList);\r\n\tthis.groupList.forEach(e => {\r\n\t  // When it is the sole feature\r\n\t  if (e.features.length <= 1) {\r\n\t\tthis.groupList = this.groupList.filter(e => e.color != color);\r\n\t  } else {\r\n\t\tif (e.color == color) {\r\n\t\t  e.features = e.features.filter(i => i.id != this.feature.id);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.color != color);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\tthis.colors = this.colors.filter(e => e != color);\r\n  }\r\n\r\n  openImageAddModal(template: TemplateRef<any>) {\r\n\t// this.modalRef = this.modalService.show(template, {class: 'tiny'});\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  selectGroupForm (name: string) {\r\n\tlet color = \"\";\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == name) {\r\n\t\te.features.push(this.feature);\r\n\t\tcolor = e.color;\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.feature.properties;\r\n\tif (featProp.group) {\r\n\t  let featGroupList = featProp.group.map(e => {\r\n\t\treturn e.name;\r\n\t  });\r\n\r\n\t  if (!featGroupList.includes(name)) {\r\n\t\tfeatProp.group.push({\r\n\t\t  name: name,\r\n\t\t  color: color,\r\n\t\t});\r\n\t  }\r\n\t} else {\r\n\t  featProp.group = [];\r\n\t  featProp.group.push({\r\n\t\tname: name,\r\n\t\tcolor: color,\r\n\t  });\r\n\t}\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.feature.id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n  }\r\n\r\n  getGroupNameFromColor(color: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.color == color) {\r\n\t\tthis.currentGroup = e.name;\r\n\t  }\r\n\t});\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormsService } from '../../../../services/forms.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\n\r\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\r\n  @Input() field: any;\r\n  private formGroup$: Subscription;\r\n  form: FormGroup;\r\n\r\n\r\n  constructor(private formsService: FormsService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.formGroup$ = this.formsService.formGroup.subscribe((next) => {\r\n\t  this.form = next;\r\n\t});\r\n\r\n  }\r\n\r\n// export class FormGeneratorComponent implements OnInit, OnChanges {\r\n  name = new FormControl('');\r\n\r\n  get isValid() { return this.form.controls[this.field.label].valid; }\r\n\r\n  ngOnDestroy() {\r\n\tthis.formGroup$.unsubscribe();\r\n  }\r\n  // @Output() onSubmit = new EventEmitter();\r\n  // @Input() fields: any[] = [];\r\n  // form: FormGroup;\r\n\r\n  // ngOnInit() {\r\n  //\tthis.generateFields();\r\n  //\t// let fieldsCtrls = {};\r\n  //\t// for (let f of this.fields) {\r\n  //\t//   if (f.type != 'checkbox') {\r\n  //\t// fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t//   } else {\r\n  //\t// let opts = {};\r\n  //\t// for (let opt of f.options) {\r\n  //\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t// }\r\n  //\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t//   }\r\n  //\t// }\r\n  //\t// this.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n\r\n  // // Combine this with\r\n  // ngOnChanges() {\r\n  //\tthis.generateFields();\r\n  // }\r\n\r\n  // generateFields() {\r\n  //\tlet fieldsCtrls = {};\r\n\r\n  //\tfor (let f of this.fields) {\r\n  //\t  // if (f.type != 'checkbox') {\r\n  //\t\tfieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\r\n  //\t  // } else {\r\n  //\t\t// let opts = {};\r\n  //\t\t// for (let opt of f.options) {\r\n  //\t\t//   opts[opt.key] = new FormControl(opt.value);\r\n  //\t\t// }\r\n  //\t\t// fieldsCtrls[f.name] = new FormGroup(opts)\r\n  //\t  // }\r\n  //\t}\r\n\r\n  //\tthis.form = new FormGroup(fieldsCtrls);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.scss']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, TemplateRef} from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-group',\r\n  templateUrl: './select-group.component.html',\r\n  styleUrls: ['./select-group.component.scss']\r\n})\r\nexport class SelectGroupComponent implements OnInit, OnDestroy {\r\n\r\n  featureList: Array<any> = [];\r\n\r\n  groups$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  public selectedProject: Project;\r\n\r\n  selectedGroup: string;\r\n  groupList: Array<any>;\r\n  showSidebar: boolean\r\n  activeGroup: string;\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService,\r\n\t\t\t  private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  selectGroupForm(group: string) {\r\n\tthis.groupsService.setActiveGroup(group);\r\n\r\n\tlet activeGroup = this.groupList.filter(what => what.name == this.activeGroup);\r\n\r\n\tif (activeGroup[0].features.length == 0) {\r\n\t  this.groupsService.setFeatureImagesExist(false);\r\n\t} else {\r\n\t  this.groupsService.setFeatureImagesExist(true);\r\n\t}\r\n\tthis.groupsService.setActiveFeatureNum(0);\r\n\tthis.formsService.changeGroupForm(group);\r\n  }\r\n\r\n  openRenameOptionModal(template: TemplateRef<any>) {\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\r\n\t  // let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t  // if (activeGroup[0].features.length == 0) {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(false);\r\n\t  // } else {\r\n\t  //\tthis.groupsService.setFeatureImagesExist(true);\r\n\t  // }\r\n\t}\r\n  }\r\n\r\n  openRenameModal(template: TemplateRef<any>, name: string) {\r\n\tthis.selectedGroup = name;\r\n\tthis.dialog.open(template);\r\n  }\r\n\r\n  isChecked(name: string) {\r\n\tif (this.activeGroup == name) {\r\n\t  return \"checked\";\r\n\t} else {\r\n\t  return \"\";\r\n\t}\r\n  }\r\n\r\n  renameGroup(name: string) {\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.selectedGroup) {\r\n\t\te.name = name;\r\n\t  }\r\n\t});\r\n\r\n\tthis.groupsService.addGroup(this.groupList);\r\n\r\n\tthis.groupsService.setActiveGroup(name);\r\n\r\n\t// let activeGroup = this.groupList.filter(what => what.name == this.activeGroup[0].name);\r\n\r\n\t// if (activeGroup[0].features.length == 0) {\r\n\t//   this.groupsService.setFeatureImagesExist(false);\r\n\t// } else {\r\n\t//   this.groupsService.setFeatureImagesExist(true);\r\n\t// }\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FeatureCollection} from 'geojson';\r\nimport { Project } from '../../../models/models';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { GeoDataService } from '../../../services/geo-data.service';\r\nimport { FormsService } from '../../../services/forms.service';\r\nimport { GroupsService } from '../../../services/groups.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-select-image',\r\n  templateUrl: './select-image.component.html',\r\n  styleUrls: ['./select-image.component.scss']\r\n})\r\n\r\nexport class SelectImageComponent implements OnInit, OnDestroy {\r\n  groups$: Subscription;\r\n  activeFeatureNum$: Subscription;\r\n  activeGroup$: Subscription;\r\n\r\n  featureList: Array<any> = [];\r\n  public selectedProject: Project;\r\n  groupList: Array<any> = [];\r\n  activeGroup: string;\r\n  activeFeatureNum: number;\r\n  showSidebar: boolean\r\n  showSubitem: boolean = true;\r\n\r\n  constructor(private formsService: FormsService,\r\n\t\t\t  private groupsService: GroupsService,\r\n\t\t\t  private geoDataService: GeoDataService,\r\n\t\t\t  private projectsService: ProjectsService) {}\r\n\r\n  ngOnInit() {\r\n\tthis.geoDataService.features.subscribe( (fc: FeatureCollection) => {\r\n\t  if (fc) {\r\n\t\tthis.featureList = fc.features;\r\n\t  }\r\n\t});\r\n\r\n\tthis.projectsService.activeProject.subscribe(next => {\r\n\t  this.selectedProject = next;\r\n\t});\r\n\r\n\tthis.groups$ = this.groupsService.groups.subscribe((next) => {\r\n\t  this.groupList = next;\r\n\t});\r\n\r\n\tthis.activeFeatureNum$ = this.groupsService.activeFeatureNum.subscribe((next) => {\r\n\t  this.activeFeatureNum = next;\r\n\t});\r\n\r\n\tthis.activeGroup$ = this.groupsService.activeGroup.subscribe((next) => {\r\n\t  this.activeGroup = next;\r\n\t});\r\n  }\r\n\r\n  getActiveFeatures() {\r\n\tlet activeGroupObj = this.groupList.filter(realGroup => realGroup.name === this.activeGroup);\r\n\treturn activeGroupObj[0].features;\r\n  }\r\n\r\n  jumpToImage(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\tthis.groupsService.setActiveFeatureNum(index);\r\n  }\r\n\r\n  isActiveFeature(asset: any) {\r\n\tlet index = 0;\r\n\tthis.groupList.forEach(e => {\r\n\t  if (e.name == this.activeGroup) {\r\n\t\tindex = e.features.indexOf(asset)\r\n\t  }\r\n\t});\r\n\treturn this.activeFeatureNum == index;\r\n  }\r\n\r\n  deleteGroup() {\r\n\tthis.groupsService.addGroup(this.groupList.filter(what => what.name != this.activeGroup))\r\n\r\n\tfor (let feat of this.featureList) {\r\n\t  // this should be a shared group of\r\n\t  // all the currently created objects of a particular feature\r\n\r\n\t  let featProp = feat.properties;\r\n\t  featProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\t  this.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNumber(feat.id),\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeatProp);\r\n\t}\r\n\r\n\tif (this.groupList.length <= 0) {\r\n\t  this.showSidebar = false;\r\n\t  this.groupsService.setShowSidebar(this.showSidebar);\r\n\t} else {\r\n\t  this.groupsService.setActiveGroup(this.groupList[0].name);\r\n\t}\r\n  }\r\n\r\n  deleteAsset(assetId: any) {\r\n\tthis.groupList.forEach(group => {\r\n\t  if (group.name === this.activeGroup) {\r\n\t\tif (group.features.length == 1) {\r\n\t\t  this.deleteGroup();\r\n\t\t} else {\r\n\t\t  group.features = group.features.filter(asset => asset.id != assetId);\r\n\t\t  this.groupsService.addGroup(this.groupList);\r\n\t\t}\r\n\t  }\r\n\t});\r\n\r\n\tlet featProp = this.getActiveFeatures().properties;\r\n\r\n\tfeatProp.group = featProp.group.filter(e => e.name != this.activeGroup);\r\n\r\n\tthis.geoDataService.updateFeatureProperty(this.selectedProject.id,\r\n\t\t\t\t\t\t\t\t\t\t\t  Number(this.getActiveFeatures().id),\r\n\t\t\t\t\t\t\t\t\t\t\t  featProp);\r\n  }\r\n\r\n  getAssetDisplay(asset: any) {\r\n\tif (asset.assets[0].display_path) {\r\n\t  return /[^/]*$/.exec(asset.assets[0].display_path)[0];\r\n\t} else {\r\n\t  let apath = /[^/]*$/.exec(asset.assets[0].path)[0];\r\n\t  return apath.slice(0, 15) + \"...\"\r\n\t}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\tthis.groups$.unsubscribe();\r\n\tthis.activeFeatureNum$.unsubscribe();\r\n\tthis.activeGroup$.unsubscribe();\r\n  }\r\n\r\n  expandPanel() {\r\n\tthis.showSubitem = !this.showSubitem;\r\n\tif (this.showSubitem) {\r\n\r\n\t} else {\r\n\t}\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// CommonModule for dynamic field\r\nimport {APP_BASE_HREF, CommonModule} from '@angular/common';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport {ModalModule, BsDropdownModule, AccordionModule} from 'ngx-foundation';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\n\r\nimport { FileSizeModule } from 'ngx-filesize';\r\nimport { ApiModule} from 'ng-tapis';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent} from './components/map/map.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NotFoundComponent } from './components/notfound/notfound.component';\r\nimport { ControlBarComponent } from './components/control-bar/control-bar.component';\r\nimport { AuthService } from './services/authentication.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {AuthInterceptor, TokenInterceptor} from './app.interceptors';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport { ModalFileBrowserComponent } from './components/modal-file-browser/modal-file-browser.component';\r\nimport {environment} from '../environments/environment';\r\nimport { ImageGalleryComponent } from './components/image-gallery/image-gallery.component';\r\n// import { TaggerComponent } from './components/tagger/tagger.component';\r\n// import { PresetGeneratorComponent } from './components/preset-generator/preset-generator.component';\r\nimport { ImageBoxComponent } from './components/image-box/image-box.component';\r\nimport { FormGeneratorComponent } from './components/side-bar/tag-images/form-generator/form-generator.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\n// import { ImageListComponent } from './components/image-list/image-list.component';\r\nimport { SelectGroupComponent } from './components/side-bar/select-group/select-group.component';\r\nimport { SelectImageComponent } from './components/side-bar/select-image/select-image.component';\r\nimport { TagGeneratorComponent } from './components/side-bar/tag-generator/tag-generator.component';\r\nimport { TagImagesComponent } from './components/side-bar/tag-images/tag-images.component';\r\nimport { ModalCreateProjectComponent } from './components/modal-create-project/modal-create-project.component';\r\nimport { ModalCurrentProjectComponent } from './components/modal-current-project/modal-current-project.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MatProgressBar } from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { ModalDownloadSelectorComponent } from './components/modal-download-selector/modal-download-selector.component';\r\nimport { ModalShareProjectComponent } from './components/modal-share-project/modal-share-project.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\tAppComponent, MapComponent, NotFoundComponent, MainComponent,\r\n\tControlBarComponent,\r\n\tCallbackComponent,\r\n\tModalFileBrowserComponent,\r\n\tImageGalleryComponent,\r\n\t// TaggerComponent,\r\n\t// PresetGeneratorComponent,\r\n\tImageBoxComponent,\r\n\tFormGeneratorComponent,\r\n\tSideBarComponent,\r\n\t// ImageListComponent,\r\n\tSelectGroupComponent,\r\n\tSelectImageComponent,\r\n\tTagGeneratorComponent,\r\n\tTagImagesComponent,\r\n\tModalCreateProjectComponent,\r\n\tModalCurrentProjectComponent,\r\n\tMatProgressBar,\r\n\tModalDownloadSelectorComponent,\r\n\tModalShareProjectComponent\r\n  ],\r\n  imports: [\r\n\t// this is for the ng-tapis library\r\n\tApiModule.forRoot({rootUrl: 'https://agave.designsafe-ci.org/'}),\r\n\tBrowserModule,\r\n\tAppRoutingModule,\r\n\tHttpClientModule,\r\n\tBrowserAnimationsModule,\r\n\tInfiniteScrollModule,\r\n\tNgxSpinnerModule,\r\n\tNgxMasonryModule,\r\n\tModalModule.forRoot(),\r\n\tMatMenuModule,\r\n\tMatToolbarModule,\r\n\tMatButtonModule,\r\n\tMatDialogModule,\r\n\tMatTooltipModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatSelectModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tAccordionModule.forRoot(),\r\n\tReactiveFormsModule,\r\n\tFormsModule,\r\n\tFileSizeModule,\r\n\tBsDropdownModule.forRoot(),\r\n\tCommonModule,\r\n\tMatProgressSpinnerModule,\r\n\tScrollingModule,\r\n\tMatTreeModule,\r\n\tMatSnackBarModule,\r\n\tMatCardModule\r\n  ],\r\n  providers: [\r\n\tAuthService,\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: AuthInterceptor\r\n\t},\r\n\t{\r\n\t  provide: HTTP_INTERCEPTORS,\r\n\t  multi: true,\r\n\t  useClass: TokenInterceptor\r\n\t},\r\n\t{\r\n\t  provide: APP_BASE_HREF,\r\n\t  useValue: environment.baseHref\r\n\t}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ModalFileBrowserComponent, ModalDownloadSelectorComponent, ModalCreateProjectComponent, ModalCurrentProjectComponent, ModalShareProjectComponent]\r\n})\r\nexport class AppModule { }\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \"<div class=\\\"tag-forms\\\">\\r\\n  <div class=\\\"subitem-title\\\" (click)=\\\"expandPanel()\\\">\\r\\n\\t<span>\\r\\n\\t  Tag Images\\r\\n\\t</span>\\r\\n\\t<span>\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Export Tags\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-file-download\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t(click)=\\\"createNewTag()\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Add New Tag\\\"\\r\\n\\t\\t\\tstyle=\\\"cursor: pointer; margin-right: 10px\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-plus\\\"></i>\\r\\n\\t  </span>\\r\\n\\r\\n\\t  <span style=\\\"cursor: pointer; margin-right: 20px\\\"\\r\\n\\t\\t\\tmatTooltip=\\\"Save Tags\\\"\\r\\n\\t\\t\\tmatTooltipPosition=\\\"above\\\">\\r\\n\\t\\t<i class=\\\"fas fa-save\\\"></i>\\r\\n\\t  </span>\\r\\n\\t</span>\\r\\n  </div> <!-- subitem-title -->\\r\\n\\r\\n  <div *ngIf=\\\"showSubitem\\\" class=\\\"subitem\\\">\\r\\n\\t<div class=\\\"subitem-scroll\\\">\\r\\n\\t  <div *ngIf=\\\"(formsService.activeFormList | async)?.length > 0; else elseBlock\\\">\\r\\n\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"formsService.formGroup | async\\\">\\r\\n <!--  -->\\r\\n\\t\\t  <div *ngFor=\\\"let form of formsService.activeFormList | async\\\" class=\\\"main-form-container\\\">\\r\\n\\t\\t\\t<div class=\\\"form-item-container\\\">\\r\\n\\r\\n\\t\\t\\t  <div class=\\\"name-group\\\">\\r\\n\\t\\t\\t\\t{{form.label}} ({{form.type}})\\r\\n\\t\\t\\t  </div> <!-- name-group -->\\r\\n\\r\\n\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div (click)=\\\"formsService.deleteForm(activeGroup, form)\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div (click)=\\\"openRenameOptionModal(renameFormItemModal)\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t matTooltipPosition=\\\"above\\\"\\r\\n\\t\\t\\t\\t\\t style=\\\"cursor: pointer\\\">\\r\\n\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"form.type != 'text'\\\">\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"openOptionToggle(form.label)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-ellipsis-h\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"More Options\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"above\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<ng-template #renameFormItemModal>\\r\\n\\t\\t\\t\\t  <input matInput #formItemRename\\r\\n\\t\\t\\t\\t\\t\\t placeholder=\\\"Rename Form Item\\\">\\r\\n\\t\\t\\t\\t  <br/>\\r\\n\\t\\t\\t\\t  <br/>\\r\\n\\t\\t\\t\\t  <div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t<button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\tmat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(click)=\\\"formsService.renameForm(activeGroup, form, formItemRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t\\t<button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\tmat-button>Cancel</button>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t  </div> <!-- button group -->\\r\\n\\t\\t\\t</div>  <!-- form-item-container -->\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t<div *ngIf=\\\"form.options.length && form.type != 'text' && openOption[form.label]\\\" class=\\\"options-container\\\">\\r\\n\\r\\n\\t\\t\\t  <div *ngFor=\\\"let opt of form.options\\\" class=\\\"list-group list-suboptions\\\">\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t  {{opt.label}}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"formsService.deleteOption(activeGroup, opt, form)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-minus\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"Delete\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t  <div (click)=\\\"openRenameOptionModal(renameDeeperOptionModal)\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-edit\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltip=\\\"Rename\\\"\\r\\n\\t\\t\\t\\t\\t   style=\\\"cursor: pointer\\\"\\r\\n\\t\\t\\t\\t\\t   matTooltipPosition=\\\"below\\\">\\r\\n\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t\\t  <ng-template #renameDeeperOptionModal>\\r\\n\\t\\t\\t\\t\\t<input matInput #optionDeeperRename\\r\\n\\t\\t\\t\\t\\t\\t   placeholder=\\\"Rename Option\\\">\\r\\n\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"button-group\\\">\\r\\n\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t  mat-raised-button\\r\\n\\t\\t\\t\\t\\t\\t\\t  color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t  (click)=\\\"formsService.renameOption(activeGroup, opt, form, optionDeeperRename.value)\\\">Rename</button>\\r\\n\\t\\t\\t\\t\\t  <button matDialogClose\\r\\n\\t\\t\\t\\t\\t\\t\\t  mat-button>Cancel</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </ng-template>\\r\\n\\t\\t\\t\\t</div> <!-- button-ggroup -->\\r\\n\\t\\t\\t  </div> <!-- option loop -->\\r\\n\\t\\t\\t</div> <!-- options container -->\\r\\n\\r\\n\\r\\n\\t\\t\\t<!-- <app-form-generator [form]=\\\"form\\\"></app-form-generator> -->\\r\\n\\t\\t\\t<app-form-generator [field]=\\\"form\\\"></app-form-generator>\\r\\n\\t\\t\\t<!-- Conditional -->\\r\\n\\t\\t\\t<!-- <div *ngIf=\\\"(formsService.activeFormList | async)?.length > 0; else elseBlock\\\"> -->\\r\\n\\t\\t\\t  <!-- Does not work without this -->\\r\\n\\t\\t\\t  <!-- <div *ngIf=\\\"fields\\\"> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator [fields]=\\\"getFields()\\\"></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- <app-form-generator [fields]=\\\"fields\\\"></app-form-generator> -->\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t  <!-- </div> -->\\r\\n\\r\\n\\r\\n\\t\\t  </div> <!-- loop -->\\r\\n\\r\\n\\t\\t  <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</form>\\r\\n\\t  </div> <!-- conditional -->\\r\\n\\t</div> <!-- subitem scroll -->\\r\\n  </div> <!--subitem -->\\r\\n\\r\\n  <ng-template #elseBlock>\\r\\n\\tNo tag presets for this Group!\\r\\n  </ng-template>\\r\\n\\r\\n</div> <!-- tag-forms -->\\r\\n\"","export default \"<!-- <label for=\\\"\\\"> -->\\r\\n<!--   Name: -->\\r\\n<!--   <\\\\!-- {{field.label}} -\\\\-> -->\\r\\n<!--   <input name=\\\"\\\" [formControl]=\\\"name\\\"/> -->\\r\\n<!-- </label> -->\\r\\n\\r\\n<div [formGroup]=\\\"form\\\">\\r\\n  <!-- <label [attr.for]=\\\"field.label\\\">{{field.label}}</label> -->\\r\\n\\r\\n  <div [ngSwitch]=\\\"field.type\\\" class=\\\"form-controls\\\">\\r\\n\\t<mat-form-field *ngSwitchCase=\\\"'text'\\\">\\r\\n\\t  <input matInput color=\\\"primary\\\" [formControlName]=\\\"field.label\\\"\\r\\n\\t\\t\\t [id]=\\\"field.label\\\" [type]=\\\"field.type\\\">\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<mat-form-field *ngSwitchCase=\\\"'dropdown'\\\">\\r\\n\\t  <mat-select [id]=\\\"field.label\\\" [id]=\\\"field.label\\\" [formControlName]=\\\"field.label\\\">\\r\\n\\t\\t<mat-option *ngFor=\\\"let opt of field.options\\\" [value]=\\\"opt.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-option>\\r\\n\\t  </mat-select>\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n\\t  <mat-radio-group [formControlName]=\\\"field.label\\\" class=\\\"radio-group\\\">\\r\\n\\t\\t<mat-radio-button *ngFor=\\\"let opt of field.options\\\" class=\\\"input-group\\\" type=\\\"radio\\\" [value]=\\\"opt.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-radio-button>\\r\\n\\t  </mat-radio-group>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n\\t  <div *ngFor=\\\"let opt of field.options\\\" [id]=\\\"field.label\\\" class=\\\"input-group\\\">\\r\\n\\t\\t<mat-checkbox type=\\\"checkbox\\\" [value]=\\\"opt.label\\\" [formControlName]=\\\"field.label\\\">\\r\\n\\t\\t  {{opt.label}}\\r\\n\\t\\t</mat-checkbox>\\r\\n\\t  </div>\\r\\n\\t</ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\">{{field.label}} is required</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <form (ngSubmit)=\\\"onSubmit.emit(this.form.value)\\\" [formGroup]=\\\"form\\\" class=\\\"form-horizontal\\\"> -->\\r\\n<!--   <div *ngFor=\\\"let field of formsService.activeFormList | async\\\"> -->\\r\\n<!--   <\\\\!-- <div *ngFor=\\\"let field of fields\\\"> -\\\\-> -->\\r\\n<!--\\t<\\\\!-- <app-form-fields [field]=\\\"field\\\" [form]=\\\"form\\\"></app-form-fields> -\\\\-> -->\\r\\n<!--   </div> -->\\r\\n<!-- </form> -->\\r\\n\""]}